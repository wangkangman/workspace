

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 17:21:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1824
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1824 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000E                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  010C                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  018C                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020E                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029E                     	;# 
   202  0311                     	;# 
   203  0311                     	;# 
   204  0312                     	;# 
   205  0313                     	;# 
   206  0318                     	;# 
   207  0318                     	;# 
   208  0319                     	;# 
   209  031A                     	;# 
   210  038C                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  039A                     	;# 
   216  039C                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  041C                     	;# 
   224  041D                     	;# 
   225  041E                     	;# 
   226  0FE4                     	;# 
   227  0FE5                     	;# 
   228  0FE6                     	;# 
   229  0FE7                     	;# 
   230  0FE8                     	;# 
   231  0FE9                     	;# 
   232  0FEA                     	;# 
   233  0FEB                     	;# 
   234  0FED                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000E                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  008C                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010E                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  011E                     	;# 
   296  018C                     	;# 
   297  018E                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020C                     	;# 
   319  020E                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0298                     	;# 
   345  0298                     	;# 
   346  0299                     	;# 
   347  029A                     	;# 
   348  029B                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  029E                     	;# 
   352  029E                     	;# 
   353  0311                     	;# 
   354  0311                     	;# 
   355  0312                     	;# 
   356  0313                     	;# 
   357  0318                     	;# 
   358  0318                     	;# 
   359  0319                     	;# 
   360  031A                     	;# 
   361  038C                     	;# 
   362  038E                     	;# 
   363  0391                     	;# 
   364  0392                     	;# 
   365  0393                     	;# 
   366  039A                     	;# 
   367  039C                     	;# 
   368  039D                     	;# 
   369  039E                     	;# 
   370  039F                     	;# 
   371  0415                     	;# 
   372  0416                     	;# 
   373  0417                     	;# 
   374  041C                     	;# 
   375  041D                     	;# 
   376  041E                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000E                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  008C                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  010C                     	;# 
   433  010E                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  018C                     	;# 
   448  018E                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020E                     	;# 
   471  0211                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0212                     	;# 
   475  0213                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0214                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0216                     	;# 
   484  0216                     	;# 
   485  0217                     	;# 
   486  0217                     	;# 
   487  0291                     	;# 
   488  0291                     	;# 
   489  0292                     	;# 
   490  0293                     	;# 
   491  0294                     	;# 
   492  0295                     	;# 
   493  0295                     	;# 
   494  0296                     	;# 
   495  0298                     	;# 
   496  0298                     	;# 
   497  0299                     	;# 
   498  029A                     	;# 
   499  029B                     	;# 
   500  029C                     	;# 
   501  029D                     	;# 
   502  029E                     	;# 
   503  029E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  038C                     	;# 
   513  038E                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0415                     	;# 
   523  0416                     	;# 
   524  0417                     	;# 
   525  041C                     	;# 
   526  041D                     	;# 
   527  041E                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000E                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  008C                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010E                     	;# 
   585  0111                     	;# 
   586  0112                     	;# 
   587  0113                     	;# 
   588  0114                     	;# 
   589  0115                     	;# 
   590  0116                     	;# 
   591  0117                     	;# 
   592  0118                     	;# 
   593  0119                     	;# 
   594  011A                     	;# 
   595  011B                     	;# 
   596  011D                     	;# 
   597  011E                     	;# 
   598  018C                     	;# 
   599  018E                     	;# 
   600  0191                     	;# 
   601  0191                     	;# 
   602  0192                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019C                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  020C                     	;# 
   621  020E                     	;# 
   622  0211                     	;# 
   623  0211                     	;# 
   624  0212                     	;# 
   625  0212                     	;# 
   626  0213                     	;# 
   627  0213                     	;# 
   628  0214                     	;# 
   629  0214                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0294                     	;# 
   643  0295                     	;# 
   644  0295                     	;# 
   645  0296                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029B                     	;# 
   651  029C                     	;# 
   652  029D                     	;# 
   653  029E                     	;# 
   654  029E                     	;# 
   655  0311                     	;# 
   656  0311                     	;# 
   657  0312                     	;# 
   658  0313                     	;# 
   659  0318                     	;# 
   660  0318                     	;# 
   661  0319                     	;# 
   662  031A                     	;# 
   663  038C                     	;# 
   664  038E                     	;# 
   665  0391                     	;# 
   666  0392                     	;# 
   667  0393                     	;# 
   668  039A                     	;# 
   669  039C                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0415                     	;# 
   674  0416                     	;# 
   675  0417                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000E                     	;# 
   704  0011                     	;# 
   705  0012                     	;# 
   706  0013                     	;# 
   707  0015                     	;# 
   708  0016                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001C                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  008C                     	;# 
   719  008E                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  010C                     	;# 
   735  010E                     	;# 
   736  0111                     	;# 
   737  0112                     	;# 
   738  0113                     	;# 
   739  0114                     	;# 
   740  0115                     	;# 
   741  0116                     	;# 
   742  0117                     	;# 
   743  0118                     	;# 
   744  0119                     	;# 
   745  011A                     	;# 
   746  011B                     	;# 
   747  011D                     	;# 
   748  011E                     	;# 
   749  018C                     	;# 
   750  018E                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0199                     	;# 
   761  019A                     	;# 
   762  019B                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  019C                     	;# 
   768  019D                     	;# 
   769  019E                     	;# 
   770  019F                     	;# 
   771  020C                     	;# 
   772  020E                     	;# 
   773  0211                     	;# 
   774  0211                     	;# 
   775  0212                     	;# 
   776  0212                     	;# 
   777  0213                     	;# 
   778  0213                     	;# 
   779  0214                     	;# 
   780  0214                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0216                     	;# 
   786  0216                     	;# 
   787  0217                     	;# 
   788  0217                     	;# 
   789  0291                     	;# 
   790  0291                     	;# 
   791  0292                     	;# 
   792  0293                     	;# 
   793  0294                     	;# 
   794  0295                     	;# 
   795  0295                     	;# 
   796  0296                     	;# 
   797  0298                     	;# 
   798  0298                     	;# 
   799  0299                     	;# 
   800  029A                     	;# 
   801  029B                     	;# 
   802  029C                     	;# 
   803  029D                     	;# 
   804  029E                     	;# 
   805  029E                     	;# 
   806  0311                     	;# 
   807  0311                     	;# 
   808  0312                     	;# 
   809  0313                     	;# 
   810  0318                     	;# 
   811  0318                     	;# 
   812  0319                     	;# 
   813  031A                     	;# 
   814  038C                     	;# 
   815  038E                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  0393                     	;# 
   819  039A                     	;# 
   820  039C                     	;# 
   821  039D                     	;# 
   822  039E                     	;# 
   823  039F                     	;# 
   824  0415                     	;# 
   825  0416                     	;# 
   826  0417                     	;# 
   827  041C                     	;# 
   828  041D                     	;# 
   829  041E                     	;# 
   830  0FE4                     	;# 
   831  0FE5                     	;# 
   832  0FE6                     	;# 
   833  0FE7                     	;# 
   834  0FE8                     	;# 
   835  0FE9                     	;# 
   836  0FEA                     	;# 
   837  0FEB                     	;# 
   838  0FED                     	;# 
   839  0FEE                     	;# 
   840  0FEF                     	;# 
   841  0000                     	;# 
   842  0001                     	;# 
   843  0002                     	;# 
   844  0003                     	;# 
   845  0004                     	;# 
   846  0005                     	;# 
   847  0006                     	;# 
   848  0007                     	;# 
   849  0008                     	;# 
   850  0009                     	;# 
   851  000A                     	;# 
   852  000B                     	;# 
   853  000C                     	;# 
   854  000E                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  001A                     	;# 
   865  001B                     	;# 
   866  001C                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  008C                     	;# 
   870  008E                     	;# 
   871  0091                     	;# 
   872  0092                     	;# 
   873  0093                     	;# 
   874  0095                     	;# 
   875  0096                     	;# 
   876  0097                     	;# 
   877  0098                     	;# 
   878  0099                     	;# 
   879  009A                     	;# 
   880  009B                     	;# 
   881  009B                     	;# 
   882  009C                     	;# 
   883  009D                     	;# 
   884  009E                     	;# 
   885  010C                     	;# 
   886  010E                     	;# 
   887  0111                     	;# 
   888  0112                     	;# 
   889  0113                     	;# 
   890  0114                     	;# 
   891  0115                     	;# 
   892  0116                     	;# 
   893  0117                     	;# 
   894  0118                     	;# 
   895  0119                     	;# 
   896  011A                     	;# 
   897  011B                     	;# 
   898  011D                     	;# 
   899  011E                     	;# 
   900  018C                     	;# 
   901  018E                     	;# 
   902  0191                     	;# 
   903  0191                     	;# 
   904  0192                     	;# 
   905  0193                     	;# 
   906  0193                     	;# 
   907  0193                     	;# 
   908  0194                     	;# 
   909  0195                     	;# 
   910  0196                     	;# 
   911  0199                     	;# 
   912  019A                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019E                     	;# 
   921  019F                     	;# 
   922  020C                     	;# 
   923  020E                     	;# 
   924  0211                     	;# 
   925  0211                     	;# 
   926  0212                     	;# 
   927  0212                     	;# 
   928  0213                     	;# 
   929  0213                     	;# 
   930  0214                     	;# 
   931  0214                     	;# 
   932  0215                     	;# 
   933  0215                     	;# 
   934  0215                     	;# 
   935  0215                     	;# 
   936  0216                     	;# 
   937  0216                     	;# 
   938  0217                     	;# 
   939  0217                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0294                     	;# 
   945  0295                     	;# 
   946  0295                     	;# 
   947  0296                     	;# 
   948  0298                     	;# 
   949  0298                     	;# 
   950  0299                     	;# 
   951  029A                     	;# 
   952  029B                     	;# 
   953  029C                     	;# 
   954  029D                     	;# 
   955  029E                     	;# 
   956  029E                     	;# 
   957  0311                     	;# 
   958  0311                     	;# 
   959  0312                     	;# 
   960  0313                     	;# 
   961  0318                     	;# 
   962  0318                     	;# 
   963  0319                     	;# 
   964  031A                     	;# 
   965  038C                     	;# 
   966  038E                     	;# 
   967  0391                     	;# 
   968  0392                     	;# 
   969  0393                     	;# 
   970  039A                     	;# 
   971  039C                     	;# 
   972  039D                     	;# 
   973  039E                     	;# 
   974  039F                     	;# 
   975  0415                     	;# 
   976  0416                     	;# 
   977  0417                     	;# 
   978  041C                     	;# 
   979  041D                     	;# 
   980  041E                     	;# 
   981  0FE4                     	;# 
   982  0FE5                     	;# 
   983  0FE6                     	;# 
   984  0FE7                     	;# 
   985  0FE8                     	;# 
   986  0FE9                     	;# 
   987  0FEA                     	;# 
   988  0FEB                     	;# 
   989  0FED                     	;# 
   990  0FEE                     	;# 
   991  0FEF                     	;# 
   992                           
   993                           	psect	idataBANK1
   994  0C4D                     __pidataBANK1:	
   995                           
   996                           ;initializer for _sys_fun
   997  0C4D  349E               	retlw	low _sys_power_on
   998  0C4E  340E               	retlw	high _sys_power_on
   999  0C4F  3410               	retlw	low _standby
  1000  0C50  3402               	retlw	high _standby
  1001  0C51  3443               	retlw	low _door_transmit
  1002  0C52  3407               	retlw	high _door_transmit
  1003  0C53  3491               	retlw	low _wifi_transmit
  1004  0C54  340F               	retlw	high _wifi_transmit
  1005  0C55  3477               	retlw	low _match_code
  1006  0C56  3406               	retlw	high _match_code
  1007                           
  1008                           	psect	stringtext1
  1009  07FE                     __pstringtext1:	
  1010  07FE                     _NLF:	
  1011  07FE  3400               	retlw	0
  1012  07FF  3401               	retlw	1
  1013  0800  3401               	retlw	1
  1014  0801  3401               	retlw	1
  1015  0802  3400               	retlw	0
  1016  0803  3401               	retlw	1
  1017  0804  3400               	retlw	0
  1018  0805  3400               	retlw	0
  1019  0806  3400               	retlw	0
  1020  0807  3400               	retlw	0
  1021  0808  3401               	retlw	1
  1022  0809  3400               	retlw	0
  1023  080A  3401               	retlw	1
  1024  080B  3401               	retlw	1
  1025  080C  3401               	retlw	1
  1026  080D  3400               	retlw	0
  1027  080E  3400               	retlw	0
  1028  080F  3400               	retlw	0
  1029  0810  3401               	retlw	1
  1030  0811  3401               	retlw	1
  1031  0812  3401               	retlw	1
  1032  0813  3400               	retlw	0
  1033  0814  3401               	retlw	1
  1034  0815  3400               	retlw	0
  1035  0816  3400               	retlw	0
  1036  0817  3401               	retlw	1
  1037  0818  3400               	retlw	0
  1038  0819  3401               	retlw	1
  1039  081A  3401               	retlw	1
  1040  081B  3401               	retlw	1
  1041  081C  3400               	retlw	0
  1042  081D  3400               	retlw	0
  1043  081E                     __end_of_NLF:	
  1044                           
  1045                           	psect	stringtext2
  1046  081E                     __pstringtext2:	
  1047  081E                     _CUSTOMER_code:	
  1048  081E  3421               	retlw	33
  1049  081F  3418               	retlw	24
  1050  0820  34DE               	retlw	222
  1051  0821  347B               	retlw	123
  1052  0822  340A               	retlw	10
  1053  0823  349C               	retlw	156
  1054  0824  34D5               	retlw	213
  1055  0825  3451               	retlw	81
  1056  0826                     __end_of_CUSTOMER_code:	
  1057  0015                     _TMR0	set	21
  1058  0018                     _CARRY	set	24
  1059  008D                     _RCIF	set	141
  1060  005D                     _T0IE	set	93
  1061  005A                     _T0IF	set	90
  1062  005A                     _TMR0IF	set	90
  1063  0065                     _RA5	set	101
  1064  0062                     _RA2	set	98
  1065  005F                     _GIE	set	95
  1066  0064                     _RA4	set	100
  1067  008E                     _TRISC	set	142
  1068  0095                     _OPTION_REG	set	149
  1069  008C                     _TRISAbits	set	140
  1070  008C                     _TRISA	set	140
  1071  0097                     _WDTCON	set	151
  1072  0099                     _OSCCON	set	153
  1073  048D                     _RCIE	set	1165
  1074  011D                     _APFCON0	set	285
  1075  0191                     _EEADR	set	401
  1076  0196                     _EECON2	set	406
  1077  0193                     _EEDATA	set	403
  1078  0195                     _EECON1	set	405
  1079  019A                     _TXREG	set	410
  1080  019B                     _SPBRGL	set	411
  1081  019C                     _SPBRGH	set	412
  1082  019F                     _BAUDCON	set	415
  1083  0199                     _RCREG	set	409
  1084  018C                     _ANSELA	set	396
  1085  0CAA                     _WREN	set	3242
  1086  0CA8                     _RD	set	3240
  1087  0CA9                     _WR	set	3241
  1088  0CF0                     _TX9D	set	3312
  1089  0CE9                     _OERR	set	3305
  1090  0CEA                     _FERR	set	3306
  1091  0CEB                     _ADDEN	set	3307
  1092  0CEC                     _CREN	set	3308
  1093  0CED                     _SREN	set	3309
  1094  0CEE                     _RX9	set	3310
  1095  0CEF                     _SPEN	set	3311
  1096  0CF1                     _TRMT	set	3313
  1097  0CFB                     _BRG16	set	3323
  1098  0CF2                     _BRGH	set	3314
  1099  0CF4                     _SYNC	set	3316
  1100  0CF5                     _TXEN	set	3317
  1101  0CF6                     _TX9	set	3318
  1102  0CF7                     _CSRC	set	3319
  1103                           
  1104                           ; #config settings
  1105  0000                     
  1106                           	psect	cinit
  1107  003A                     start_initialization:	
  1108  003A                     __initialization:	
  1109                           
  1110                           ; Initialize objects allocated to BANK1
  1111  003A  304D               	movlw	low __pidataBANK1
  1112  003B  0084               	movwf	4
  1113  003C  308C               	movlw	(high __pidataBANK1)| (0+128)
  1114  003D  0085               	movwf	5
  1115  003E  30D4               	movlw	low __pdataBANK1
  1116  003F  0086               	movwf	6
  1117  0040  3000               	movlw	high __pdataBANK1
  1118  0041  0087               	movwf	7
  1119  0042  300A               	movlw	10
  1120  0043  318C  2433  3180   	fcall	init_ram
  1121                           
  1122                           ; Clear objects allocated to BANK0
  1123  0046  01E1               	clrf	__pbssBANK0& (0+127)
  1124  0047  01E2               	clrf	(__pbssBANK0+1)& (0+127)
  1125  0048  01E3               	clrf	(__pbssBANK0+2)& (0+127)
  1126  0049  01E4               	clrf	(__pbssBANK0+3)& (0+127)
  1127  004A  01E5               	clrf	(__pbssBANK0+4)& (0+127)
  1128                           
  1129                           ; Clear objects allocated to BANK1
  1130  004B  30A0               	movlw	low __pbssBANK1
  1131  004C  0084               	movwf	4
  1132  004D  3000               	movlw	high __pbssBANK1
  1133  004E  0085               	movwf	5
  1134  004F  3034               	movlw	52
  1135  0050  318C  242D         	fcall	clear_ram0
  1136  0052                     end_of_initialization:	
  1137                           ;End of C runtime variable initialization code
  1138                           
  1139  0052                     __end_of__initialization:	
  1140  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1141  0053  0020               	movlb	0
  1142  0054  318C  2C7E         	ljmp	_main	;jump to C main() function
  1143                           
  1144                           	psect	bssBANK0
  1145  0061                     __pbssBANK0:	
  1146  0061                     _ACK_data:	
  1147  0061                     	ds	1
  1148  0062                     _ACK:	
  1149  0062                     	ds	1
  1150  0063                     _sys_cnt:	
  1151  0063                     	ds	1
  1152  0064                     remote_timer_task@tp_cnt:	
  1153  0064                     	ds	1
  1154  0065                     remote_timer_task@lv_cnt:	
  1155  0065                     	ds	1
  1156                           
  1157                           	psect	bssBANK1
  1158  00A0                     __pbssBANK1:	
  1159  00A0                     _st_led:	
  1160  00A0                     	ds	7
  1161  00A7                     _remoter:	
  1162  00A7                     	ds	34
  1163  00C9                     _sys_ctrl:	
  1164  00C9                     	ds	11
  1165                           
  1166                           	psect	dataBANK1
  1167  00D4                     __pdataBANK1:	
  1168  00D4                     _sys_fun:	
  1169  00D4                     	ds	10
  1170                           
  1171                           	psect	inittext
  1172  0C33                     init_ram:	
  1173  0C33  00FE               	movwf	126
  1174  0C34                     initloop:	
  1175  0C34  0012               	moviw fsr0++
  1176  0C35  001E               	movwi fsr1++
  1177  0C36  0BFE               	decfsz	126,f
  1178  0C37  2C34               	goto	initloop
  1179  0C38  3400               	retlw	0
  1180                           
  1181                           	psect	clrtext
  1182  0C2D                     clear_ram0:	
  1183                           ;	Called with FSR0 containing the base address, and
  1184                           ;	WREG with the size to clear
  1185                           
  1186  0C2D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1187  0C2E                     clrloop0:	
  1188  0C2E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1189  0C2F  3101               	addfsr 0,1
  1190  0C30  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1191  0C31  2C2E               	goto	clrloop0	;have we reached the end yet?
  1192  0C32  3400               	retlw	0	;all done for this memory range, return
  1193                           
  1194                           	psect	cstackCOMMON
  1195  0070                     __pcstackCOMMON:	
  1196  0070                     ?_sys_power_on:	
  1197  0070                     ?_standby:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_door_transmit:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_wifi_transmit:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_match_code:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_sys_init:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_sys_task:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_init_timer0:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_remote_init:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_Init_Uart:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_equipment_type:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_equipmet_uart_send:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_get_ack_data:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_remote_hits:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_clear_ack:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_get_ack:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_repeat_lock:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_remote_clear:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_Uart1SendByte:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_eeprom_read:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_even_check:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_init_fosc:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_led_init:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_led_task:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_remote_timer_task:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_remote_gkey:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_ISR:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?___awdiv:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ___awdiv@divisor:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x0
  1283  0070                     	ds	2
  1284  0072                     ___awdiv@dividend:	
  1285                           
  1286                           ; 2 bytes @ 0x2
  1287  0072                     	ds	2
  1288  0074                     ??___awdiv:	
  1289                           
  1290                           ; 1 bytes @ 0x4
  1291  0074                     	ds	1
  1292  0075                     ___awdiv@counter:	
  1293                           
  1294                           ; 1 bytes @ 0x5
  1295  0075                     	ds	1
  1296  0076                     ___awdiv@sign:	
  1297                           
  1298                           ; 1 bytes @ 0x6
  1299  0076                     	ds	1
  1300  0077                     ___awdiv@quotient:	
  1301                           
  1302                           ; 2 bytes @ 0x7
  1303  0077                     	ds	2
  1304  0079                     ??_remote_timer_task:	
  1305                           
  1306                           ; 1 bytes @ 0x9
  1307  0079                     	ds	3
  1308  007C                     remote_timer_task@byidx:	
  1309                           
  1310                           ; 1 bytes @ 0xC
  1311  007C                     	ds	1
  1312  007D                     remote_timer_task@btidx:	
  1313                           
  1314                           ; 1 bytes @ 0xD
  1315  007D                     	ds	1
  1316                           
  1317                           	psect	cstackBANK0
  1318  0020                     __pcstackBANK0:	
  1319  0020                     ??_ISR:	
  1320                           
  1321                           ; 1 bytes @ 0x0
  1322  0020                     	ds	2
  1323  0022                     ?_getBit:	
  1324  0022                     ??_sys_task:	
  1325                           ; 1 bytes @ 0x2
  1326                           
  1327  0022                     ??_init_timer0:	
  1328                           ; 1 bytes @ 0x2
  1329                           
  1330  0022                     ??_Init_Uart:	
  1331                           ; 1 bytes @ 0x2
  1332                           
  1333  0022                     ??_equipment_type:	
  1334                           ; 1 bytes @ 0x2
  1335                           
  1336  0022                     ??_get_ack_data:	
  1337                           ; 1 bytes @ 0x2
  1338                           
  1339  0022                     ??_clear_ack:	
  1340                           ; 1 bytes @ 0x2
  1341                           
  1342  0022                     ??_get_ack:	
  1343                           ; 1 bytes @ 0x2
  1344                           
  1345  0022                     ??_repeat_lock:	
  1346                           ; 1 bytes @ 0x2
  1347                           
  1348  0022                     ??_eeprom_read:	
  1349                           ; 1 bytes @ 0x2
  1350                           
  1351  0022                     ?_eeprom_write:	
  1352                           ; 1 bytes @ 0x2
  1353                           
  1354  0022                     ??_even_check:	
  1355                           ; 1 bytes @ 0x2
  1356                           
  1357  0022                     ??_init_fosc:	
  1358                           ; 1 bytes @ 0x2
  1359                           
  1360  0022                     ??_led_init:	
  1361                           ; 1 bytes @ 0x2
  1362                           
  1363  0022                     ??_led_task:	
  1364                           ; 1 bytes @ 0x2
  1365                           
  1366  0022                     ?_led_ctrl:	
  1367                           ; 1 bytes @ 0x2
  1368                           
  1369  0022                     ??_remote_gkey:	
  1370                           ; 1 bytes @ 0x2
  1371                           
  1372  0022                     ?___lwmod:	
  1373                           ; 1 bytes @ 0x2
  1374                           
  1375  0022                     eeprom_write@value:	
  1376                           ; 2 bytes @ 0x2
  1377                           
  1378  0022                     getBit@source:	
  1379                           ; 1 bytes @ 0x2
  1380                           
  1381  0022                     led_ctrl@period:	
  1382                           ; 2 bytes @ 0x2
  1383                           
  1384  0022                     ___lwmod@divisor:	
  1385                           ; 2 bytes @ 0x2
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x2
  1389  0022                     	ds	1
  1390  0023                     ??_eeprom_write:	
  1391  0023                     even_check@res:	
  1392                           ; 1 bytes @ 0x3
  1393                           
  1394                           
  1395                           ; 1 bytes @ 0x3
  1396  0023                     	ds	1
  1397  0024                     led_ctrl@times:	
  1398  0024                     remote_gkey@buf:	
  1399                           ; 1 bytes @ 0x4
  1400                           
  1401  0024                     even_check@data:	
  1402                           ; 1 bytes @ 0x4
  1403                           
  1404  0024                     getBit@n:	
  1405                           ; 1 bytes @ 0x4
  1406                           
  1407  0024                     ___lwmod@dividend:	
  1408                           ; 2 bytes @ 0x4
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x4
  1412  0024                     	ds	1
  1413  0025                     ??_Uart1SendByte:	
  1414  0025                     ??_led_ctrl:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417  0025                     remote_gkey@index:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420  0025                     eeprom_read@addr:	
  1421                           ; 1 bytes @ 0x5
  1422                           
  1423  0025                     eeprom_write@addr:	
  1424                           ; 1 bytes @ 0x5
  1425                           
  1426                           
  1427                           ; 1 bytes @ 0x5
  1428  0025                     	ds	1
  1429  0026                     ??_getBit:	
  1430  0026                     ??_sys_power_on:	
  1431                           ; 1 bytes @ 0x6
  1432                           
  1433  0026                     ??_remote_init:	
  1434                           ; 1 bytes @ 0x6
  1435                           
  1436  0026                     ??_remote_clear:	
  1437                           ; 1 bytes @ 0x6
  1438                           
  1439  0026                     ??___lwmod:	
  1440                           ; 1 bytes @ 0x6
  1441                           
  1442  0026                     Uart1SendByte@Byte:	
  1443                           ; 1 bytes @ 0x6
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x6
  1447  0026                     	ds	1
  1448  0027                     ??_equipmet_uart_send:	
  1449  0027                     remote_init@index:	
  1450                           ; 1 bytes @ 0x7
  1451                           
  1452  0027                     remote_clear@index:	
  1453                           ; 1 bytes @ 0x7
  1454                           
  1455  0027                     ___lwmod@counter:	
  1456                           ; 1 bytes @ 0x7
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x7
  1460  0027                     	ds	1
  1461  0028                     ??_sys_init:	
  1462  0028                     equipmet_uart_send@data:	
  1463                           ; 1 bytes @ 0x8
  1464                           
  1465  0028                     _sys_power_on$208:	
  1466                           ; 1 bytes @ 0x8
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x8
  1470  0028                     	ds	2
  1471  002A                     ?_DEcrypt:	
  1472  002A                     DEcrypt@_key:	
  1473                           ; 1 bytes @ 0xA
  1474                           
  1475                           
  1476                           ; 2 bytes @ 0xA
  1477  002A                     	ds	2
  1478  002C                     ??_DEcrypt:	
  1479                           
  1480                           ; 1 bytes @ 0xC
  1481  002C                     	ds	19
  1482  003F                     DEcrypt@res:	
  1483                           
  1484                           ; 1 bytes @ 0x1F
  1485  003F                     	ds	1
  1486  0040                     DEcrypt@bitk:	
  1487                           
  1488                           ; 4 bytes @ 0x20
  1489  0040                     	ds	4
  1490  0044                     DEcrypt@index:	
  1491                           
  1492                           ; 2 bytes @ 0x24
  1493  0044                     	ds	2
  1494  0046                     DEcrypt@source:	
  1495                           
  1496                           ; 1 bytes @ 0x26
  1497  0046                     	ds	1
  1498  0047                     ??_remote_hits:	
  1499  0047                     ?_remote_learn:	
  1500                           ; 1 bytes @ 0x27
  1501                           
  1502  0047                     remote_learn@flag:	
  1503                           ; 1 bytes @ 0x27
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x27
  1507  0047                     	ds	1
  1508  0048                     ??_remote_learn:	
  1509                           
  1510                           ; 1 bytes @ 0x28
  1511  0048                     	ds	2
  1512  004A                     remote_learn@lrn_buf:	
  1513                           
  1514                           ; 8 bytes @ 0x2A
  1515  004A                     	ds	2
  1516  004C                     remote_hits@rf_buf:	
  1517                           
  1518                           ; 8 bytes @ 0x2C
  1519  004C                     	ds	6
  1520  0052                     remote_learn@rf_buf:	
  1521                           
  1522                           ; 8 bytes @ 0x32
  1523  0052                     	ds	2
  1524  0054                     remote_hits@counter_rf:	
  1525                           
  1526                           ; 2 bytes @ 0x34
  1527  0054                     	ds	2
  1528  0056                     remote_hits@counter_save:	
  1529                           
  1530                           ; 2 bytes @ 0x36
  1531  0056                     	ds	2
  1532  0058                     remote_hits@index:	
  1533                           
  1534                           ; 1 bytes @ 0x38
  1535  0058                     	ds	1
  1536  0059                     ??_standby:	
  1537  0059                     ??_door_transmit:	
  1538                           ; 1 bytes @ 0x39
  1539                           
  1540  0059                     ??_wifi_transmit:	
  1541                           ; 1 bytes @ 0x39
  1542                           
  1543                           
  1544                           ; 1 bytes @ 0x39
  1545  0059                     	ds	1
  1546  005A                     standby@key:	
  1547  005A                     door_transmit@key:	
  1548                           ; 1 bytes @ 0x3A
  1549                           
  1550  005A                     remote_learn@pbuf:	
  1551                           ; 1 bytes @ 0x3A
  1552                           
  1553  005A                     _wifi_transmit$215:	
  1554                           ; 1 bytes @ 0x3A
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x3A
  1558  005A                     	ds	1
  1559  005B                     remote_learn@index:	
  1560                           
  1561                           ; 1 bytes @ 0x3B
  1562  005B                     	ds	1
  1563  005C                     ??_match_code:	
  1564  005C                     wifi_transmit@key:	
  1565                           ; 1 bytes @ 0x3C
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x3C
  1569  005C                     	ds	1
  1570  005D                     ?_main:	
  1571  005D                     main@argc:	
  1572                           ; 2 bytes @ 0x3D
  1573                           
  1574                           
  1575                           ; 2 bytes @ 0x3D
  1576  005D                     	ds	2
  1577  005F                     main@argv:	
  1578                           
  1579                           ; 2 bytes @ 0x3F
  1580  005F                     	ds	2
  1581  0061                     ??_main:	
  1582                           
  1583                           	psect	maintext
  1584  0C7E                     __pmaintext:	
  1585                           ; 1 bytes @ 0x41
  1586 ;;
  1587 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1588 ;;
  1589 ;; *************** function _main *****************
  1590 ;; Defined at:
  1591 ;;		line 48 in file "source/main.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  argc            2   61[BANK0 ] int 
  1594 ;;  argv            2   63[BANK0 ] PTR PTR unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2   61[BANK0 ] int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : B1F/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1606 ;;      Params:         0       4       0       0
  1607 ;;      Locals:         0       0       0       0
  1608 ;;      Temps:          0       0       0       0
  1609 ;;      Totals:         0       4       0       0
  1610 ;;Total ram usage:        4 bytes
  1611 ;; Hardware stack levels required when called:    7
  1612 ;; This function calls:
  1613 ;;		_door_transmit
  1614 ;;		_led_task
  1615 ;;		_match_code
  1616 ;;		_standby
  1617 ;;		_sys_init
  1618 ;;		_sys_power_on
  1619 ;;		_sys_task
  1620 ;;		_wifi_transmit
  1621 ;; This function is called by:
  1622 ;;		Startup code after reset
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _main
  1628  0C7E                     _main:	
  1629                           
  1630                           ;main.c: 49: sys_init();
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1634  0C7E  318C  24CA  318C   	fcall	_sys_init
  1635  0C81                     l3427:	
  1636                           ;main.c: 50: while(1u){
  1637                           
  1638                           
  1639                           ;main.c: 51: if ((0) == sys_task()) continue;
  1640  0C81  318C  2443  318C   	fcall	_sys_task
  1641  0C84  3A00               	xorlw	0
  1642  0C85  1903               	btfsc	3,2
  1643  0C86  2C81               	goto	l3427
  1644  0C87  0064               	clrwdt	;# 
  1645                           
  1646                           ;main.c: 53: sys_fun[sys_ctrl.sys_st]();
  1647  0C88  0021               	movlb	1	; select bank1
  1648  0C89  354D               	lslf	(_sys_ctrl^(0+128)+4),w
  1649  0C8A  3ED4               	addlw	(low (_sys_fun| 0))& (0+255)
  1650  0C8B  0086               	movwf	6
  1651  0C8C  0187               	clrf	7
  1652  0C8D  3F41               	moviw [1]fsr1
  1653  0C8E  008A               	movwf	10
  1654  0C8F  3F40               	moviw [0]fsr1
  1655  0C90  000A               	callw
  1656  0C91  318C               	pagesel	$
  1657                           
  1658                           ;main.c: 54: led_task();
  1659  0C92  318D  25F3  318C   	fcall	_led_task
  1660  0C95  2C81               	goto	l3427
  1661  0C96                     __end_of_main:	
  1662                           
  1663                           	psect	text1
  1664  0677                     __ptext1:	
  1665 ;; *************** function _match_code *****************
  1666 ;; Defined at:
  1667 ;;		line 279 in file "source/main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1681 ;;      Params:         0       0       0       0
  1682 ;;      Locals:         0       0       0       0
  1683 ;;      Temps:          0       1       0       0
  1684 ;;      Totals:         0       1       0       0
  1685 ;;Total ram usage:        1 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    6
  1688 ;; This function calls:
  1689 ;;		_led_ctrl
  1690 ;;		_remote_clear
  1691 ;;		_remote_learn
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _match_code
  1699  0677                     _match_code:	
  1700                           
  1701                           ;main.c: 280: if (0 == sys_ctrl.sub_st){
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _match_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1705  0677  0021               	movlb	1	; select bank1
  1706  0678  084E               	movf	(_sys_ctrl^(0+128)+5),w
  1707  0679  1D03               	btfss	3,2
  1708  067A  2E8F               	goto	l3291
  1709                           
  1710                           ;main.c: 281: led_ctrl(250, 0);
  1711  067B  30FA               	movlw	250
  1712  067C  0020               	movlb	0	; select bank0
  1713  067D  00A2               	movwf	led_ctrl@period
  1714  067E  3000               	movlw	0
  1715  067F  00A3               	movwf	led_ctrl@period+1
  1716  0680  01A4               	clrf	led_ctrl@times
  1717  0681  318C  24E6         	fcall	_led_ctrl
  1718                           
  1719                           ;main.c: 282: sys_ctrl.delay0 = 200;
  1720  0683  30C8               	movlw	200
  1721  0684  0021               	movlb	1	; select bank1
  1722  0685  00C9               	movwf	_sys_ctrl^(0+128)
  1723  0686  3000               	movlw	0
  1724  0687  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  1725                           
  1726                           ;main.c: 283: sys_ctrl.delay1 = 2800;
  1727  0688  30F0               	movlw	240
  1728  0689  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  1729  068A  300A               	movlw	10
  1730  068B  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  1731                           
  1732                           ;main.c: 284: sys_ctrl.sub_st = 1;
  1733  068C  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  1734  068D  0ACE               	incf	(_sys_ctrl^(0+128)+5),f
  1735                           
  1736                           ;main.c: 285: }
  1737  068E  0008               	return
  1738  068F                     l3291:	
  1739                           
  1740                           ;main.c: 286: else if (1 == sys_ctrl.sub_st){
  1741  068F  034E               	decf	(_sys_ctrl^(0+128)+5),w
  1742  0690  1D03               	btfss	3,2
  1743  0691  2EC0               	goto	l3309
  1744                           
  1745                           ;main.c: 287: sys_ctrl.delay1--;
  1746  0692  3001               	movlw	1
  1747  0693  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  1748  0694  3000               	movlw	0
  1749  0695  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  1750                           
  1751                           ;main.c: 288: if (0 == sys_ctrl.delay1){
  1752  0696  084B               	movf	(_sys_ctrl^(0+128)+2),w
  1753  0697  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  1754  0698  1D03               	btfss	3,2
  1755  0699  2EB3               	goto	l3305
  1756                           
  1757                           ;main.c: 289: sys_ctrl.delay1 = 400;
  1758  069A  3090               	movlw	144
  1759  069B  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  1760  069C  3001               	movlw	1
  1761  069D  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  1762                           
  1763                           ;main.c: 290: remote_clear();
  1764  069E  318D  25C4  3186   	fcall	_remote_clear
  1765                           
  1766                           ;main.c: 291: sys_ctrl.sub_st = 4;
  1767  06A1  3004               	movlw	4
  1768  06A2  0020               	movlb	0	; select bank0
  1769  06A3  00DC               	movwf	??_match_code
  1770  06A4  085C               	movf	??_match_code,w
  1771  06A5  0021               	movlb	1	; select bank1
  1772  06A6  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  1773                           
  1774                           ;main.c: 292: led_ctrl(50,3);
  1775  06A7  3032               	movlw	50
  1776  06A8  0020               	movlb	0	; select bank0
  1777  06A9  00A2               	movwf	led_ctrl@period
  1778  06AA  3000               	movlw	0
  1779  06AB  00A3               	movwf	led_ctrl@period+1
  1780  06AC  3003               	movlw	3
  1781  06AD  00DC               	movwf	??_match_code
  1782  06AE  085C               	movf	??_match_code,w
  1783  06AF  00A4               	movwf	led_ctrl@times
  1784  06B0  318C  24E6  3186   	fcall	_led_ctrl
  1785  06B3                     l3305:	
  1786                           
  1787                           ;main.c: 293: }
  1788                           ;main.c: 295: if (0 == RA2) {
  1789  06B3  0020               	movlb	0	; select bank0
  1790  06B4  190C               	btfsc	12,2	;volatile
  1791  06B5  0008               	return
  1792                           
  1793                           ;main.c: 296: sys_ctrl.sub_st = 2;
  1794  06B6  3002               	movlw	2
  1795  06B7  00DC               	movwf	??_match_code
  1796  06B8  085C               	movf	??_match_code,w
  1797  06B9  0021               	movlb	1	; select bank1
  1798  06BA  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  1799                           
  1800                           ;main.c: 297: sys_ctrl.delay1 = 10051;
  1801  06BB  3043               	movlw	67
  1802  06BC  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  1803  06BD  3027               	movlw	39
  1804  06BE  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  1805                           
  1806                           ;main.c: 298: }
  1807                           ;main.c: 299: } else if (2 == sys_ctrl.sub_st){
  1808  06BF  0008               	return
  1809  06C0                     l3309:	
  1810  06C0  3002               	movlw	2
  1811  06C1  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  1812  06C2  1D03               	btfss	3,2
  1813  06C3  2EF4               	goto	l3329
  1814                           
  1815                           ;main.c: 300: if ((1) == remote_learn(sys_ctrl.match_buf, 1)){
  1816  06C4  0020               	movlb	0	; select bank0
  1817  06C5  01C7               	clrf	remote_learn@flag
  1818  06C6  0AC7               	incf	remote_learn@flag,f
  1819  06C7  30D0               	movlw	(low ((_sys_ctrl| 0+7)))& (0+255)
  1820  06C8  3183  235B  3186   	fcall	_remote_learn
  1821  06CB  3A01               	xorlw	1
  1822  06CC  1D03               	skipz
  1823  06CD  2EE0               	goto	l3319
  1824                           
  1825                           ;main.c: 301: led_ctrl(0,0);
  1826  06CE  3000               	movlw	0
  1827  06CF  0020               	movlb	0	; select bank0
  1828  06D0  00A2               	movwf	led_ctrl@period
  1829  06D1  00A3               	movwf	led_ctrl@period+1
  1830  06D2  01A4               	clrf	led_ctrl@times
  1831  06D3  318C  24E6  3186   	fcall	_led_ctrl
  1832                           
  1833                           ;main.c: 302: sys_ctrl.sub_st = 3;
  1834  06D6  3003               	movlw	3
  1835  06D7  0020               	movlb	0	; select bank0
  1836  06D8  00DC               	movwf	??_match_code
  1837  06D9  085C               	movf	??_match_code,w
  1838  06DA  0021               	movlb	1	; select bank1
  1839  06DB  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  1840                           
  1841                           ;main.c: 303: sys_ctrl.delay1 = 10000;
  1842  06DC  3010               	movlw	16
  1843  06DD  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  1844  06DE  3027               	movlw	39
  1845  06DF  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  1846  06E0                     l3319:	
  1847                           
  1848                           ;main.c: 304: }
  1849                           ;main.c: 306: sys_ctrl.delay1--;
  1850  06E0  3001               	movlw	1
  1851  06E1  0021               	movlb	1	; select bank1
  1852  06E2  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  1853  06E3  3000               	movlw	0
  1854  06E4  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  1855                           
  1856                           ;main.c: 307: if (0 == sys_ctrl.delay1){
  1857  06E5  084B               	movf	(_sys_ctrl^(0+128)+2),w
  1858  06E6  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  1859  06E7  1D03               	btfss	3,2
  1860  06E8  0008               	return
  1861                           
  1862                           ;main.c: 308: sys_ctrl.sub_st = 0;
  1863  06E9  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  1864                           
  1865                           ;main.c: 309: sys_ctrl.sys_st = (1);
  1866  06EA  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  1867  06EB  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  1868                           
  1869                           ;main.c: 310: led_ctrl(0,0);
  1870  06EC  3000               	movlw	0
  1871  06ED  0020               	movlb	0	; select bank0
  1872  06EE  00A2               	movwf	led_ctrl@period
  1873  06EF  00A3               	movwf	led_ctrl@period+1
  1874  06F0  01A4               	clrf	led_ctrl@times
  1875  06F1  318C  24E6         	fcall	_led_ctrl
  1876                           
  1877                           ;main.c: 311: }
  1878                           ;main.c: 312: }
  1879  06F3  0008               	return
  1880  06F4                     l3329:	
  1881                           
  1882                           ;main.c: 313: else if (3 == sys_ctrl.sub_st){
  1883  06F4  3003               	movlw	3
  1884  06F5  0021               	movlb	1	; select bank1
  1885  06F6  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  1886  06F7  1D03               	btfss	3,2
  1887  06F8  2F2B               	goto	l3349
  1888                           
  1889                           ;main.c: 314: if ((1) == remote_learn(sys_ctrl.match_buf, 2)){
  1890  06F9  3002               	movlw	2
  1891  06FA  0020               	movlb	0	; select bank0
  1892  06FB  00DC               	movwf	??_match_code
  1893  06FC  085C               	movf	??_match_code,w
  1894  06FD  00C7               	movwf	remote_learn@flag
  1895  06FE  30D0               	movlw	(low ((_sys_ctrl| 0+7)))& (0+255)
  1896  06FF  3183  235B  3186   	fcall	_remote_learn
  1897  0702  3A01               	xorlw	1
  1898  0703  1D03               	skipz
  1899  0704  2F15               	goto	l3339
  1900                           
  1901                           ;main.c: 315: sys_ctrl.sub_st = 0;
  1902  0705  0021               	movlb	1	; select bank1
  1903  0706  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  1904                           
  1905                           ;main.c: 316: sys_ctrl.sys_st = (1);
  1906  0707  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  1907  0708  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  1908                           
  1909                           ;main.c: 317: led_ctrl(50,5);
  1910  0709  3032               	movlw	50
  1911  070A  0020               	movlb	0	; select bank0
  1912  070B  00A2               	movwf	led_ctrl@period
  1913  070C  3000               	movlw	0
  1914  070D  00A3               	movwf	led_ctrl@period+1
  1915  070E  3005               	movlw	5
  1916  070F  00DC               	movwf	??_match_code
  1917  0710  085C               	movf	??_match_code,w
  1918  0711  00A4               	movwf	led_ctrl@times
  1919  0712  318C  24E6  3186   	fcall	_led_ctrl
  1920  0715                     l3339:	
  1921                           
  1922                           ;main.c: 318: }
  1923                           ;main.c: 320: sys_ctrl.delay1--;
  1924  0715  3001               	movlw	1
  1925  0716  0021               	movlb	1	; select bank1
  1926  0717  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  1927  0718  3000               	movlw	0
  1928  0719  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  1929                           
  1930                           ;main.c: 321: if (0 == sys_ctrl.delay1){
  1931  071A  084B               	movf	(_sys_ctrl^(0+128)+2),w
  1932  071B  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  1933  071C  1D03               	btfss	3,2
  1934  071D  0008               	return
  1935                           
  1936                           ;main.c: 322: sys_ctrl.sub_st = 0;
  1937  071E  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  1938                           
  1939                           ;main.c: 323: sys_ctrl.sys_st = (1);
  1940  071F  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  1941  0720  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  1942                           
  1943                           ;main.c: 324: led_ctrl(1000,1);
  1944  0721  30E8               	movlw	232
  1945  0722  0020               	movlb	0	; select bank0
  1946  0723  00A2               	movwf	led_ctrl@period
  1947  0724  3003               	movlw	3
  1948  0725  00A3               	movwf	led_ctrl@period+1
  1949  0726  01A4               	clrf	led_ctrl@times
  1950  0727  0AA4               	incf	led_ctrl@times,f
  1951  0728  318C  24E6         	fcall	_led_ctrl
  1952                           
  1953                           ;main.c: 325: }
  1954                           ;main.c: 326: }
  1955  072A  0008               	return
  1956  072B                     l3349:	
  1957                           
  1958                           ;main.c: 327: else if (4 == sys_ctrl.sub_st){
  1959  072B  3004               	movlw	4
  1960  072C  0021               	movlb	1	; select bank1
  1961  072D  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  1962  072E  1D03               	btfss	3,2
  1963  072F  0008               	return
  1964                           
  1965                           ;main.c: 328: sys_ctrl.delay1--;
  1966  0730  3001               	movlw	1
  1967  0731  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  1968  0732  3000               	movlw	0
  1969  0733  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  1970                           
  1971                           ;main.c: 329: if (0 == sys_ctrl.delay1){
  1972  0734  084B               	movf	(_sys_ctrl^(0+128)+2),w
  1973  0735  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  1974  0736  1D03               	btfss	3,2
  1975  0737  0008               	return
  1976                           
  1977                           ;main.c: 330: sys_ctrl.sub_st = 0;
  1978  0738  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  1979                           
  1980                           ;main.c: 331: sys_ctrl.sys_st = (1);
  1981  0739  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  1982  073A  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  1983                           
  1984                           ;main.c: 332: led_ctrl(0,0);
  1985  073B  3000               	movlw	0
  1986  073C  0020               	movlb	0	; select bank0
  1987  073D  00A2               	movwf	led_ctrl@period
  1988  073E  00A3               	movwf	led_ctrl@period+1
  1989  073F  01A4               	clrf	led_ctrl@times
  1990  0740  318C  24E6         	fcall	_led_ctrl
  1991  0742  0008               	return
  1992  0743                     __end_of_match_code:	
  1993                           
  1994                           	psect	text2
  1995  0743                     __ptext2:	
  1996 ;; *************** function _door_transmit *****************
  1997 ;; Defined at:
  1998 ;;		line 177 in file "source/main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  key             1   58[BANK0 ] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2012 ;;      Params:         0       0       0       0
  2013 ;;      Locals:         0       1       0       0
  2014 ;;      Temps:          0       1       0       0
  2015 ;;      Totals:         0       2       0       0
  2016 ;;Total ram usage:        2 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    6
  2019 ;; This function calls:
  2020 ;;		_clear_ack
  2021 ;;		_equipmet_uart_send
  2022 ;;		_led_ctrl
  2023 ;;		_remote_hits
  2024 ;;		_repeat_lock
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _door_transmit
  2032  0743                     _door_transmit:	
  2033                           
  2034                           ;main.c: 178: U08ET key;
  2035                           ;main.c: 180: if (0 == sys_ctrl.sub_st){
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _door_transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2039  0743  0021               	movlb	1	; select bank1
  2040  0744  084E               	movf	(_sys_ctrl^(0+128)+5),w
  2041  0745  1D03               	btfss	3,2
  2042  0746  2F52               	goto	l3165
  2043                           
  2044                           ;main.c: 181: sys_ctrl.delay0 = 150;
  2045  0747  3096               	movlw	150
  2046  0748  00C9               	movwf	_sys_ctrl^(0+128)
  2047  0749  3000               	movlw	0
  2048  074A  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2049                           
  2050                           ;main.c: 182: sys_ctrl.delay1 = 400;
  2051  074B  3090               	movlw	144
  2052  074C  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2053  074D  3001               	movlw	1
  2054  074E  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2055                           
  2056                           ;main.c: 183: sys_ctrl.sub_st = 1;
  2057  074F  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2058  0750  0ACE               	incf	(_sys_ctrl^(0+128)+5),f
  2059                           
  2060                           ;main.c: 184: }
  2061  0751  0008               	return
  2062  0752                     l3165:	
  2063                           
  2064                           ;main.c: 185: else if (1 == sys_ctrl.sub_st){
  2065  0752  034E               	decf	(_sys_ctrl^(0+128)+5),w
  2066  0753  1D03               	btfss	3,2
  2067  0754  2FBE               	goto	l3205
  2068                           
  2069                           ;main.c: 186: key = remote_hits();
  2070  0755  3180  2056  3187   	fcall	_remote_hits
  2071  0758  0020               	movlb	0	; select bank0
  2072  0759  00D9               	movwf	??_door_transmit
  2073  075A  0859               	movf	??_door_transmit,w
  2074  075B  00DA               	movwf	door_transmit@key
  2075                           
  2076                           ;main.c: 189: sys_ctrl.delay0--;
  2077  075C  3001               	movlw	1
  2078  075D  0021               	movlb	1	; select bank1
  2079  075E  02C9               	subwf	_sys_ctrl^(0+128),f
  2080  075F  3000               	movlw	0
  2081  0760  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  2082                           
  2083                           ;main.c: 190: if (0 == sys_ctrl.delay0){
  2084  0761  0849               	movf	_sys_ctrl^(0+128),w
  2085  0762  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2086  0763  1D03               	btfss	3,2
  2087  0764  2F8C               	goto	l3187
  2088                           
  2089                           ;main.c: 191: repeat_lock();
  2090  0765  318C  241E  3187   	fcall	_repeat_lock
  2091                           
  2092                           ;main.c: 192: clear_ack();
  2093  0768  318C  241B  3187   	fcall	_clear_ack
  2094                           
  2095                           ;main.c: 193: equipmet_uart_send((0x09));
  2096  076B  3009               	movlw	9
  2097  076C  318E  2623  3187   	fcall	_equipmet_uart_send
  2098                           
  2099                           ;main.c: 194: sys_ctrl.repeat_key = (0x09);
  2100  076F  3009               	movlw	9
  2101  0770  0020               	movlb	0	; select bank0
  2102  0771  00D9               	movwf	??_door_transmit
  2103  0772  0859               	movf	??_door_transmit,w
  2104  0773  0021               	movlb	1	; select bank1
  2105  0774  00CF               	movwf	(_sys_ctrl^(0+128)+6)
  2106                           
  2107                           ;main.c: 195: led_ctrl(75, 1);
  2108  0775  304B               	movlw	75
  2109  0776  0020               	movlb	0	; select bank0
  2110  0777  00A2               	movwf	led_ctrl@period
  2111  0778  3000               	movlw	0
  2112  0779  00A3               	movwf	led_ctrl@period+1
  2113  077A  01A4               	clrf	led_ctrl@times
  2114  077B  0AA4               	incf	led_ctrl@times,f
  2115  077C  318C  24E6         	fcall	_led_ctrl
  2116                           
  2117                           ;main.c: 196: sys_ctrl.delay0 = 310;
  2118  077E  3036               	movlw	54
  2119  077F  0021               	movlb	1	; select bank1
  2120  0780  00C9               	movwf	_sys_ctrl^(0+128)
  2121  0781  3001               	movlw	1
  2122  0782  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2123                           
  2124                           ;main.c: 197: sys_ctrl.sub_st = 3;
  2125  0783  3003               	movlw	3
  2126  0784  0020               	movlb	0	; select bank0
  2127  0785  00D9               	movwf	??_door_transmit
  2128  0786  0859               	movf	??_door_transmit,w
  2129  0787  0021               	movlb	1	; select bank1
  2130  0788  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  2131                           
  2132                           ;main.c: 198: sys_ctrl.sys_st = (1);
  2133  0789  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  2134  078A  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  2135                           
  2136                           ;main.c: 199: return;
  2137  078B  0008               	return
  2138  078C                     l3187:	
  2139                           
  2140                           ;main.c: 200: }
  2141                           ;main.c: 203: sys_ctrl.delay1--;
  2142  078C  3001               	movlw	1
  2143  078D  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  2144  078E  3000               	movlw	0
  2145  078F  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  2146                           
  2147                           ;main.c: 204: if (0 == sys_ctrl.delay1){
  2148  0790  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2149  0791  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  2150  0792  1D03               	btfss	3,2
  2151  0793  2FB3               	goto	l3201
  2152                           
  2153                           ;main.c: 205: sys_ctrl.sub_st = 2;
  2154  0794  3002               	movlw	2
  2155  0795  0020               	movlb	0	; select bank0
  2156  0796  00D9               	movwf	??_door_transmit
  2157  0797  0859               	movf	??_door_transmit,w
  2158  0798  0021               	movlb	1	; select bank1
  2159  0799  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  2160                           
  2161                           ;main.c: 206: led_ctrl(75, 125);
  2162  079A  304B               	movlw	75
  2163  079B  0020               	movlb	0	; select bank0
  2164  079C  00A2               	movwf	led_ctrl@period
  2165  079D  3000               	movlw	0
  2166  079E  00A3               	movwf	led_ctrl@period+1
  2167  079F  307D               	movlw	125
  2168  07A0  00D9               	movwf	??_door_transmit
  2169  07A1  0859               	movf	??_door_transmit,w
  2170  07A2  00A4               	movwf	led_ctrl@times
  2171  07A3  318C  24E6  3187   	fcall	_led_ctrl
  2172                           
  2173                           ;main.c: 207: sys_ctrl.delay1 = 50;
  2174  07A6  3032               	movlw	50
  2175  07A7  0021               	movlb	1	; select bank1
  2176  07A8  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2177  07A9  3000               	movlw	0
  2178  07AA  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2179                           
  2180                           ;main.c: 208: sys_ctrl.delay0 = 400;
  2181  07AB  3090               	movlw	144
  2182  07AC  00C9               	movwf	_sys_ctrl^(0+128)
  2183  07AD  3001               	movlw	1
  2184  07AE  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2185                           
  2186                           ;main.c: 209: equipmet_uart_send(0x0a);
  2187  07AF  300A               	movlw	10
  2188  07B0  318E  2623  3187   	fcall	_equipmet_uart_send
  2189  07B3                     l3201:	
  2190                           
  2191                           ;main.c: 211: }
  2192                           ;main.c: 213: if ((0x09) == key){
  2193  07B3  3009               	movlw	9
  2194  07B4  0020               	movlb	0	; select bank0
  2195  07B5  065A               	xorwf	door_transmit@key,w
  2196  07B6  1D03               	btfss	3,2
  2197  07B7  0008               	return
  2198                           
  2199                           ;main.c: 214: sys_ctrl.delay0 = 150;
  2200  07B8  3096               	movlw	150
  2201  07B9  0021               	movlb	1	; select bank1
  2202  07BA  00C9               	movwf	_sys_ctrl^(0+128)
  2203  07BB  3000               	movlw	0
  2204  07BC  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2205                           
  2206                           ;main.c: 215: }
  2207                           ;main.c: 216: }
  2208  07BD  0008               	return
  2209  07BE                     l3205:	
  2210                           
  2211                           ;main.c: 217: else if (2 == sys_ctrl.sub_st) {
  2212  07BE  3002               	movlw	2
  2213  07BF  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  2214  07C0  1D03               	btfss	3,2
  2215  07C1  0008               	return
  2216                           
  2217                           ;main.c: 218: key = remote_hits();
  2218  07C2  3180  2056  3187   	fcall	_remote_hits
  2219  07C5  0020               	movlb	0	; select bank0
  2220  07C6  00D9               	movwf	??_door_transmit
  2221  07C7  0859               	movf	??_door_transmit,w
  2222  07C8  00DA               	movwf	door_transmit@key
  2223                           
  2224                           ;main.c: 219: sys_ctrl.delay1--;
  2225  07C9  3001               	movlw	1
  2226  07CA  0021               	movlb	1	; select bank1
  2227  07CB  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  2228  07CC  3000               	movlw	0
  2229  07CD  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  2230                           
  2231                           ;main.c: 220: if (0 == sys_ctrl.delay1){
  2232  07CE  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2233  07CF  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  2234  07D0  1D03               	btfss	3,2
  2235  07D1  2FDB               	goto	l3217
  2236                           
  2237                           ;main.c: 221: equipmet_uart_send(0x0a);
  2238  07D2  300A               	movlw	10
  2239  07D3  318E  2623  3187   	fcall	_equipmet_uart_send
  2240                           
  2241                           ;main.c: 222: sys_ctrl.delay1 = 50;
  2242  07D6  3032               	movlw	50
  2243  07D7  0021               	movlb	1	; select bank1
  2244  07D8  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2245  07D9  3000               	movlw	0
  2246  07DA  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2247  07DB                     l3217:	
  2248                           
  2249                           ;main.c: 223: }
  2250                           ;main.c: 225: sys_ctrl.delay0--;
  2251  07DB  3001               	movlw	1
  2252  07DC  02C9               	subwf	_sys_ctrl^(0+128),f
  2253  07DD  3000               	movlw	0
  2254  07DE  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  2255                           
  2256                           ;main.c: 226: if (0 == sys_ctrl.delay0){
  2257  07DF  0849               	movf	_sys_ctrl^(0+128),w
  2258  07E0  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2259  07E1  1D03               	btfss	3,2
  2260  07E2  2FF3               	goto	l3229
  2261                           
  2262                           ;main.c: 227: led_ctrl(0, 0);
  2263  07E3  3000               	movlw	0
  2264  07E4  0020               	movlb	0	; select bank0
  2265  07E5  00A2               	movwf	led_ctrl@period
  2266  07E6  00A3               	movwf	led_ctrl@period+1
  2267  07E7  01A4               	clrf	led_ctrl@times
  2268  07E8  318C  24E6  3187   	fcall	_led_ctrl
  2269                           
  2270                           ;main.c: 228: sys_ctrl.sub_st = 0;
  2271  07EB  0021               	movlb	1	; select bank1
  2272  07EC  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2273                           
  2274                           ;main.c: 229: repeat_lock();
  2275  07ED  318C  241E  3187   	fcall	_repeat_lock
  2276                           
  2277                           ;main.c: 230: sys_ctrl.sys_st = (1);
  2278  07F0  0021               	movlb	1	; select bank1
  2279  07F1  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  2280  07F2  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  2281  07F3                     l3229:	
  2282                           
  2283                           ;main.c: 231: }
  2284                           ;main.c: 233: if ((0x09) == key){
  2285  07F3  3009               	movlw	9
  2286  07F4  0020               	movlb	0	; select bank0
  2287  07F5  065A               	xorwf	door_transmit@key,w
  2288  07F6  1D03               	btfss	3,2
  2289  07F7  0008               	return
  2290                           
  2291                           ;main.c: 234: sys_ctrl.delay0 = 400;
  2292  07F8  3090               	movlw	144
  2293  07F9  0021               	movlb	1	; select bank1
  2294  07FA  00C9               	movwf	_sys_ctrl^(0+128)
  2295  07FB  3001               	movlw	1
  2296  07FC  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2297  07FD  0008               	return
  2298  07FE                     __end_of_door_transmit:	
  2299                           
  2300                           	psect	text3
  2301  0210                     __ptext3:	
  2302 ;; *************** function _standby *****************
  2303 ;; Defined at:
  2304 ;;		line 95 in file "source/main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  key             1   58[BANK0 ] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2318 ;;      Params:         0       0       0       0
  2319 ;;      Locals:         0       1       0       0
  2320 ;;      Temps:          0       1       0       0
  2321 ;;      Totals:         0       2       0       0
  2322 ;;Total ram usage:        2 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    6
  2325 ;; This function calls:
  2326 ;;		___lwmod
  2327 ;;		_clear_ack
  2328 ;;		_equipment_type
  2329 ;;		_equipmet_uart_send
  2330 ;;		_get_ack
  2331 ;;		_get_ack_data
  2332 ;;		_led_ctrl
  2333 ;;		_remote_hits
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _standby
  2341  0210                     _standby:	
  2342                           
  2343                           ;main.c: 96: U08ET key;
  2344                           ;main.c: 97: if (0 == sys_ctrl.sub_st){
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _standby: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2348  0210  0021               	movlb	1	; select bank1
  2349  0211  084E               	movf	(_sys_ctrl^(0+128)+5),w
  2350  0212  1D03               	btfss	3,2
  2351  0213  2A1D               	goto	l3047
  2352                           
  2353                           ;main.c: 98: sys_ctrl.delay1 = 1000;
  2354  0214  30E8               	movlw	232
  2355  0215  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2356  0216  3003               	movlw	3
  2357  0217  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2358                           
  2359                           ;main.c: 99: sys_ctrl.delay0 = 0;
  2360  0218  01C9               	clrf	_sys_ctrl^(0+128)
  2361  0219  01CA               	clrf	(_sys_ctrl+1)^(0+128)
  2362                           
  2363                           ;main.c: 100: sys_ctrl.sub_st = 1;
  2364  021A  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2365  021B  0ACE               	incf	(_sys_ctrl^(0+128)+5),f
  2366                           
  2367                           ;main.c: 101: }
  2368  021C  0008               	return
  2369  021D                     l3047:	
  2370                           
  2371                           ;main.c: 103: else if (1 == sys_ctrl.sub_st){
  2372  021D  034E               	decf	(_sys_ctrl^(0+128)+5),w
  2373  021E  1D03               	btfss	3,2
  2374  021F  2B1E               	goto	l3131
  2375                           
  2376                           ;main.c: 104: sys_ctrl.delay1--;
  2377  0220  3001               	movlw	1
  2378  0221  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  2379  0222  3000               	movlw	0
  2380  0223  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  2381                           
  2382                           ;main.c: 105: if ((0 == sys_ctrl.delay1 % 250) && ((2) != equipment_type())) {
  2383  0224  30FA               	movlw	250
  2384  0225  0020               	movlb	0	; select bank0
  2385  0226  00A2               	movwf	___lwmod@divisor
  2386  0227  3000               	movlw	0
  2387  0228  00A3               	movwf	___lwmod@divisor+1
  2388  0229  0021               	movlb	1	; select bank1
  2389  022A  084C               	movf	((_sys_ctrl+1)^(0+128)+2),w
  2390  022B  0020               	movlb	0	; select bank0
  2391  022C  00A5               	movwf	___lwmod@dividend+1
  2392  022D  0021               	movlb	1	; select bank1
  2393  022E  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2394  022F  0020               	movlb	0	; select bank0
  2395  0230  00A4               	movwf	___lwmod@dividend
  2396  0231  318D  2597  3182   	fcall	___lwmod
  2397  0234  0020               	movlb	0	; select bank0
  2398  0235  0822               	movf	?___lwmod,w
  2399  0236  0423               	iorwf	?___lwmod+1,w
  2400  0237  1D03               	btfss	3,2
  2401  0238  2A5D               	goto	l3065
  2402  0239  318C  24AF  3182   	fcall	_equipment_type
  2403  023C  3A02               	xorlw	2
  2404  023D  1903               	skipnz
  2405  023E  2A5D               	goto	l3065
  2406                           
  2407                           ;main.c: 106: equipmet_uart_send(0x7f);
  2408  023F  307F               	movlw	127
  2409  0240  318E  2623  3182   	fcall	_equipmet_uart_send
  2410                           
  2411                           ;main.c: 107: if (0 == sys_ctrl.delay1) {
  2412  0243  0021               	movlb	1	; select bank1
  2413  0244  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2414  0245  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  2415  0246  1D03               	btfss	3,2
  2416  0247  2A5D               	goto	l3065
  2417                           
  2418                           ;main.c: 108: if (0xff == get_ack_data())
  2419  0248  318C  2424  3182   	fcall	_get_ack_data
  2420  024B  3AFF               	xorlw	255
  2421  024C  1D03               	skipz
  2422  024D  2A58               	goto	l3063
  2423                           
  2424                           ;main.c: 109: led_ctrl(500, 1);
  2425  024E  30F4               	movlw	244
  2426  024F  0020               	movlb	0	; select bank0
  2427  0250  00A2               	movwf	led_ctrl@period
  2428  0251  3001               	movlw	1
  2429  0252  00A3               	movwf	led_ctrl@period+1
  2430  0253  01A4               	clrf	led_ctrl@times
  2431  0254  0AA4               	incf	led_ctrl@times,f
  2432  0255  318C  24E6  3182   	fcall	_led_ctrl
  2433  0258                     l3063:	
  2434                           
  2435                           ;main.c: 110: sys_ctrl.delay1 = 1000;
  2436  0258  30E8               	movlw	232
  2437  0259  0021               	movlb	1	; select bank1
  2438  025A  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2439  025B  3003               	movlw	3
  2440  025C  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2441  025D                     l3065:	
  2442                           
  2443                           ;main.c: 111: }
  2444                           ;main.c: 112: }
  2445                           ;main.c: 114: if ((sys_ctrl.delay1 % 250) > 6 && (sys_ctrl.delay1 % 250) <247)
  2446  025D  30FA               	movlw	250
  2447  025E  0020               	movlb	0	; select bank0
  2448  025F  00A2               	movwf	___lwmod@divisor
  2449  0260  3000               	movlw	0
  2450  0261  00A3               	movwf	___lwmod@divisor+1
  2451  0262  0021               	movlb	1	; select bank1
  2452  0263  084C               	movf	((_sys_ctrl+1)^(0+128)+2),w
  2453  0264  0020               	movlb	0	; select bank0
  2454  0265  00A5               	movwf	___lwmod@dividend+1
  2455  0266  0021               	movlb	1	; select bank1
  2456  0267  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2457  0268  0020               	movlb	0	; select bank0
  2458  0269  00A4               	movwf	___lwmod@dividend
  2459  026A  318D  2597  3182   	fcall	___lwmod
  2460  026D  3000               	movlw	0
  2461  026E  0020               	movlb	0	; select bank0
  2462  026F  0223               	subwf	?___lwmod+1,w
  2463  0270  3007               	movlw	7
  2464  0271  1903               	skipnz
  2465  0272  0222               	subwf	?___lwmod,w
  2466  0273  1C03               	skipc
  2467  0274  2A91               	goto	l3071
  2468  0275  30FA               	movlw	250
  2469  0276  00A2               	movwf	___lwmod@divisor
  2470  0277  3000               	movlw	0
  2471  0278  00A3               	movwf	___lwmod@divisor+1
  2472  0279  0021               	movlb	1	; select bank1
  2473  027A  084C               	movf	((_sys_ctrl+1)^(0+128)+2),w
  2474  027B  0020               	movlb	0	; select bank0
  2475  027C  00A5               	movwf	___lwmod@dividend+1
  2476  027D  0021               	movlb	1	; select bank1
  2477  027E  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2478  027F  0020               	movlb	0	; select bank0
  2479  0280  00A4               	movwf	___lwmod@dividend
  2480  0281  318D  2597  3182   	fcall	___lwmod
  2481  0284  3000               	movlw	0
  2482  0285  0020               	movlb	0	; select bank0
  2483  0286  0223               	subwf	?___lwmod+1,w
  2484  0287  30F7               	movlw	247
  2485  0288  1903               	skipnz
  2486  0289  0222               	subwf	?___lwmod,w
  2487  028A  1803               	skipnc
  2488  028B  2A91               	goto	l3071
  2489                           
  2490                           ;main.c: 115: key = remote_hits();
  2491  028C  3180  2056  3182   	fcall	_remote_hits
  2492  028F  0020               	movlb	0	; select bank0
  2493  0290  2A92               	goto	L1
  2494  0291                     l3071:	
  2495                           
  2496                           ;main.c: 116: else key = (0x11);
  2497  0291  3011               	movlw	17
  2498  0292                     L1:	
  2499  0292  00D9               	movwf	??_standby
  2500  0293  0859               	movf	??_standby,w
  2501  0294  00DA               	movwf	standby@key
  2502                           
  2503                           ;main.c: 118: if ((0x09) == key){
  2504  0295  3009               	movlw	9
  2505  0296  065A               	xorwf	standby@key,w
  2506  0297  1D03               	btfss	3,2
  2507  0298  2AA0               	goto	l3083
  2508                           
  2509                           ;main.c: 119: sys_ctrl.sys_st = (2);
  2510  0299  3002               	movlw	2
  2511  029A  00D9               	movwf	??_standby
  2512  029B  0859               	movf	??_standby,w
  2513  029C  0021               	movlb	1	; select bank1
  2514  029D  00CD               	movwf	(_sys_ctrl^(0+128)+4)
  2515                           
  2516                           ;main.c: 120: sys_ctrl.sub_st = 0;
  2517  029E  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2518                           
  2519                           ;main.c: 121: return;
  2520  029F  0008               	return
  2521  02A0                     l3083:	
  2522                           ;main.c: 122: } else if (((0x05) == key) || ((0x06) == key) || ((0x07) == key)){
  2523                           
  2524  02A0  3005               	movlw	5
  2525  02A1  0020               	movlb	0	; select bank0
  2526  02A2  065A               	xorwf	standby@key,w
  2527  02A3  1903               	btfsc	3,2
  2528  02A4  2AAD               	goto	l3089
  2529  02A5  3006               	movlw	6
  2530  02A6  065A               	xorwf	standby@key,w
  2531  02A7  1903               	btfsc	3,2
  2532  02A8  2AAD               	goto	l3089
  2533  02A9  3007               	movlw	7
  2534  02AA  065A               	xorwf	standby@key,w
  2535  02AB  1D03               	btfss	3,2
  2536  02AC  2AEB               	goto	l3117
  2537  02AD                     l3089:	
  2538                           
  2539                           ;main.c: 123: if ((0) == equipment_type() && (((0x05) == key) || ((0x06) == key))){
  2540  02AD  318C  24AF  3182   	fcall	_equipment_type
  2541  02B0  3A00               	xorlw	0
  2542  02B1  1D03               	skipz
  2543  02B2  2ADD               	goto	l3109
  2544  02B3  3005               	movlw	5
  2545  02B4  0020               	movlb	0	; select bank0
  2546  02B5  065A               	xorwf	standby@key,w
  2547  02B6  1903               	btfsc	3,2
  2548  02B7  2ABC               	goto	l3095
  2549  02B8  3006               	movlw	6
  2550  02B9  065A               	xorwf	standby@key,w
  2551  02BA  1D03               	btfss	3,2
  2552  02BB  2ADD               	goto	l3109
  2553  02BC                     l3095:	
  2554                           
  2555                           ;main.c: 124: equipmet_uart_send(key);
  2556  02BC  085A               	movf	standby@key,w
  2557  02BD  318E  2623  3182   	fcall	_equipmet_uart_send
  2558                           
  2559                           ;main.c: 125: clear_ack();
  2560  02C0  318C  241B  3182   	fcall	_clear_ack
  2561                           
  2562                           ;main.c: 126: led_ctrl(75, 1);
  2563  02C3  304B               	movlw	75
  2564  02C4  0020               	movlb	0	; select bank0
  2565  02C5  00A2               	movwf	led_ctrl@period
  2566  02C6  3000               	movlw	0
  2567  02C7  00A3               	movwf	led_ctrl@period+1
  2568  02C8  01A4               	clrf	led_ctrl@times
  2569  02C9  0AA4               	incf	led_ctrl@times,f
  2570  02CA  318C  24E6         	fcall	_led_ctrl
  2571                           
  2572                           ;main.c: 127: sys_ctrl.repeat_key = key;
  2573  02CC  0020               	movlb	0	; select bank0
  2574  02CD  085A               	movf	standby@key,w
  2575  02CE  00D9               	movwf	??_standby
  2576  02CF  0859               	movf	??_standby,w
  2577  02D0  0021               	movlb	1	; select bank1
  2578  02D1  00CF               	movwf	(_sys_ctrl^(0+128)+6)
  2579                           
  2580                           ;main.c: 128: sys_ctrl.delay0 = 310;
  2581  02D2  3036               	movlw	54
  2582  02D3  00C9               	movwf	_sys_ctrl^(0+128)
  2583  02D4  3001               	movlw	1
  2584  02D5  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2585                           
  2586                           ;main.c: 129: sys_ctrl.sub_st = 3;
  2587  02D6  3003               	movlw	3
  2588  02D7  0020               	movlb	0	; select bank0
  2589  02D8  00D9               	movwf	??_standby
  2590  02D9  0859               	movf	??_standby,w
  2591  02DA  0021               	movlb	1	; select bank1
  2592  02DB  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  2593                           
  2594                           ;main.c: 130: return;
  2595  02DC  0008               	return
  2596  02DD                     l3109:	
  2597                           
  2598                           ;main.c: 131: }
  2599                           ;main.c: 132: sys_ctrl.sys_st = (3);
  2600  02DD  3003               	movlw	3
  2601  02DE  0020               	movlb	0	; select bank0
  2602  02DF  00D9               	movwf	??_standby
  2603  02E0  0859               	movf	??_standby,w
  2604  02E1  0021               	movlb	1	; select bank1
  2605  02E2  00CD               	movwf	(_sys_ctrl^(0+128)+4)
  2606                           
  2607                           ;main.c: 133: sys_ctrl.repeat_key = key;
  2608  02E3  0020               	movlb	0	; select bank0
  2609  02E4  085A               	movf	standby@key,w
  2610  02E5  00D9               	movwf	??_standby
  2611  02E6  0859               	movf	??_standby,w
  2612  02E7  0021               	movlb	1	; select bank1
  2613  02E8  00CF               	movwf	(_sys_ctrl^(0+128)+6)
  2614                           
  2615                           ;main.c: 134: sys_ctrl.sub_st = 0;
  2616  02E9  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2617                           
  2618                           ;main.c: 135: return;
  2619  02EA  0008               	return
  2620  02EB                     l3117:	
  2621                           ;main.c: 136: }
  2622                           
  2623                           
  2624                           ;main.c: 137: else if ((0x11) != key) {
  2625  02EB  3011               	movlw	17
  2626  02EC  0020               	movlb	0	; select bank0
  2627  02ED  065A               	xorwf	standby@key,w
  2628  02EE  1903               	btfsc	3,2
  2629  02EF  2B11               	goto	l3127
  2630                           
  2631                           ;main.c: 138: equipmet_uart_send(key);
  2632  02F0  085A               	movf	standby@key,w
  2633  02F1  318E  2623  3182   	fcall	_equipmet_uart_send
  2634                           
  2635                           ;main.c: 139: clear_ack();
  2636  02F4  318C  241B  3182   	fcall	_clear_ack
  2637                           
  2638                           ;main.c: 140: sys_ctrl.repeat_key = key;
  2639  02F7  0020               	movlb	0	; select bank0
  2640  02F8  085A               	movf	standby@key,w
  2641  02F9  00D9               	movwf	??_standby
  2642  02FA  0859               	movf	??_standby,w
  2643  02FB  0021               	movlb	1	; select bank1
  2644  02FC  00CF               	movwf	(_sys_ctrl^(0+128)+6)
  2645                           
  2646                           ;main.c: 141: sys_ctrl.delay0 = 310;
  2647  02FD  3036               	movlw	54
  2648  02FE  00C9               	movwf	_sys_ctrl^(0+128)
  2649  02FF  3001               	movlw	1
  2650  0300  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2651                           
  2652                           ;main.c: 142: led_ctrl(75, 1);
  2653  0301  304B               	movlw	75
  2654  0302  0020               	movlb	0	; select bank0
  2655  0303  00A2               	movwf	led_ctrl@period
  2656  0304  3000               	movlw	0
  2657  0305  00A3               	movwf	led_ctrl@period+1
  2658  0306  01A4               	clrf	led_ctrl@times
  2659  0307  0AA4               	incf	led_ctrl@times,f
  2660  0308  318C  24E6  3182   	fcall	_led_ctrl
  2661                           
  2662                           ;main.c: 143: sys_ctrl.sub_st = 3;
  2663  030B  3003               	movlw	3
  2664  030C  0020               	movlb	0	; select bank0
  2665  030D  00D9               	movwf	??_standby
  2666  030E  0859               	movf	??_standby,w
  2667  030F  0021               	movlb	1	; select bank1
  2668  0310  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  2669  0311                     l3127:	
  2670                           
  2671                           ;main.c: 144: }
  2672                           ;main.c: 146: if (1 == RA2){
  2673  0311  0020               	movlb	0	; select bank0
  2674  0312  1D0C               	btfss	12,2	;volatile
  2675  0313  0008               	return
  2676                           
  2677                           ;main.c: 147: sys_ctrl.sub_st = 2;
  2678  0314  3002               	movlw	2
  2679  0315  00D9               	movwf	??_standby
  2680  0316  0859               	movf	??_standby,w
  2681  0317  0021               	movlb	1	; select bank1
  2682  0318  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  2683                           
  2684                           ;main.c: 148: sys_ctrl.delay0 = 1500;
  2685  0319  30DC               	movlw	220
  2686  031A  00C9               	movwf	_sys_ctrl^(0+128)
  2687  031B  3005               	movlw	5
  2688  031C  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2689                           
  2690                           ;main.c: 149: }
  2691                           ;main.c: 150: }
  2692  031D  0008               	return
  2693  031E                     l3131:	
  2694                           
  2695                           ;main.c: 152: else if (2 == sys_ctrl.sub_st){
  2696  031E  3002               	movlw	2
  2697  031F  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  2698  0320  1D03               	btfss	3,2
  2699  0321  2B37               	goto	l3145
  2700                           
  2701                           ;main.c: 153: sys_ctrl.delay0--;
  2702  0322  3001               	movlw	1
  2703  0323  02C9               	subwf	_sys_ctrl^(0+128),f
  2704  0324  3000               	movlw	0
  2705  0325  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  2706                           
  2707                           ;main.c: 154: if (0 == sys_ctrl.delay0){
  2708  0326  0849               	movf	_sys_ctrl^(0+128),w
  2709  0327  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2710  0328  1D03               	btfss	3,2
  2711  0329  2B31               	goto	l3141
  2712                           
  2713                           ;main.c: 155: sys_ctrl.sys_st = (4);
  2714  032A  3004               	movlw	4
  2715  032B  0020               	movlb	0	; select bank0
  2716  032C  00D9               	movwf	??_standby
  2717  032D  0859               	movf	??_standby,w
  2718  032E  0021               	movlb	1	; select bank1
  2719  032F  00CD               	movwf	(_sys_ctrl^(0+128)+4)
  2720                           
  2721                           ;main.c: 156: sys_ctrl.sub_st = 0;
  2722  0330  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2723  0331                     l3141:	
  2724                           
  2725                           ;main.c: 157: }
  2726                           ;main.c: 159: if (0 == RA2) {
  2727  0331  0020               	movlb	0	; select bank0
  2728  0332  190C               	btfsc	12,2	;volatile
  2729  0333  0008               	return
  2730                           
  2731                           ;main.c: 160: sys_ctrl.sub_st = 0;
  2732  0334  0021               	movlb	1	; select bank1
  2733  0335  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2734                           
  2735                           ;main.c: 161: }
  2736                           ;main.c: 162: }
  2737  0336  0008               	return
  2738  0337                     l3145:	
  2739                           
  2740                           ;main.c: 164: else if (3 == sys_ctrl.sub_st){
  2741  0337  3003               	movlw	3
  2742  0338  064E               	xorwf	(_sys_ctrl^(0+128)+5),w
  2743  0339  1D03               	btfss	3,2
  2744  033A  0008               	return
  2745                           
  2746                           ;main.c: 165: sys_ctrl.delay0--;
  2747  033B  3001               	movlw	1
  2748  033C  02C9               	subwf	_sys_ctrl^(0+128),f
  2749  033D  3000               	movlw	0
  2750  033E  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  2751                           
  2752                           ;main.c: 166: if (150 == sys_ctrl.delay0) {
  2753  033F  3096               	movlw	150
  2754  0340  0649               	xorwf	_sys_ctrl^(0+128),w
  2755  0341  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2756  0342  1D03               	btfss	3,2
  2757  0343  2B54               	goto	l3155
  2758                           
  2759                           ;main.c: 167: if (get_ack()) {
  2760  0344  318C  2421  3182   	fcall	_get_ack
  2761  0347  3A00               	xorlw	0
  2762  0348  1903               	skipnz
  2763  0349  2B54               	goto	l3155
  2764                           
  2765                           ;main.c: 168: led_ctrl(75, 1);
  2766  034A  304B               	movlw	75
  2767  034B  0020               	movlb	0	; select bank0
  2768  034C  00A2               	movwf	led_ctrl@period
  2769  034D  3000               	movlw	0
  2770  034E  00A3               	movwf	led_ctrl@period+1
  2771  034F  01A4               	clrf	led_ctrl@times
  2772  0350  0AA4               	incf	led_ctrl@times,f
  2773  0351  318C  24E6  3182   	fcall	_led_ctrl
  2774  0354                     l3155:	
  2775                           
  2776                           ;main.c: 169: }
  2777                           ;main.c: 170: }
  2778                           ;main.c: 171: if (0 == sys_ctrl.delay0){
  2779  0354  0021               	movlb	1	; select bank1
  2780  0355  0849               	movf	_sys_ctrl^(0+128),w
  2781  0356  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2782  0357  1D03               	btfss	3,2
  2783  0358  0008               	return
  2784                           
  2785                           ;main.c: 172: sys_ctrl.sub_st = 0;
  2786  0359  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2787  035A  0008               	return
  2788  035B                     __end_of_standby:	
  2789                           
  2790                           	psect	text4
  2791  0E9E                     __ptext4:	
  2792 ;; *************** function _sys_power_on *****************
  2793 ;; Defined at:
  2794 ;;		line 74 in file "source/main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2808 ;;      Params:         0       0       0       0
  2809 ;;      Locals:         0       2       0       0
  2810 ;;      Temps:          0       2       0       0
  2811 ;;      Totals:         0       4       0       0
  2812 ;;Total ram usage:        4 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    4
  2815 ;; This function calls:
  2816 ;;		_led_ctrl
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _sys_power_on
  2824  0E9E                     _sys_power_on:	
  2825                           
  2826                           ;main.c: 75: if (0 == sys_ctrl.sub_st){
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _sys_power_on: [wreg+status,2+status,0+pclath+cstack]
  2830  0E9E  0021               	movlb	1	; select bank1
  2831  0E9F  084E               	movf	(_sys_ctrl^(0+128)+5),w
  2832  0EA0  1D03               	btfss	3,2
  2833  0EA1  2EAB               	goto	l3013
  2834                           
  2835                           ;main.c: 76: sys_ctrl.delay0 = 0;
  2836  0EA2  01C9               	clrf	_sys_ctrl^(0+128)
  2837  0EA3  01CA               	clrf	(_sys_ctrl+1)^(0+128)
  2838                           
  2839                           ;main.c: 77: sys_ctrl.delay1 = 4;
  2840  0EA4  3004               	movlw	4
  2841  0EA5  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  2842  0EA6  3000               	movlw	0
  2843  0EA7  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  2844                           
  2845                           ;main.c: 78: sys_ctrl.sub_st = 1;
  2846  0EA8  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2847  0EA9  0ACE               	incf	(_sys_ctrl^(0+128)+5),f
  2848                           
  2849                           ;main.c: 79: } else if (1 == sys_ctrl.sub_st) {
  2850  0EAA  0008               	return
  2851  0EAB                     l3013:	
  2852  0EAB  034E               	decf	(_sys_ctrl^(0+128)+5),w
  2853  0EAC  1D03               	btfss	3,2
  2854  0EAD  0008               	return
  2855                           
  2856                           ;main.c: 80: if (0 == sys_ctrl.delay0) {
  2857  0EAE  0849               	movf	_sys_ctrl^(0+128),w
  2858  0EAF  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  2859  0EB0  1D03               	btfss	3,2
  2860  0EB1  2EE2               	goto	l3037
  2861                           
  2862                           ;main.c: 81: if (0 == sys_ctrl.delay1) {
  2863  0EB2  084B               	movf	(_sys_ctrl^(0+128)+2),w
  2864  0EB3  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  2865  0EB4  1D03               	btfss	3,2
  2866  0EB5  2EBA               	goto	l3025
  2867                           
  2868                           ;main.c: 82: sys_ctrl.sub_st = 0;
  2869  0EB6  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  2870                           
  2871                           ;main.c: 83: sys_ctrl.sys_st = (1);
  2872  0EB7  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  2873  0EB8  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  2874                           
  2875                           ;main.c: 84: return;
  2876  0EB9  0008               	return
  2877  0EBA                     l3025:	
  2878                           
  2879                           ;main.c: 85: }
  2880                           ;main.c: 86: sys_ctrl.delay1--;
  2881  0EBA  3001               	movlw	1
  2882  0EBB  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  2883  0EBC  3000               	movlw	0
  2884  0EBD  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  2885                           
  2886                           ;main.c: 87: led_ctrl((2) & (0x1<<sys_ctrl.delay1) ? 400 : 30, 1);
  2887  0EBE  3001               	movlw	1
  2888  0EBF  0020               	movlb	0	; select bank0
  2889  0EC0  00A6               	movwf	??_sys_power_on
  2890  0EC1  3000               	movlw	0
  2891  0EC2  00A7               	movwf	??_sys_power_on+1
  2892  0EC3  0021               	movlb	1	; select bank1
  2893  0EC4  0A4B               	incf	(_sys_ctrl^(0+128)+2),w
  2894  0EC5  0020               	movlb	0	; select bank0
  2895  0EC6  2EC9               	goto	u3394
  2896  0EC7                     u3395:	
  2897  0EC7  35A6               	lslf	??_sys_power_on,f
  2898  0EC8  0DA7               	rlf	??_sys_power_on+1,f
  2899  0EC9                     u3394:	
  2900  0EC9  0B89               	decfsz	9,f
  2901  0ECA  2EC7               	goto	u3395
  2902  0ECB  18A6               	btfsc	??_sys_power_on,1
  2903  0ECC  2ED1               	goto	l3031
  2904  0ECD  301E               	movlw	30
  2905  0ECE  00A8               	movwf	_sys_power_on$208
  2906  0ECF  3000               	movlw	0
  2907  0ED0  2ED4               	goto	L2
  2908  0ED1                     l3031:	
  2909  0ED1  3090               	movlw	144
  2910  0ED2  00A8               	movwf	_sys_power_on$208
  2911  0ED3  3001               	movlw	1
  2912  0ED4                     L2:	
  2913  0ED4  00A9               	movwf	_sys_power_on$208+1
  2914  0ED5  0829               	movf	_sys_power_on$208+1,w
  2915  0ED6  00A3               	movwf	led_ctrl@period+1
  2916  0ED7  0828               	movf	_sys_power_on$208,w
  2917  0ED8  00A2               	movwf	led_ctrl@period
  2918  0ED9  01A4               	clrf	led_ctrl@times
  2919  0EDA  0AA4               	incf	led_ctrl@times,f
  2920  0EDB  318C  24E6         	fcall	_led_ctrl
  2921                           
  2922                           ;main.c: 88: sys_ctrl.delay0 = 500;
  2923  0EDD  30F4               	movlw	244
  2924  0EDE  0021               	movlb	1	; select bank1
  2925  0EDF  00C9               	movwf	_sys_ctrl^(0+128)
  2926  0EE0  3001               	movlw	1
  2927  0EE1  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2928  0EE2                     l3037:	
  2929                           
  2930                           ;main.c: 89: }
  2931                           ;main.c: 90: sys_ctrl.delay0--;
  2932  0EE2  3001               	movlw	1
  2933  0EE3  02C9               	subwf	_sys_ctrl^(0+128),f
  2934  0EE4  3000               	movlw	0
  2935  0EE5  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  2936  0EE6  0008               	return
  2937  0EE7                     __end_of_sys_power_on:	
  2938                           
  2939                           	psect	text5
  2940  0F91                     __ptext5:	
  2941 ;; *************** function _wifi_transmit *****************
  2942 ;; Defined at:
  2943 ;;		line 239 in file "source/main.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  key             1   60[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2957 ;;      Params:         0       0       0       0
  2958 ;;      Locals:         0       3       0       0
  2959 ;;      Temps:          0       1       0       0
  2960 ;;      Totals:         0       4       0       0
  2961 ;;Total ram usage:        4 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    6
  2964 ;; This function calls:
  2965 ;;		_clear_ack
  2966 ;;		_equipmet_uart_send
  2967 ;;		_led_ctrl
  2968 ;;		_remote_hits
  2969 ;;		_repeat_lock
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _wifi_transmit
  2977  0F91                     _wifi_transmit:	
  2978                           
  2979                           ;main.c: 241: U08ET key;
  2980                           ;main.c: 243: if (0 == sys_ctrl.sub_st){
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _wifi_transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2984  0F91  0021               	movlb	1	; select bank1
  2985  0F92  084E               	movf	(_sys_ctrl^(0+128)+5),w
  2986  0F93  1D03               	btfss	3,2
  2987  0F94  2FB1               	goto	l3245
  2988                           
  2989                           ;main.c: 244: sys_ctrl.delay0 = 150;
  2990  0F95  3096               	movlw	150
  2991  0F96  00C9               	movwf	_sys_ctrl^(0+128)
  2992  0F97  3000               	movlw	0
  2993  0F98  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  2994                           
  2995                           ;main.c: 245: sys_ctrl.delay1 = ((0x07) == sys_ctrl.repeat_key) ? 250 : 1500;
  2996  0F99  3007               	movlw	7
  2997  0F9A  064F               	xorwf	(_sys_ctrl^(0+128)+6),w
  2998  0F9B  1903               	btfsc	3,2
  2999  0F9C  2FA2               	goto	l3241
  3000  0F9D  30DC               	movlw	220
  3001  0F9E  0020               	movlb	0	; select bank0
  3002  0F9F  00DA               	movwf	_wifi_transmit$215
  3003  0FA0  3005               	movlw	5
  3004  0FA1  2FA6               	goto	L3
  3005  0FA2                     l3241:	
  3006  0FA2  30FA               	movlw	250
  3007  0FA3  0020               	movlb	0	; select bank0
  3008  0FA4  00DA               	movwf	_wifi_transmit$215
  3009  0FA5  3000               	movlw	0
  3010  0FA6                     L3:	
  3011  0FA6  00DB               	movwf	_wifi_transmit$215+1
  3012  0FA7  085B               	movf	_wifi_transmit$215+1,w
  3013  0FA8  0021               	movlb	1	; select bank1
  3014  0FA9  00CC               	movwf	((_sys_ctrl+1)^(0+128)+2)
  3015  0FAA  0020               	movlb	0	; select bank0
  3016  0FAB  085A               	movf	_wifi_transmit$215,w
  3017  0FAC  0021               	movlb	1	; select bank1
  3018  0FAD  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  3019                           
  3020                           ;main.c: 246: sys_ctrl.sub_st = 1;
  3021  0FAE  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  3022  0FAF  0ACE               	incf	(_sys_ctrl^(0+128)+5),f
  3023                           
  3024                           ;main.c: 247: } else if (1 == sys_ctrl.sub_st) {
  3025  0FB0  0008               	return
  3026  0FB1                     l3245:	
  3027  0FB1  034E               	decf	(_sys_ctrl^(0+128)+5),w
  3028  0FB2  1D03               	btfss	3,2
  3029  0FB3  0008               	return
  3030                           
  3031                           ;main.c: 248: key = remote_hits();
  3032  0FB4  3180  2056  318F   	fcall	_remote_hits
  3033  0FB7  0020               	movlb	0	; select bank0
  3034  0FB8  00D9               	movwf	??_wifi_transmit
  3035  0FB9  0859               	movf	??_wifi_transmit,w
  3036  0FBA  00DC               	movwf	wifi_transmit@key
  3037                           
  3038                           ;main.c: 251: sys_ctrl.delay0--;
  3039  0FBB  3001               	movlw	1
  3040  0FBC  0021               	movlb	1	; select bank1
  3041  0FBD  02C9               	subwf	_sys_ctrl^(0+128),f
  3042  0FBE  3000               	movlw	0
  3043  0FBF  3BCA               	subwfb	(_sys_ctrl+1)^(0+128),f
  3044                           
  3045                           ;main.c: 252: if (0 == sys_ctrl.delay0){
  3046  0FC0  0849               	movf	_sys_ctrl^(0+128),w
  3047  0FC1  044A               	iorwf	(_sys_ctrl+1)^(0+128),w
  3048  0FC2  1D03               	btfss	3,2
  3049  0FC3  2FCA               	goto	l3261
  3050                           
  3051                           ;main.c: 253: sys_ctrl.sub_st = 0;
  3052  0FC4  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  3053                           
  3054                           ;main.c: 254: sys_ctrl.sys_st = (1);
  3055  0FC5  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  3056  0FC6  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  3057                           
  3058                           ;main.c: 255: repeat_lock();
  3059  0FC7  318C  241E         	fcall	_repeat_lock
  3060                           
  3061                           ;main.c: 256: return;
  3062  0FC9  0008               	return
  3063  0FCA                     l3261:	
  3064                           
  3065                           ;main.c: 257: }
  3066                           ;main.c: 259: sys_ctrl.delay1--;
  3067  0FCA  3001               	movlw	1
  3068  0FCB  0021               	movlb	1	; select bank1
  3069  0FCC  02CB               	subwf	(_sys_ctrl^(0+128)+2),f
  3070  0FCD  3000               	movlw	0
  3071  0FCE  3BCC               	subwfb	((_sys_ctrl+1)^(0+128)+2),f
  3072                           
  3073                           ;main.c: 260: if (0 == sys_ctrl.delay1){
  3074  0FCF  084B               	movf	(_sys_ctrl^(0+128)+2),w
  3075  0FD0  044C               	iorwf	((_sys_ctrl+1)^(0+128)+2),w
  3076  0FD1  1D03               	btfss	3,2
  3077  0FD2  2FF5               	goto	l3277
  3078                           
  3079                           ;main.c: 261: led_ctrl(75, 1);
  3080  0FD3  304B               	movlw	75
  3081  0FD4  0020               	movlb	0	; select bank0
  3082  0FD5  00A2               	movwf	led_ctrl@period
  3083  0FD6  3000               	movlw	0
  3084  0FD7  00A3               	movwf	led_ctrl@period+1
  3085  0FD8  01A4               	clrf	led_ctrl@times
  3086  0FD9  0AA4               	incf	led_ctrl@times,f
  3087  0FDA  318C  24E6  318F   	fcall	_led_ctrl
  3088                           
  3089                           ;main.c: 262: equipmet_uart_send(sys_ctrl.repeat_key);
  3090  0FDD  0021               	movlb	1	; select bank1
  3091  0FDE  084F               	movf	(_sys_ctrl^(0+128)+6),w
  3092  0FDF  318E  2623  318F   	fcall	_equipmet_uart_send
  3093                           
  3094                           ;main.c: 263: clear_ack();
  3095  0FE2  318C  241B  318F   	fcall	_clear_ack
  3096                           
  3097                           ;main.c: 264: repeat_lock();
  3098  0FE5  318C  241E  318F   	fcall	_repeat_lock
  3099                           
  3100                           ;main.c: 265: sys_ctrl.delay0 = 310;
  3101  0FE8  3036               	movlw	54
  3102  0FE9  0021               	movlb	1	; select bank1
  3103  0FEA  00C9               	movwf	_sys_ctrl^(0+128)
  3104  0FEB  3001               	movlw	1
  3105  0FEC  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  3106                           
  3107                           ;main.c: 266: sys_ctrl.sub_st = 3;
  3108  0FED  3003               	movlw	3
  3109  0FEE  0020               	movlb	0	; select bank0
  3110  0FEF  00D9               	movwf	??_wifi_transmit
  3111  0FF0  0859               	movf	??_wifi_transmit,w
  3112  0FF1  0021               	movlb	1	; select bank1
  3113  0FF2  00CE               	movwf	(_sys_ctrl^(0+128)+5)
  3114                           
  3115                           ;main.c: 267: sys_ctrl.sys_st = (1);
  3116  0FF3  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  3117  0FF4  0ACD               	incf	(_sys_ctrl^(0+128)+4),f
  3118  0FF5                     l3277:	
  3119                           
  3120                           ;main.c: 268: }
  3121                           ;main.c: 270: if (sys_ctrl.repeat_key == key){
  3122  0FF5  084F               	movf	(_sys_ctrl^(0+128)+6),w
  3123  0FF6  0020               	movlb	0	; select bank0
  3124  0FF7  065C               	xorwf	wifi_transmit@key,w
  3125  0FF8  1D03               	skipz
  3126  0FF9  0008               	return
  3127                           
  3128                           ;main.c: 271: sys_ctrl.delay0 = 150;
  3129  0FFA  3096               	movlw	150
  3130  0FFB  0021               	movlb	1	; select bank1
  3131  0FFC  00C9               	movwf	_sys_ctrl^(0+128)
  3132  0FFD  3000               	movlw	0
  3133  0FFE  00CA               	movwf	(_sys_ctrl^(0+128)+1)
  3134  0FFF  0008               	return
  3135  1000                     __end_of_wifi_transmit:	
  3136                           
  3137                           	psect	text6
  3138  0C43                     __ptext6:	
  3139 ;; *************** function _sys_task *****************
  3140 ;; Defined at:
  3141 ;;		line 45 in file "source/timer.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3155 ;;      Params:         0       0       0       0
  3156 ;;      Locals:         0       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:         0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    3
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _sys_task
  3171  0C43                     _sys_task:	
  3172                           
  3173                           ;timer.c: 46: if (sys_cnt < 40) return (0);
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _sys_task: [wreg+status,2]
  3177  0C43  3028               	movlw	40
  3178  0C44  0020               	movlb	0	; select bank0
  3179  0C45  0263               	subwf	_sys_cnt,w
  3180  0C46  1803               	skipnc
  3181  0C47  2C4A               	goto	l2999
  3182  0C48  3000               	movlw	0
  3183  0C49  0008               	return
  3184  0C4A                     l2999:	
  3185                           
  3186                           ;timer.c: 47: sys_cnt = 0;
  3187  0C4A  01E3               	clrf	_sys_cnt
  3188                           
  3189                           ;timer.c: 48: return (1);
  3190  0C4B  3001               	movlw	1
  3191  0C4C  0008               	return
  3192  0C4D                     __end_of_sys_task:	
  3193                           
  3194                           	psect	text7
  3195  0CCA                     __ptext7:	
  3196 ;; *************** function _sys_init *****************
  3197 ;; Defined at:
  3198 ;;		line 58 in file "source/main.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3212 ;;      Params:         0       0       0       0
  3213 ;;      Locals:         0       0       0       0
  3214 ;;      Temps:          0       0       0       0
  3215 ;;      Totals:         0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    5
  3219 ;; This function calls:
  3220 ;;		_Init_Uart
  3221 ;;		_init_fosc
  3222 ;;		_init_timer0
  3223 ;;		_led_init
  3224 ;;		_remote_init
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _sys_init
  3232  0CCA                     _sys_init:	
  3233                           
  3234                           ;main.c: 59: init_fosc();
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _sys_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3238  0CCA  318C  2427  318C   	fcall	_init_fosc
  3239                           
  3240                           ;main.c: 60: init_timer0();
  3241  0CCD  318C  2439  318C   	fcall	_init_timer0
  3242                           
  3243                           ;main.c: 61: remote_init();
  3244  0CD0  318E  2659  318C   	fcall	_remote_init
  3245                           
  3246                           ;main.c: 62: Init_Uart();
  3247  0CD3  318D  2505  318C   	fcall	_Init_Uart
  3248                           
  3249                           ;main.c: 63: led_init();
  3250  0CD6  318C  2457         	fcall	_led_init
  3251                           
  3252                           ;main.c: 65: ANSELA = 0x00;
  3253  0CD8  0023               	movlb	3	; select bank3
  3254  0CD9  018C               	clrf	12	;volatile
  3255                           
  3256                           ;main.c: 66: TRISAbits.TRISA2 = 1;
  3257  0CDA  0021               	movlb	1	; select bank1
  3258  0CDB  150C               	bsf	12,2	;volatile
  3259                           
  3260                           ;main.c: 67: GIE=1;
  3261  0CDC  178B               	bsf	11,7	;volatile
  3262                           
  3263                           ;main.c: 68: sys_ctrl.delay0 = 0;
  3264  0CDD  01C9               	clrf	_sys_ctrl^(0+128)
  3265  0CDE  01CA               	clrf	(_sys_ctrl+1)^(0+128)
  3266                           
  3267                           ;main.c: 69: sys_ctrl.sub_st = 0;
  3268  0CDF  01CE               	clrf	(_sys_ctrl^(0+128)+5)
  3269                           
  3270                           ;main.c: 70: sys_ctrl.sys_st = (0);
  3271  0CE0  01CD               	clrf	(_sys_ctrl^(0+128)+4)
  3272                           
  3273                           ;main.c: 71: sys_ctrl.delay1 = 250;
  3274  0CE1  30FA               	movlw	250
  3275  0CE2  00CB               	movwf	(_sys_ctrl^(0+128)+2)
  3276  0CE3  3000               	movlw	0
  3277  0CE4  00CC               	movwf	(_sys_ctrl^(0+128)+3)
  3278  0CE5  0008               	return
  3279  0CE6                     __end_of_sys_init:	
  3280                           
  3281                           	psect	text8
  3282  0E59                     __ptext8:	
  3283 ;; *************** function _remote_init *****************
  3284 ;; Defined at:
  3285 ;;		line 12 in file "source/remote.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  index           1    7[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3299 ;;      Params:         0       0       0       0
  3300 ;;      Locals:         0       1       0       0
  3301 ;;      Temps:          0       1       0       0
  3302 ;;      Totals:         0       2       0       0
  3303 ;;Total ram usage:        2 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    4
  3306 ;; This function calls:
  3307 ;;		_eeprom_read
  3308 ;; This function is called by:
  3309 ;;		_sys_init
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _remote_init
  3315  0E59                     _remote_init:	
  3316                           
  3317                           ;remote.c: 13: U08ET index;
  3318                           ;remote.c: 14: TRISA |= (1<<5);
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _remote_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3322  0E59  0021               	movlb	1	; select bank1
  3323  0E5A  168C               	bsf	12,5	;volatile
  3324                           
  3325                           ;remote.c: 16: remoter.st_last = 0;
  3326  0E5B  1027               	bcf	_remoter^(0+128),0
  3327                           
  3328                           ;remote.c: 17: remoter.st_curt = 0;
  3329  0E5C  10A7               	bcf	_remoter^(0+128),1
  3330                           
  3331                           ;remote.c: 18: remoter.st_remo = (1);
  3332  0E5D  0827               	movf	_remoter^(0+128),w
  3333  0E5E  3903               	andlw	-253
  3334  0E5F  3804               	iorlw	4
  3335  0E60  00A7               	movwf	_remoter^(0+128)
  3336                           
  3337                           ;remote.c: 19: remoter.recvidx = 0;
  3338  0E61  01A8               	clrf	(_remoter^(0+128)+1)
  3339                           
  3340                           ;remote.c: 20: remoter.repeat_pass = 0;
  3341  0E62  01A9               	clrf	(_remoter^(0+128)+2)
  3342                           
  3343                           ;remote.c: 22: for (index = 0; index < 18; index++)
  3344  0E63  0020               	movlb	0	; select bank0
  3345  0E64  01A7               	clrf	remote_init@index
  3346  0E65  3012               	movlw	18
  3347  0E66  0227               	subwf	remote_init@index,w
  3348  0E67  1803               	btfsc	3,0
  3349  0E68  2E7D               	goto	l2445
  3350  0E69                     l2439:	
  3351                           
  3352                           ;remote.c: 23: ((U08ET*)(&remoter.sn_save[0]))[index] = (U08ET)eeprom_read(index + ((U08
      +                          ET)(0)));
  3353  0E69  0827               	movf	remote_init@index,w
  3354  0E6A  318D  2526  318E   	fcall	_eeprom_read
  3355  0E6D  0020               	movlb	0	; select bank0
  3356  0E6E  00A6               	movwf	??_remote_init
  3357  0E6F  0827               	movf	remote_init@index,w
  3358  0E70  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  3359  0E71  0086               	movwf	6
  3360  0E72  0187               	clrf	7
  3361  0E73  0826               	movf	??_remote_init,w
  3362  0E74  0081               	movwf	1
  3363  0E75  3001               	movlw	1
  3364  0E76  00A6               	movwf	??_remote_init
  3365  0E77  0826               	movf	??_remote_init,w
  3366  0E78  07A7               	addwf	remote_init@index,f
  3367  0E79  3012               	movlw	18
  3368  0E7A  0227               	subwf	remote_init@index,w
  3369  0E7B  1C03               	skipc
  3370  0E7C  2E69               	goto	l2439
  3371  0E7D                     l2445:	
  3372                           
  3373                           ;remote.c: 25: if ((9527) != remoter.save_flag) {
  3374  0E7D  3037               	movlw	55
  3375  0E7E  0021               	movlb	1	; select bank1
  3376  0E7F  0647               	xorwf	(_remoter^(0+128)+32),w
  3377  0E80  3025               	movlw	37
  3378  0E81  1903               	skipnz
  3379  0E82  0648               	xorwf	((_remoter+1)^(0+128)+32),w
  3380  0E83  1903               	btfsc	3,2
  3381  0E84  0008               	return
  3382                           
  3383                           ;remote.c: 26: for (index = 0; index < 8; index++)
  3384  0E85  0020               	movlb	0	; select bank0
  3385  0E86  01A7               	clrf	remote_init@index
  3386  0E87  3008               	movlw	8
  3387  0E88  0227               	subwf	remote_init@index,w
  3388  0E89  1803               	btfsc	3,0
  3389  0E8A  2E98               	goto	l2459
  3390  0E8B                     l2453:	
  3391                           
  3392                           ;remote.c: 27: remoter.sn_save[index] = 0x0;
  3393  0E8B  0827               	movf	remote_init@index,w
  3394  0E8C  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  3395  0E8D  0086               	movwf	6
  3396  0E8E  0187               	clrf	7
  3397  0E8F  0181               	clrf	1
  3398  0E90  3001               	movlw	1
  3399  0E91  00A6               	movwf	??_remote_init
  3400  0E92  0826               	movf	??_remote_init,w
  3401  0E93  07A7               	addwf	remote_init@index,f
  3402  0E94  3008               	movlw	8
  3403  0E95  0227               	subwf	remote_init@index,w
  3404  0E96  1C03               	skipc
  3405  0E97  2E8B               	goto	l2453
  3406  0E98                     l2459:	
  3407                           
  3408                           ;remote.c: 29: remoter.save_flag = (9527);
  3409  0E98  3037               	movlw	55
  3410  0E99  0021               	movlb	1	; select bank1
  3411  0E9A  00C7               	movwf	(_remoter^(0+128)+32)
  3412  0E9B  3025               	movlw	37
  3413  0E9C  00C8               	movwf	(_remoter^(0+128)+33)
  3414  0E9D  0008               	return
  3415  0E9E                     __end_of_remote_init:	
  3416                           ;remote.c: 30: }
  3417                           ;remote.c: 31: return;
  3418                           
  3419                           
  3420                           	psect	text9
  3421  0D26                     __ptext9:	
  3422 ;; *************** function _eeprom_read *****************
  3423 ;; Defined at:
  3424 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeread.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  addr            1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  addr            1    5[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      unsigned char 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3438 ;;      Params:         0       0       0       0
  3439 ;;      Locals:         0       1       0       0
  3440 ;;      Temps:          0       3       0       0
  3441 ;;      Totals:         0       4       0       0
  3442 ;;Total ram usage:        4 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    3
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_remote_init
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _eeprom_read
  3454  0D26                     _eeprom_read:	
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3458                           ;eeprom_read@addr stored from wreg
  3459  0D26  0020               	movlb	0	; select bank0
  3460  0D27  00A5               	movwf	eeprom_read@addr
  3461  0D28  2D2A               	goto	l489
  3462  0D29                     u2371:	
  3463  0D29  0020               	movlb	0	; select bank0
  3464  0D2A                     l489:	
  3465  0D2A  0064               	clrwdt	;# 
  3466  0D2B  0023               	movlb	3	; select bank3
  3467  0D2C  1895               	btfsc	21,1	;volsfr
  3468  0D2D  2D29               	goto	u2371
  3469  0D2E  0020               	movlb	0	; select bank0
  3470  0D2F  0825               	movf	eeprom_read@addr,w
  3471  0D30  00A2               	movwf	??_eeprom_read
  3472  0D31  01A3               	clrf	??_eeprom_read+1
  3473  0D32  0822               	movf	??_eeprom_read,w
  3474  0D33  0023               	movlb	3	; select bank3
  3475  0D34  0091               	movwf	17	;volatile
  3476  0D35  0020               	movlb	0	; select bank0
  3477  0D36  0823               	movf	??_eeprom_read+1,w
  3478  0D37  0023               	movlb	3	; select bank3
  3479  0D38  0092               	movwf	18	;volatile
  3480  0D39  303F               	movlw	63
  3481  0D3A  0020               	movlb	0	; select bank0
  3482  0D3B  00A4               	movwf	??_eeprom_read+2
  3483  0D3C  0824               	movf	??_eeprom_read+2,w
  3484  0D3D  0023               	movlb	3	; select bank3
  3485  0D3E  0595               	andwf	21,f	;volsfr
  3486  0D3F  1415               	bsf	21,0	;volsfr
  3487  0D40  1003               	clrc
  3488  0D41  1815               	btfsc	21,0	;volsfr
  3489  0D42  1403               	setc
  3490  0D43  3000               	movlw	0
  3491  0D44  3D09               	addwfc	9,w
  3492  0D45  0813               	movf	19,w	;volatile
  3493  0D46  0008               	return
  3494  0D47                     __end_of_eeprom_read:	
  3495                           
  3496                           	psect	text10
  3497  0C57                     __ptext10:	
  3498 ;; *************** function _led_init *****************
  3499 ;; Defined at:
  3500 ;;		line 8 in file "source/ledTask.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3514 ;;      Params:         0       0       0       0
  3515 ;;      Locals:         0       0       0       0
  3516 ;;      Temps:          0       1       0       0
  3517 ;;      Totals:         0       1       0       0
  3518 ;;Total ram usage:        1 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    3
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_sys_init
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _led_init
  3530  0C57                     _led_init:	
  3531                           
  3532                           ;ledTask.c: 9: st_led.period = 0;
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _led_init: [wreg+status,2+status,0]
  3536  0C57  0021               	movlb	1	; select bank1
  3537  0C58  01A1               	clrf	(_st_led^(0+128)+1)
  3538  0C59  01A2               	clrf	((_st_led+1)^(0+128)+1)
  3539                           
  3540                           ;ledTask.c: 10: st_led.count = 0;
  3541  0C5A  01A3               	clrf	(_st_led^(0+128)+3)
  3542  0C5B  01A4               	clrf	((_st_led+1)^(0+128)+3)
  3543                           
  3544                           ;ledTask.c: 11: st_led.times = 0;
  3545  0C5C  01A5               	clrf	(_st_led^(0+128)+5)
  3546                           
  3547                           ;ledTask.c: 12: st_led.times_cnt = 0;
  3548  0C5D  01A6               	clrf	(_st_led^(0+128)+6)
  3549                           
  3550                           ;ledTask.c: 14: TRISA &= ~(1<<4);
  3551  0C5E  30EF               	movlw	239
  3552  0C5F  0020               	movlb	0	; select bank0
  3553  0C60  00A2               	movwf	??_led_init
  3554  0C61  0822               	movf	??_led_init,w
  3555  0C62  0021               	movlb	1	; select bank1
  3556  0C63  058C               	andwf	12,f	;volatile
  3557                           
  3558                           ;ledTask.c: 15: RA4 = 1;
  3559  0C64  0020               	movlb	0	; select bank0
  3560  0C65  160C               	bsf	12,4	;volatile
  3561  0C66  0008               	return
  3562  0C67                     __end_of_led_init:	
  3563                           
  3564                           	psect	text11
  3565  0C39                     __ptext11:	
  3566 ;; *************** function _init_timer0 *****************
  3567 ;; Defined at:
  3568 ;;		line 12 in file "source/timer.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3582 ;;      Params:         0       0       0       0
  3583 ;;      Locals:         0       0       0       0
  3584 ;;      Temps:          0       0       0       0
  3585 ;;      Totals:         0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_sys_init
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _init_timer0
  3598  0C39                     _init_timer0:	
  3599                           
  3600                           ;timer.c: 13: OPTION_REG=0x81;
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _init_timer0: [wreg]
  3604  0C39  3081               	movlw	129
  3605  0C3A  0021               	movlb	1	; select bank1
  3606  0C3B  0095               	movwf	21	;volatile
  3607                           
  3608                           ;timer.c: 14: TMR0IF=0;
  3609  0C3C  110B               	bcf	11,2	;volatile
  3610                           
  3611                           ;timer.c: 15: TMR0= 208;
  3612  0C3D  30D0               	movlw	208
  3613  0C3E  0020               	movlb	0	; select bank0
  3614  0C3F  0095               	movwf	21	;volatile
  3615                           
  3616                           ;timer.c: 16: T0IF=0;
  3617  0C40  110B               	bcf	11,2	;volatile
  3618                           
  3619                           ;timer.c: 17: T0IE=1;
  3620  0C41  168B               	bsf	11,5	;volatile
  3621  0C42  0008               	return
  3622  0C43                     __end_of_init_timer0:	
  3623                           
  3624                           	psect	text12
  3625  0C27                     __ptext12:	
  3626 ;; *************** function _init_fosc *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "source/clkset.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3642 ;;      Params:         0       0       0       0
  3643 ;;      Locals:         0       0       0       0
  3644 ;;      Temps:          0       0       0       0
  3645 ;;      Totals:         0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_sys_init
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _init_fosc
  3658  0C27                     _init_fosc:	
  3659                           
  3660                           ;clkset.c: 7: OSCCON= 0x78;
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _init_fosc: [wreg]
  3664  0C27  3078               	movlw	120
  3665  0C28  0021               	movlb	1	; select bank1
  3666  0C29  0099               	movwf	25	;volatile
  3667                           
  3668                           ;clkset.c: 10: WDTCON = 0x14;
  3669  0C2A  3014               	movlw	20
  3670  0C2B  0097               	movwf	23	;volatile
  3671  0C2C  0008               	return
  3672  0C2D                     __end_of_init_fosc:	
  3673                           
  3674                           	psect	text13
  3675  0D05                     __ptext13:	
  3676 ;; *************** function _Init_Uart *****************
  3677 ;; Defined at:
  3678 ;;		line 11 in file "source/usart.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3692 ;;      Params:         0       0       0       0
  3693 ;;      Locals:         0       0       0       0
  3694 ;;      Temps:          0       1       0       0
  3695 ;;      Totals:         0       1       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    3
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_sys_init
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _Init_Uart
  3708  0D05                     _Init_Uart:	
  3709                           
  3710                           ;usart.c: 15: APFCON0 &= ~(1<<7);
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _Init_Uart: [wreg+status,2+status,0]
  3714  0D05  307F               	movlw	127
  3715  0D06  0020               	movlb	0	; select bank0
  3716  0D07  00A2               	movwf	??_Init_Uart
  3717  0D08  0822               	movf	??_Init_Uart,w
  3718  0D09  0022               	movlb	2	; select bank2
  3719  0D0A  059D               	andwf	29,f	;volatile
  3720                           
  3721                           ;usart.c: 16: APFCON0 |= (1<<2);
  3722  0D0B  151D               	bsf	29,2	;volatile
  3723                           
  3724                           ;usart.c: 18: CSRC = 0;
  3725  0D0C  0023               	movlb	3	; select bank3
  3726  0D0D  139E               	bcf	30,7	;volatile
  3727                           
  3728                           ;usart.c: 19: TX9 = 1;
  3729  0D0E  171E               	bsf	30,6	;volatile
  3730                           
  3731                           ;usart.c: 20: TXEN = 1;
  3732  0D0F  169E               	bsf	30,5	;volatile
  3733                           
  3734                           ;usart.c: 21: SYNC=0;
  3735  0D10  121E               	bcf	30,4	;volatile
  3736                           
  3737                           ;usart.c: 22: BRGH=1;
  3738  0D11  151E               	bsf	30,2	;volatile
  3739                           
  3740                           ;usart.c: 23: BRG16 = 0;
  3741  0D12  119F               	bcf	31,3	;volatile
  3742                           
  3743                           ;usart.c: 24: TRMT=1;
  3744  0D13  149E               	bsf	30,1	;volatile
  3745                           
  3746                           ;usart.c: 27: SPEN = 1;
  3747  0D14  179D               	bsf	29,7	;volatile
  3748                           
  3749                           ;usart.c: 28: RX9 = 1;
  3750  0D15  171D               	bsf	29,6	;volatile
  3751                           
  3752                           ;usart.c: 29: SREN=1;
  3753  0D16  169D               	bsf	29,5	;volatile
  3754                           
  3755                           ;usart.c: 30: CREN=1;
  3756  0D17  161D               	bsf	29,4	;volatile
  3757                           
  3758                           ;usart.c: 31: ADDEN=0;
  3759  0D18  119D               	bcf	29,3	;volatile
  3760                           
  3761                           ;usart.c: 32: FERR=0;
  3762  0D19  111D               	bcf	29,2	;volatile
  3763                           
  3764                           ;usart.c: 33: OERR=0;
  3765  0D1A  109D               	bcf	29,1	;volatile
  3766                           
  3767                           ;usart.c: 34: RCIE = 1;
  3768  0D1B  0021               	movlb	1	; select bank1
  3769  0D1C  1691               	bsf	17,5	;volatile
  3770                           
  3771                           ;usart.c: 35: TRISC |= (1<<5);
  3772  0D1D  168E               	bsf	14,5	;volatile
  3773                           
  3774                           ;usart.c: 36: BAUDCON = (1<<3);
  3775  0D1E  3008               	movlw	8
  3776  0D1F  0023               	movlb	3	; select bank3
  3777  0D20  009F               	movwf	31	;volatile
  3778                           
  3779                           ;usart.c: 37: SPBRGH = 0x1;
  3780  0D21  3001               	movlw	1
  3781  0D22  009C               	movwf	28	;volatile
  3782                           
  3783                           ;usart.c: 38: SPBRGL = 0xa1;
  3784  0D23  30A1               	movlw	161
  3785  0D24  009B               	movwf	27	;volatile
  3786  0D25  0008               	return
  3787  0D26                     __end_of_Init_Uart:	
  3788                           
  3789                           	psect	text14
  3790  0C24                     __ptext14:	
  3791 ;; *************** function _get_ack_data *****************
  3792 ;; Defined at:
  3793 ;;		line 51 in file "source/timer.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3807 ;;      Params:         0       0       0       0
  3808 ;;      Locals:         0       0       0       0
  3809 ;;      Temps:          0       0       0       0
  3810 ;;      Totals:         0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    3
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_standby
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _get_ack_data
  3823  0C24                     _get_ack_data:	
  3824                           
  3825                           ;timer.c: 52: return ACK_data;
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _get_ack_data: [wreg]
  3829  0C24  0020               	movlb	0	; select bank0
  3830  0C25  0861               	movf	_ACK_data,w
  3831  0C26  0008               	return
  3832  0C27                     __end_of_get_ack_data:	
  3833                           
  3834                           	psect	text15
  3835  0C21                     __ptext15:	
  3836 ;; *************** function _get_ack *****************
  3837 ;; Defined at:
  3838 ;;		line 36 in file "source/timer.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3852 ;;      Params:         0       0       0       0
  3853 ;;      Locals:         0       0       0       0
  3854 ;;      Temps:          0       0       0       0
  3855 ;;      Totals:         0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    3
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_standby
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _get_ack
  3868  0C21                     _get_ack:	
  3869                           
  3870                           ;timer.c: 37: return ACK;
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _get_ack: [wreg]
  3874  0C21  0020               	movlb	0	; select bank0
  3875  0C22  0862               	movf	_ACK,w
  3876  0C23  0008               	return
  3877  0C24                     __end_of_get_ack:	
  3878                           
  3879                           	psect	text16
  3880  0D97                     __ptext16:	
  3881 ;; *************** function ___lwmod *****************
  3882 ;; Defined at:
  3883 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  divisor         2    2[BANK0 ] unsigned int 
  3886 ;;  dividend        2    4[BANK0 ] unsigned int 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  counter         1    7[BANK0 ] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2    2[BANK0 ] unsigned int 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3898 ;;      Params:         0       4       0       0
  3899 ;;      Locals:         0       1       0       0
  3900 ;;      Temps:          0       1       0       0
  3901 ;;      Totals:         0       6       0       0
  3902 ;;Total ram usage:        6 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    3
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_standby
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           
  3913                           ;psect for function ___lwmod
  3914  0D97                     ___lwmod:	
  3915                           
  3916                           ;incstack = 0
  3917                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3918  0D97  0020               	movlb	0	; select bank0
  3919  0D98  0822               	movf	___lwmod@divisor,w
  3920  0D99  0423               	iorwf	___lwmod@divisor+1,w
  3921  0D9A  1903               	btfsc	3,2
  3922  0D9B  2DBF               	goto	l2947
  3923  0D9C  01A7               	clrf	___lwmod@counter
  3924  0D9D  0AA7               	incf	___lwmod@counter,f
  3925  0D9E                     l2937:	
  3926  0D9E  1BA3               	btfsc	___lwmod@divisor+1,7
  3927  0D9F  2DAA               	goto	l2939
  3928  0DA0  3001               	movlw	1
  3929  0DA1                     u3245:	
  3930  0DA1  35A2               	lslf	___lwmod@divisor,f
  3931  0DA2  0DA3               	rlf	___lwmod@divisor+1,f
  3932  0DA3  0B89               	decfsz	9,f
  3933  0DA4  2DA1               	goto	u3245
  3934  0DA5  3001               	movlw	1
  3935  0DA6  00A6               	movwf	??___lwmod
  3936  0DA7  0826               	movf	??___lwmod,w
  3937  0DA8  07A7               	addwf	___lwmod@counter,f
  3938  0DA9  2D9E               	goto	l2937
  3939  0DAA                     l2939:	
  3940  0DAA  0823               	movf	___lwmod@divisor+1,w
  3941  0DAB  0225               	subwf	___lwmod@dividend+1,w
  3942  0DAC  1D03               	skipz
  3943  0DAD  2DB0               	goto	u3265
  3944  0DAE  0822               	movf	___lwmod@divisor,w
  3945  0DAF  0224               	subwf	___lwmod@dividend,w
  3946  0DB0                     u3265:	
  3947  0DB0  1C03               	skipc
  3948  0DB1  2DB6               	goto	l2943
  3949  0DB2  0822               	movf	___lwmod@divisor,w
  3950  0DB3  02A4               	subwf	___lwmod@dividend,f
  3951  0DB4  0823               	movf	___lwmod@divisor+1,w
  3952  0DB5  3BA5               	subwfb	___lwmod@dividend+1,f
  3953  0DB6                     l2943:	
  3954  0DB6  3001               	movlw	1
  3955  0DB7                     u3275:	
  3956  0DB7  36A3               	lsrf	___lwmod@divisor+1,f
  3957  0DB8  0CA2               	rrf	___lwmod@divisor,f
  3958  0DB9  0B89               	decfsz	9,f
  3959  0DBA  2DB7               	goto	u3275
  3960  0DBB  3001               	movlw	1
  3961  0DBC  02A7               	subwf	___lwmod@counter,f
  3962  0DBD  1D03               	btfss	3,2
  3963  0DBE  2DAA               	goto	l2939
  3964  0DBF                     l2947:	
  3965  0DBF  0825               	movf	___lwmod@dividend+1,w
  3966  0DC0  00A3               	movwf	?___lwmod+1
  3967  0DC1  0824               	movf	___lwmod@dividend,w
  3968  0DC2  00A2               	movwf	?___lwmod
  3969  0DC3  0008               	return
  3970  0DC4                     __end_of___lwmod:	
  3971                           
  3972                           	psect	text17
  3973  035B                     __ptext17:	
  3974 ;; *************** function _remote_learn *****************
  3975 ;; Defined at:
  3976 ;;		line 225 in file "source/remote.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  pbuf            1    wreg     PTR unsigned char 
  3979 ;;		 -> sys_ctrl(11), 
  3980 ;;  flag            1   39[BANK0 ] unsigned char 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  pbuf            1   58[BANK0 ] PTR unsigned char 
  3983 ;;		 -> sys_ctrl(11), 
  3984 ;;  rf_buf          8   50[BANK0 ] unsigned char [8]
  3985 ;;  lrn_buf         8   42[BANK0 ] unsigned char [8]
  3986 ;;  index           1   59[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3996 ;;      Params:         0       1       0       0
  3997 ;;      Locals:         0      18       0       0
  3998 ;;      Temps:          0       2       0       0
  3999 ;;      Totals:         0      21       0       0
  4000 ;;Total ram usage:       21 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    5
  4003 ;; This function calls:
  4004 ;;		_DEcrypt
  4005 ;;		_eeprom_write
  4006 ;;		_remote_gkey
  4007 ;; This function is called by:
  4008 ;;		_match_code
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _remote_learn
  4014  035B                     _remote_learn:	
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _remote_learn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4018                           ;remote_learn@pbuf stored from wreg
  4019  035B  0020               	movlb	0	; select bank0
  4020  035C  00DA               	movwf	remote_learn@pbuf
  4021                           
  4022                           ;remote.c: 226: U08ET index;
  4023                           ;remote.c: 227: U08ET rf_buf[8], lrn_buf[8];
  4024                           ;remote.c: 229: if ((0) == remote_gkey(rf_buf)) return (0);
  4025  035D  3052               	movlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4026  035E  318F  2738  3183   	fcall	_remote_gkey
  4027  0361  3A00               	xorlw	0
  4028  0362  1D03               	skipz
  4029  0363  2B66               	goto	l2761
  4030  0364  3000               	movlw	0
  4031  0365  0008               	return
  4032  0366                     l2761:	
  4033                           
  4034                           ;remote.c: 231: for (index = 0; index < 4; index++){
  4035  0366  0020               	movlb	0	; select bank0
  4036  0367  01DB               	clrf	remote_learn@index
  4037  0368  3004               	movlw	4
  4038  0369  025B               	subwf	remote_learn@index,w
  4039  036A  1803               	btfsc	3,0
  4040  036B  2B80               	goto	l2775
  4041  036C                     l2767:	
  4042                           
  4043                           ;remote.c: 232: if (rf_buf[index] != remoter.lbuf[index]) break;
  4044  036C  085B               	movf	remote_learn@index,w
  4045  036D  3EB3               	addlw	(low ((_remoter| 0+12)))& (0+255)
  4046  036E  0086               	movwf	6
  4047  036F  0187               	clrf	7
  4048  0370  085B               	movf	remote_learn@index,w
  4049  0371  3E52               	addlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4050  0372  0084               	movwf	4
  4051  0373  0185               	clrf	5
  4052  0374  0800               	movf	0,w
  4053  0375  0601               	xorwf	1,w
  4054  0376  1D03               	btfss	3,2
  4055  0377  2B80               	goto	l2775
  4056  0378  3001               	movlw	1
  4057  0379  00C8               	movwf	??_remote_learn
  4058  037A  0848               	movf	??_remote_learn,w
  4059  037B  07DB               	addwf	remote_learn@index,f
  4060  037C  3004               	movlw	4
  4061  037D  025B               	subwf	remote_learn@index,w
  4062  037E  1C03               	skipc
  4063  037F  2B6C               	goto	l2767
  4064  0380                     l2775:	
  4065                           
  4066                           ;remote.c: 233: }
  4067                           ;remote.c: 234: if (4 == index) return (0);
  4068  0380  3004               	movlw	4
  4069  0381  065B               	xorwf	remote_learn@index,w
  4070  0382  1D03               	btfss	3,2
  4071  0383  2B86               	goto	l2781
  4072  0384  3000               	movlw	0
  4073  0385  0008               	return
  4074  0386                     l2781:	
  4075                           
  4076                           ;remote.c: 236: for (index = 0; index < 4; index++){
  4077  0386  01DB               	clrf	remote_learn@index
  4078  0387  3004               	movlw	4
  4079  0388  025B               	subwf	remote_learn@index,w
  4080  0389  1803               	btfsc	3,0
  4081  038A  2B9F               	goto	l2793
  4082  038B                     l2787:	
  4083                           
  4084                           ;remote.c: 237: remoter.lbuf[index] = rf_buf[index];
  4085  038B  085B               	movf	remote_learn@index,w
  4086  038C  3E52               	addlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4087  038D  0086               	movwf	6
  4088  038E  0187               	clrf	7
  4089  038F  0801               	movf	1,w
  4090  0390  00C8               	movwf	??_remote_learn
  4091  0391  085B               	movf	remote_learn@index,w
  4092  0392  3EB3               	addlw	(low ((_remoter| 0+12)))& (0+255)
  4093  0393  0086               	movwf	6
  4094  0394  0187               	clrf	7
  4095  0395  0848               	movf	??_remote_learn,w
  4096  0396  0081               	movwf	1
  4097  0397  3001               	movlw	1
  4098  0398  00C8               	movwf	??_remote_learn
  4099  0399  0848               	movf	??_remote_learn,w
  4100  039A  07DB               	addwf	remote_learn@index,f
  4101  039B  3004               	movlw	4
  4102  039C  025B               	subwf	remote_learn@index,w
  4103  039D  1C03               	skipc
  4104  039E  2B8B               	goto	l2787
  4105  039F                     l2793:	
  4106                           
  4107                           ;remote.c: 238: }
  4108                           ;remote.c: 240: lrn_buf[3] = rf_buf[7] & 0x0F | 0x20;
  4109  039F  0859               	movf	remote_learn@rf_buf+7,w
  4110  03A0  390F               	andlw	15
  4111  03A1  3820               	iorlw	32
  4112  03A2  00C8               	movwf	??_remote_learn
  4113  03A3  0848               	movf	??_remote_learn,w
  4114  03A4  00CD               	movwf	remote_learn@lrn_buf+3
  4115                           
  4116                           ;remote.c: 241: lrn_buf[2] = rf_buf[6];
  4117  03A5  0858               	movf	remote_learn@rf_buf+6,w
  4118  03A6  00C8               	movwf	??_remote_learn
  4119  03A7  0848               	movf	??_remote_learn,w
  4120  03A8  00CC               	movwf	remote_learn@lrn_buf+2
  4121                           
  4122                           ;remote.c: 242: lrn_buf[1] = rf_buf[5];
  4123  03A9  0857               	movf	remote_learn@rf_buf+5,w
  4124  03AA  00C8               	movwf	??_remote_learn
  4125  03AB  0848               	movf	??_remote_learn,w
  4126  03AC  00CB               	movwf	remote_learn@lrn_buf+1
  4127                           
  4128                           ;remote.c: 243: lrn_buf[0] = rf_buf[4];
  4129  03AD  0856               	movf	remote_learn@rf_buf+4,w
  4130  03AE  00C8               	movwf	??_remote_learn
  4131  03AF  0848               	movf	??_remote_learn,w
  4132  03B0  00CA               	movwf	remote_learn@lrn_buf
  4133                           
  4134                           ;remote.c: 244: DEcrypt((u8*)lrn_buf, (u8*)CUSTOMER_code);
  4135  03B1  301E               	movlw	low (_CUSTOMER_code| (0+32768))
  4136  03B2  00AA               	movwf	DEcrypt@_key
  4137  03B3  3088               	movlw	high (_CUSTOMER_code| (0+32768))
  4138  03B4  00AB               	movwf	DEcrypt@_key+1
  4139  03B5  304A               	movlw	(low (remote_learn@lrn_buf| 0))& (0+255)
  4140  03B6  3184  247D  3183   	fcall	_DEcrypt
  4141                           
  4142                           ;remote.c: 245: lrn_buf[7] = rf_buf[7] & 0x0F | 0x60;
  4143  03B9  0020               	movlb	0	; select bank0
  4144  03BA  0859               	movf	remote_learn@rf_buf+7,w
  4145  03BB  390F               	andlw	15
  4146  03BC  3860               	iorlw	96
  4147  03BD  00C8               	movwf	??_remote_learn
  4148  03BE  0848               	movf	??_remote_learn,w
  4149  03BF  00D1               	movwf	remote_learn@lrn_buf+7
  4150                           
  4151                           ;remote.c: 246: lrn_buf[6] = rf_buf[6];
  4152  03C0  0858               	movf	remote_learn@rf_buf+6,w
  4153  03C1  00C8               	movwf	??_remote_learn
  4154  03C2  0848               	movf	??_remote_learn,w
  4155  03C3  00D0               	movwf	remote_learn@lrn_buf+6
  4156                           
  4157                           ;remote.c: 247: lrn_buf[5] = rf_buf[5];
  4158  03C4  0857               	movf	remote_learn@rf_buf+5,w
  4159  03C5  00C8               	movwf	??_remote_learn
  4160  03C6  0848               	movf	??_remote_learn,w
  4161  03C7  00CF               	movwf	remote_learn@lrn_buf+5
  4162                           
  4163                           ;remote.c: 248: lrn_buf[4] = rf_buf[4];
  4164  03C8  0856               	movf	remote_learn@rf_buf+4,w
  4165  03C9  00C8               	movwf	??_remote_learn
  4166  03CA  0848               	movf	??_remote_learn,w
  4167  03CB  00CE               	movwf	remote_learn@lrn_buf+4
  4168                           
  4169                           ;remote.c: 249: DEcrypt(((u8*)lrn_buf) + 4, (u8*)CUSTOMER_code);
  4170  03CC  301E               	movlw	low (_CUSTOMER_code| (0+32768))
  4171  03CD  00AA               	movwf	DEcrypt@_key
  4172  03CE  3088               	movlw	high (_CUSTOMER_code| (0+32768))
  4173  03CF  00AB               	movwf	DEcrypt@_key+1
  4174  03D0  304E               	movlw	(low ((remote_learn@lrn_buf| 0+4)))& (0+255)
  4175  03D1  3184  247D  3183   	fcall	_DEcrypt
  4176                           
  4177                           ;remote.c: 250: DEcrypt((u8*)rf_buf, (u8*)lrn_buf);
  4178  03D4  304A               	movlw	low remote_learn@lrn_buf
  4179  03D5  0020               	movlb	0	; select bank0
  4180  03D6  00AA               	movwf	DEcrypt@_key
  4181  03D7  3000               	movlw	high remote_learn@lrn_buf
  4182  03D8  00AB               	movwf	DEcrypt@_key+1
  4183  03D9  3052               	movlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4184  03DA  3184  247D  3183   	fcall	_DEcrypt
  4185                           
  4186                           ;remote.c: 252: if((rf_buf[2] != rf_buf[4]) || ((rf_buf[3] & 0xF0) != (rf_buf[7] & 0xF0)
      +                          )) return (0);
  4187  03DD  0020               	movlb	0	; select bank0
  4188  03DE  0854               	movf	remote_learn@rf_buf+2,w
  4189  03DF  0656               	xorwf	remote_learn@rf_buf+4,w
  4190  03E0  1D03               	skipz
  4191  03E1  2BEC               	goto	l2815
  4192  03E2  30F0               	movlw	240
  4193  03E3  0559               	andwf	remote_learn@rf_buf+7,w
  4194  03E4  00C8               	movwf	??_remote_learn
  4195  03E5  30F0               	movlw	240
  4196  03E6  0555               	andwf	remote_learn@rf_buf+3,w
  4197  03E7  00C9               	movwf	??_remote_learn+1
  4198  03E8  0849               	movf	??_remote_learn+1,w
  4199  03E9  0648               	xorwf	??_remote_learn,w
  4200  03EA  1903               	skipnz
  4201  03EB  2BEE               	goto	l2819
  4202  03EC                     l2815:	
  4203  03EC  3000               	movlw	0
  4204  03ED  0008               	return
  4205  03EE                     l2819:	
  4206                           
  4207                           ;remote.c: 254: if (1 == flag) {
  4208  03EE  0347               	decf	remote_learn@flag,w
  4209  03EF  1D03               	btfss	3,2
  4210  03F0  2C0F               	goto	l2839
  4211                           
  4212                           ;remote.c: 255: for (index = 0; index < 4; index++){
  4213  03F1  01DB               	clrf	remote_learn@index
  4214  03F2  3004               	movlw	4
  4215  03F3  025B               	subwf	remote_learn@index,w
  4216  03F4  1803               	btfsc	3,0
  4217  03F5  2C0D               	goto	l2833
  4218  03F6                     l2827:	
  4219                           
  4220                           ;remote.c: 256: pbuf[index] = rf_buf[index + 4];
  4221  03F6  085B               	movf	remote_learn@index,w
  4222  03F7  3E04               	addlw	4
  4223  03F8  3E52               	addlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4224  03F9  0086               	movwf	6
  4225  03FA  0187               	clrf	7
  4226  03FB  0801               	movf	1,w
  4227  03FC  00C8               	movwf	??_remote_learn
  4228  03FD  085B               	movf	remote_learn@index,w
  4229  03FE  075A               	addwf	remote_learn@pbuf,w
  4230  03FF  00C9               	movwf	??_remote_learn+1
  4231  0400  0849               	movf	??_remote_learn+1,w
  4232  0401  0086               	movwf	6
  4233  0402  0187               	clrf	7
  4234  0403  0848               	movf	??_remote_learn,w
  4235  0404  0081               	movwf	1
  4236  0405  3001               	movlw	1
  4237  0406  00C8               	movwf	??_remote_learn
  4238  0407  0848               	movf	??_remote_learn,w
  4239  0408  07DB               	addwf	remote_learn@index,f
  4240  0409  3004               	movlw	4
  4241  040A  025B               	subwf	remote_learn@index,w
  4242  040B  1C03               	skipc
  4243  040C  2BF6               	goto	l2827
  4244  040D                     l2833:	
  4245                           
  4246                           ;remote.c: 257: }
  4247                           ;remote.c: 258: return (1);
  4248  040D  3001               	movlw	1
  4249  040E  0008               	return
  4250  040F                     l2839:	
  4251                           ;remote.c: 259: }
  4252                           
  4253                           
  4254                           ;remote.c: 268: else if (2 == flag) {
  4255  040F  3002               	movlw	2
  4256  0410  0647               	xorwf	remote_learn@flag,w
  4257  0411  1D03               	btfss	3,2
  4258  0412  2C7B               	goto	l2881
  4259                           
  4260                           ;remote.c: 269: if (pbuf[0] != rf_buf[4] || pbuf[1] != rf_buf[5] || pbuf[2] != rf_buf[6]
      +                           || pbuf[3] & 0xf != rf_buf[7] & 0xf ){
  4261  0413  085A               	movf	remote_learn@pbuf,w
  4262  0414  0086               	movwf	6
  4263  0415  0187               	clrf	7
  4264  0416  0801               	movf	1,w
  4265  0417  0656               	xorwf	remote_learn@rf_buf+4,w
  4266  0418  1D03               	skipz
  4267  0419  2C38               	goto	l2849
  4268  041A  0A5A               	incf	remote_learn@pbuf,w
  4269  041B  0086               	movwf	6
  4270  041C  0187               	clrf	7
  4271  041D  0801               	movf	1,w
  4272  041E  0657               	xorwf	remote_learn@rf_buf+5,w
  4273  041F  1D03               	skipz
  4274  0420  2C38               	goto	l2849
  4275  0421  085A               	movf	remote_learn@pbuf,w
  4276  0422  3E02               	addlw	2
  4277  0423  0086               	movwf	6
  4278  0424  0187               	clrf	7
  4279  0425  0801               	movf	1,w
  4280  0426  0658               	xorwf	remote_learn@rf_buf+6,w
  4281  0427  1D03               	skipz
  4282  0428  2C38               	goto	l2849
  4283  0429  085A               	movf	remote_learn@pbuf,w
  4284  042A  3E03               	addlw	3
  4285  042B  0086               	movwf	6
  4286  042C  0187               	clrf	7
  4287  042D  300F               	movlw	15
  4288  042E  0659               	xorwf	remote_learn@rf_buf+7,w
  4289  042F  1903               	btfsc	3,2
  4290  0430  2C33               	goto	u3060
  4291  0431  3001               	movlw	1
  4292  0432  2C34               	goto	u3070
  4293  0433                     u3060:	
  4294  0433  3000               	movlw	0
  4295  0434                     u3070:	
  4296  0434  0501               	andwf	1,w
  4297  0435  390F               	andlw	15
  4298  0436  1903               	btfsc	3,2
  4299  0437  2C3A               	goto	l2853
  4300  0438                     l2849:	
  4301                           
  4302                           ;remote.c: 273: return (0);
  4303  0438  3000               	movlw	0
  4304  0439  0008               	return
  4305  043A                     l2853:	
  4306                           
  4307                           ;remote.c: 274: }
  4308                           ;remote.c: 276: for (index = 0; index < 8; index++){
  4309  043A  01DB               	clrf	remote_learn@index
  4310  043B  3008               	movlw	8
  4311  043C  025B               	subwf	remote_learn@index,w
  4312  043D  1803               	btfsc	3,0
  4313  043E  2C5F               	goto	l2865
  4314  043F                     l2859:	
  4315                           
  4316                           ;remote.c: 277: remoter.lrn_key_save[index] = lrn_buf[index];
  4317  043F  085B               	movf	remote_learn@index,w
  4318  0440  3E4A               	addlw	(low (remote_learn@lrn_buf| 0))& (0+255)
  4319  0441  0086               	movwf	6
  4320  0442  0187               	clrf	7
  4321  0443  0801               	movf	1,w
  4322  0444  00C8               	movwf	??_remote_learn
  4323  0445  085B               	movf	remote_learn@index,w
  4324  0446  3EBF               	addlw	(low ((_remoter| 0+24)))& (0+255)
  4325  0447  0086               	movwf	6
  4326  0448  0187               	clrf	7
  4327  0449  0848               	movf	??_remote_learn,w
  4328  044A  0081               	movwf	1
  4329                           
  4330                           ;remote.c: 278: remoter.sn_save[index] = rf_buf[index];
  4331  044B  085B               	movf	remote_learn@index,w
  4332  044C  3E52               	addlw	(low (remote_learn@rf_buf| 0))& (0+255)
  4333  044D  0086               	movwf	6
  4334  044E  0187               	clrf	7
  4335  044F  0801               	movf	1,w
  4336  0450  00C8               	movwf	??_remote_learn
  4337  0451  085B               	movf	remote_learn@index,w
  4338  0452  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  4339  0453  0086               	movwf	6
  4340  0454  0187               	clrf	7
  4341  0455  0848               	movf	??_remote_learn,w
  4342  0456  0081               	movwf	1
  4343  0457  3001               	movlw	1
  4344  0458  00C8               	movwf	??_remote_learn
  4345  0459  0848               	movf	??_remote_learn,w
  4346  045A  07DB               	addwf	remote_learn@index,f
  4347  045B  3008               	movlw	8
  4348  045C  025B               	subwf	remote_learn@index,w
  4349  045D  1C03               	skipc
  4350  045E  2C3F               	goto	l2859
  4351  045F                     l2865:	
  4352                           
  4353                           ;remote.c: 279: }
  4354                           ;remote.c: 281: for (index = 0; index < 18; index++)
  4355  045F  01DB               	clrf	remote_learn@index
  4356  0460  3012               	movlw	18
  4357  0461  025B               	subwf	remote_learn@index,w
  4358  0462  1803               	btfsc	3,0
  4359  0463  2C79               	goto	l2877
  4360  0464                     l2871:	
  4361                           
  4362                           ;remote.c: 282: eeprom_write((index + ((U08ET)(0))), ((U08ET*)(&remoter.sn_save[0]))[ind
      +                          ex]);
  4363  0464  085B               	movf	remote_learn@index,w
  4364  0465  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  4365  0466  0086               	movwf	6
  4366  0467  0187               	clrf	7
  4367  0468  0801               	movf	1,w
  4368  0469  00C8               	movwf	??_remote_learn
  4369  046A  0848               	movf	??_remote_learn,w
  4370  046B  00A2               	movwf	eeprom_write@value
  4371  046C  085B               	movf	remote_learn@index,w
  4372  046D  318D  256B  3183   	fcall	_eeprom_write
  4373  0470  3001               	movlw	1
  4374  0471  0020               	movlb	0	; select bank0
  4375  0472  00C8               	movwf	??_remote_learn
  4376  0473  0848               	movf	??_remote_learn,w
  4377  0474  07DB               	addwf	remote_learn@index,f
  4378  0475  3012               	movlw	18
  4379  0476  025B               	subwf	remote_learn@index,w
  4380  0477  1C03               	skipc
  4381  0478  2C64               	goto	l2871
  4382  0479                     l2877:	
  4383                           
  4384                           ;remote.c: 284: return (1);
  4385  0479  3001               	movlw	1
  4386  047A  0008               	return
  4387  047B                     l2881:	
  4388                           
  4389                           ;remote.c: 285: }
  4390                           ;remote.c: 287: return (0);
  4391  047B  3000               	movlw	0
  4392  047C  0008               	return
  4393  047D                     __end_of_remote_learn:	
  4394                           
  4395                           	psect	text18
  4396  0DF3                     __ptext18:	
  4397 ;; *************** function _led_task *****************
  4398 ;; Defined at:
  4399 ;;		line 18 in file "source/ledTask.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4413 ;;      Params:         0       0       0       0
  4414 ;;      Locals:         0       0       0       0
  4415 ;;      Temps:          0       0       0       0
  4416 ;;      Totals:         0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    3
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _led_task
  4429  0DF3                     _led_task:	
  4430                           
  4431                           ;ledTask.c: 20: if(0 != st_led.period) {
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _led_task: [wreg+status,2+status,0]
  4435  0DF3  0021               	movlb	1	; select bank1
  4436  0DF4  0821               	movf	(_st_led^(0+128)+1),w
  4437  0DF5  0422               	iorwf	((_st_led+1)^(0+128)+1),w
  4438  0DF6  1903               	btfsc	3,2
  4439  0DF7  0008               	return
  4440                           
  4441                           ;ledTask.c: 21: st_led.count++;
  4442  0DF8  3001               	movlw	1
  4443  0DF9  07A3               	addwf	(_st_led^(0+128)+3),f
  4444  0DFA  3000               	movlw	0
  4445  0DFB  3DA4               	addwfc	((_st_led+1)^(0+128)+3),f
  4446                           
  4447                           ;ledTask.c: 22: if(st_led.count == st_led.period) {
  4448  0DFC  0822               	movf	((_st_led+1)^(0+128)+1),w
  4449  0DFD  0624               	xorwf	((_st_led+1)^(0+128)+3),w
  4450  0DFE  1D03               	skipz
  4451  0DFF  2E02               	goto	u3305
  4452  0E00  0821               	movf	(_st_led^(0+128)+1),w
  4453  0E01  0623               	xorwf	(_st_led^(0+128)+3),w
  4454  0E02                     u3305:	
  4455  0E02  1D03               	skipz
  4456  0E03  0008               	return
  4457                           
  4458                           ;ledTask.c: 23: if( (1) == st_led.stats ) {
  4459  0E04  0320               	decf	_st_led^(0+128),w
  4460  0E05  1D03               	btfss	3,2
  4461  0E06  2E0C               	goto	l2961
  4462                           
  4463                           ;ledTask.c: 24: RA4 = 0;
  4464  0E07  0020               	movlb	0	; select bank0
  4465  0E08  120C               	bcf	12,4	;volatile
  4466                           
  4467                           ;ledTask.c: 25: st_led.stats = (0);
  4468  0E09  0021               	movlb	1	; select bank1
  4469  0E0A  01A0               	clrf	_st_led^(0+128)
  4470                           
  4471                           ;ledTask.c: 26: } else {
  4472  0E0B  2E20               	goto	l34
  4473  0E0C                     l2961:	
  4474                           
  4475                           ;ledTask.c: 27: if (0 != st_led.times){
  4476  0E0C  0825               	movf	(_st_led^(0+128)+5),w
  4477  0E0D  1903               	btfsc	3,2
  4478  0E0E  2E1B               	goto	l2967
  4479                           
  4480                           ;ledTask.c: 28: st_led.times_cnt--;
  4481  0E0F  3001               	movlw	1
  4482  0E10  02A6               	subwf	(_st_led^(0+128)+6),f
  4483                           
  4484                           ;ledTask.c: 29: if (0 == st_led.times_cnt) {
  4485  0E11  0826               	movf	(_st_led^(0+128)+6),w
  4486  0E12  1D03               	btfss	3,2
  4487  0E13  2E1B               	goto	l2967
  4488                           
  4489                           ;ledTask.c: 30: st_led.times = 0;
  4490  0E14  01A5               	clrf	(_st_led^(0+128)+5)
  4491                           
  4492                           ;ledTask.c: 31: st_led.times_cnt = 0;
  4493  0E15  01A6               	clrf	(_st_led^(0+128)+6)
  4494                           
  4495                           ;ledTask.c: 32: st_led.period = 0;
  4496  0E16  01A1               	clrf	(_st_led^(0+128)+1)
  4497  0E17  01A2               	clrf	((_st_led+1)^(0+128)+1)
  4498                           
  4499                           ;ledTask.c: 33: st_led.count = 0;
  4500  0E18  01A3               	clrf	(_st_led^(0+128)+3)
  4501  0E19  01A4               	clrf	((_st_led+1)^(0+128)+3)
  4502                           
  4503                           ;ledTask.c: 34: st_led.stats = (0);
  4504  0E1A  01A0               	clrf	_st_led^(0+128)
  4505  0E1B                     l2967:	
  4506                           
  4507                           ;ledTask.c: 35: }
  4508                           ;ledTask.c: 36: }
  4509                           ;ledTask.c: 37: RA4 = 1;
  4510  0E1B  0020               	movlb	0	; select bank0
  4511  0E1C  160C               	bsf	12,4	;volatile
  4512                           
  4513                           ;ledTask.c: 38: st_led.stats = (1);
  4514  0E1D  0021               	movlb	1	; select bank1
  4515  0E1E  01A0               	clrf	_st_led^(0+128)
  4516  0E1F  0AA0               	incf	_st_led^(0+128),f
  4517  0E20                     l34:	
  4518                           
  4519                           ;ledTask.c: 39: }
  4520                           ;ledTask.c: 40: st_led.count = 0;
  4521  0E20  01A3               	clrf	(_st_led^(0+128)+3)
  4522  0E21  01A4               	clrf	((_st_led+1)^(0+128)+3)
  4523  0E22  0008               	return
  4524  0E23                     __end_of_led_task:	
  4525                           
  4526                           	psect	text19
  4527  0C1E                     __ptext19:	
  4528 ;; *************** function _repeat_lock *****************
  4529 ;; Defined at:
  4530 ;;		line 300 in file "source/remote.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		status,2
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4544 ;;      Params:         0       0       0       0
  4545 ;;      Locals:         0       0       0       0
  4546 ;;      Temps:          0       0       0       0
  4547 ;;      Totals:         0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_door_transmit
  4555 ;;		_wifi_transmit
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function _repeat_lock
  4561  0C1E                     _repeat_lock:	
  4562                           
  4563                           ;remote.c: 301: remoter.repeat_pass = 0;
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in _repeat_lock: [status,2]
  4567  0C1E  0021               	movlb	1	; select bank1
  4568  0C1F  01A9               	clrf	(_remoter^(0+128)+2)
  4569  0C20  0008               	return
  4570  0C21                     __end_of_repeat_lock:	
  4571                           
  4572                           	psect	text20
  4573  0056                     __ptext20:	
  4574 ;; *************** function _remote_hits *****************
  4575 ;; Defined at:
  4576 ;;		line 107 in file "source/remote.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  rf_buf          8   44[BANK0 ] unsigned char [8]
  4581 ;;  counter_save    2   54[BANK0 ] unsigned short 
  4582 ;;  counter_rf      2   52[BANK0 ] unsigned short 
  4583 ;;  index           1   56[BANK0 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4593 ;;      Params:         0       0       0       0
  4594 ;;      Locals:         0      13       0       0
  4595 ;;      Temps:          0       5       0       0
  4596 ;;      Totals:         0      18       0       0
  4597 ;;Total ram usage:       18 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    5
  4600 ;; This function calls:
  4601 ;;		_DEcrypt
  4602 ;;		_eeprom_write
  4603 ;;		_equipment_type
  4604 ;;		_remote_clear
  4605 ;;		_remote_gkey
  4606 ;; This function is called by:
  4607 ;;		_standby
  4608 ;;		_door_transmit
  4609 ;;		_wifi_transmit
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _remote_hits
  4615  0056                     _remote_hits:	
  4616                           
  4617                           ;remote.c: 108: U08ET rf_buf[8], index;
  4618                           ;remote.c: 109: U16ET counter_rf, counter_save;
  4619                           ;remote.c: 111: if ((0) == remote_gkey(rf_buf)) return (0x11);
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _remote_hits: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4623  0056  304C               	movlw	(low (remote_hits@rf_buf| 0))& (0+255)
  4624  0057  318F  2738  3180   	fcall	_remote_gkey
  4625  005A  3A00               	xorlw	0
  4626  005B  1D03               	skipz
  4627  005C  285F               	goto	l2537
  4628  005D  3011               	movlw	17
  4629  005E  0008               	return
  4630  005F                     l2537:	
  4631                           
  4632                           ;remote.c: 113: if ((rf_buf[4] != remoter.sn_save[4]) || (rf_buf[5] != remoter.sn_save[5
      +                          ]) || (rf_buf[6] != remoter.sn_save[6]) || ((rf_buf[7] & 0x0f) != (remoter.sn_save[7] & 
      +                          0x0f)))
  4633  005F  0020               	movlb	0	; select bank0
  4634  0060  0850               	movf	remote_hits@rf_buf+4,w
  4635  0061  0021               	movlb	1	; select bank1
  4636  0062  063B               	xorwf	(_remoter^(0+128)+20),w
  4637  0063  1D03               	skipz
  4638  0064  287C               	goto	l2545
  4639  0065  0020               	movlb	0	; select bank0
  4640  0066  0851               	movf	remote_hits@rf_buf+5,w
  4641  0067  0021               	movlb	1	; select bank1
  4642  0068  063C               	xorwf	(_remoter^(0+128)+21),w
  4643  0069  1D03               	skipz
  4644  006A  287C               	goto	l2545
  4645  006B  0020               	movlb	0	; select bank0
  4646  006C  0852               	movf	remote_hits@rf_buf+6,w
  4647  006D  0021               	movlb	1	; select bank1
  4648  006E  063D               	xorwf	(_remoter^(0+128)+22),w
  4649  006F  1D03               	skipz
  4650  0070  287C               	goto	l2545
  4651  0071  300F               	movlw	15
  4652  0072  053E               	andwf	(_remoter^(0+128)+23),w
  4653  0073  0020               	movlb	0	; select bank0
  4654  0074  00C7               	movwf	??_remote_hits
  4655  0075  300F               	movlw	15
  4656  0076  0553               	andwf	remote_hits@rf_buf+7,w
  4657  0077  00C8               	movwf	??_remote_hits+1
  4658  0078  0848               	movf	??_remote_hits+1,w
  4659  0079  0647               	xorwf	??_remote_hits,w
  4660  007A  1903               	skipnz
  4661  007B  287E               	goto	l2549
  4662  007C                     l2545:	
  4663                           
  4664                           ;remote.c: 117: return (0x11);
  4665  007C  3011               	movlw	17
  4666  007D  0008               	return
  4667  007E                     l2549:	
  4668                           
  4669                           ;remote.c: 120: for (index = 0; index < 4; index++){
  4670  007E  0020               	movlb	0	; select bank0
  4671  007F  01D8               	clrf	remote_hits@index
  4672  0080  3004               	movlw	4
  4673  0081  0258               	subwf	remote_hits@index,w
  4674  0082  1803               	btfsc	3,0
  4675  0083  2898               	goto	l2563
  4676  0084                     l2555:	
  4677                           
  4678                           ;remote.c: 121: if (rf_buf[index] != remoter.lbuf[index])
  4679  0084  0858               	movf	remote_hits@index,w
  4680  0085  3EB3               	addlw	(low ((_remoter| 0+12)))& (0+255)
  4681  0086  0086               	movwf	6
  4682  0087  0187               	clrf	7
  4683  0088  0858               	movf	remote_hits@index,w
  4684  0089  3E4C               	addlw	(low (remote_hits@rf_buf| 0))& (0+255)
  4685  008A  0084               	movwf	4
  4686  008B  0185               	clrf	5
  4687  008C  0800               	movf	0,w
  4688  008D  0601               	xorwf	1,w
  4689  008E  1D03               	btfss	3,2
  4690  008F  2898               	goto	l2563
  4691                           
  4692                           ;remote.c: 122: break;
  4693  0090  3001               	movlw	1
  4694  0091  00C7               	movwf	??_remote_hits
  4695  0092  0847               	movf	??_remote_hits,w
  4696  0093  07D8               	addwf	remote_hits@index,f
  4697  0094  3004               	movlw	4
  4698  0095  0258               	subwf	remote_hits@index,w
  4699  0096  1C03               	skipc
  4700  0097  2884               	goto	l2555
  4701  0098                     l2563:	
  4702                           
  4703                           ;remote.c: 123: }
  4704                           ;remote.c: 125: if (4 == index) {
  4705  0098  3004               	movlw	4
  4706  0099  0658               	xorwf	remote_hits@index,w
  4707  009A  1D03               	btfss	3,2
  4708  009B  28E7               	goto	l2619
  4709                           
  4710                           ;remote.c: 126: if (((((U08ET)(rf_buf[7])) & 0xf0) == 0x20) || ((((U08ET)(rf_buf[7])) & 
      +                          0xf0) == 0x30) || ((((U08ET)(rf_buf[7])) & 0xf0) == 0x90) || ((((U08ET)(rf_buf[7])) & 0x
      +                          f0) == 0x50) ) {
  4711  009C  30F0               	movlw	240
  4712  009D  0553               	andwf	remote_hits@rf_buf+7,w
  4713  009E  00C7               	movwf	??_remote_hits
  4714  009F  3020               	movlw	32
  4715  00A0  0647               	xorwf	??_remote_hits,w
  4716  00A1  1903               	btfsc	3,2
  4717  00A2  28B8               	goto	l2573
  4718  00A3  30F0               	movlw	240
  4719  00A4  0553               	andwf	remote_hits@rf_buf+7,w
  4720  00A5  00C7               	movwf	??_remote_hits
  4721  00A6  3030               	movlw	48
  4722  00A7  0647               	xorwf	??_remote_hits,w
  4723  00A8  1903               	btfsc	3,2
  4724  00A9  28B8               	goto	l2573
  4725  00AA  30F0               	movlw	240
  4726  00AB  0553               	andwf	remote_hits@rf_buf+7,w
  4727  00AC  00C7               	movwf	??_remote_hits
  4728  00AD  3090               	movlw	144
  4729  00AE  0647               	xorwf	??_remote_hits,w
  4730  00AF  1903               	btfsc	3,2
  4731  00B0  28B8               	goto	l2573
  4732  00B1  30F0               	movlw	240
  4733  00B2  0553               	andwf	remote_hits@rf_buf+7,w
  4734  00B3  00C7               	movwf	??_remote_hits
  4735  00B4  3050               	movlw	80
  4736  00B5  0647               	xorwf	??_remote_hits,w
  4737  00B6  1D03               	btfss	3,2
  4738  00B7  28E5               	goto	l2615
  4739  00B8                     l2573:	
  4740                           
  4741                           ;remote.c: 130: if (remoter.repeat_pass) {
  4742  00B8  0021               	movlb	1	; select bank1
  4743  00B9  0829               	movf	(_remoter^(0+128)+2),w
  4744  00BA  1903               	btfsc	3,2
  4745  00BB  28E3               	goto	l2611
  4746                           
  4747                           ;remote.c: 131: if ((((U08ET)(rf_buf[7])) & 0xf0) == 0x20)
  4748  00BC  30F0               	movlw	240
  4749  00BD  0020               	movlb	0	; select bank0
  4750  00BE  0553               	andwf	remote_hits@rf_buf+7,w
  4751  00BF  00C7               	movwf	??_remote_hits
  4752  00C0  3020               	movlw	32
  4753  00C1  0647               	xorwf	??_remote_hits,w
  4754  00C2  1D03               	btfss	3,2
  4755  00C3  28C6               	goto	l2583
  4756                           
  4757                           ;remote.c: 132: return (0x09);
  4758  00C4  3009               	movlw	9
  4759  00C5  0008               	return
  4760  00C6                     l2583:	
  4761                           
  4762                           ;remote.c: 133: else if ((((U08ET)(rf_buf[7])) & 0xf0) == 0x90)
  4763  00C6  30F0               	movlw	240
  4764  00C7  0553               	andwf	remote_hits@rf_buf+7,w
  4765  00C8  00C7               	movwf	??_remote_hits
  4766  00C9  3090               	movlw	144
  4767  00CA  0647               	xorwf	??_remote_hits,w
  4768  00CB  1D03               	btfss	3,2
  4769  00CC  28CF               	goto	l2591
  4770                           
  4771                           ;remote.c: 134: return (0x06);
  4772  00CD  3006               	movlw	6
  4773  00CE  0008               	return
  4774  00CF                     l2591:	
  4775                           
  4776                           ;remote.c: 135: else if ((((U08ET)(rf_buf[7])) & 0xf0) == 0x30)
  4777  00CF  30F0               	movlw	240
  4778  00D0  0553               	andwf	remote_hits@rf_buf+7,w
  4779  00D1  00C7               	movwf	??_remote_hits
  4780  00D2  3030               	movlw	48
  4781  00D3  0647               	xorwf	??_remote_hits,w
  4782  00D4  1D03               	btfss	3,2
  4783  00D5  28D8               	goto	l2599
  4784                           
  4785                           ;remote.c: 136: return (0x05);
  4786  00D6  3005               	movlw	5
  4787  00D7  0008               	return
  4788  00D8                     l2599:	
  4789                           
  4790                           ;remote.c: 137: else if ((((U08ET)(rf_buf[7])) & 0xf0) == 0x50)
  4791  00D8  30F0               	movlw	240
  4792  00D9  0553               	andwf	remote_hits@rf_buf+7,w
  4793  00DA  00C7               	movwf	??_remote_hits
  4794  00DB  3050               	movlw	80
  4795  00DC  0647               	xorwf	??_remote_hits,w
  4796  00DD  1D03               	btfss	3,2
  4797  00DE  28E1               	goto	l2607
  4798                           
  4799                           ;remote.c: 138: return (0x07);
  4800  00DF  3007               	movlw	7
  4801  00E0  0008               	return
  4802  00E1                     l2607:	
  4803                           
  4804                           ;remote.c: 139: else return (0x11);
  4805  00E1  3011               	movlw	17
  4806  00E2  0008               	return
  4807  00E3                     l2611:	
  4808                           ;remote.c: 140: }
  4809                           
  4810                           
  4811                           ;remote.c: 141: else return (0x11);
  4812  00E3  3011               	movlw	17
  4813  00E4  0008               	return
  4814  00E5                     l2615:	
  4815                           ;remote.c: 142: } else return (0x11);
  4816                           
  4817  00E5  3011               	movlw	17
  4818  00E6  0008               	return
  4819  00E7                     l2619:	
  4820                           
  4821                           ;remote.c: 143: }
  4822                           ;remote.c: 145: for (index = 0; index < 4; index++){
  4823  00E7  0020               	movlb	0	; select bank0
  4824  00E8  01D8               	clrf	remote_hits@index
  4825  00E9  3004               	movlw	4
  4826  00EA  0258               	subwf	remote_hits@index,w
  4827  00EB  1803               	btfsc	3,0
  4828  00EC  2901               	goto	l2631
  4829  00ED                     l2625:	
  4830                           
  4831                           ;remote.c: 146: remoter.lbuf[index] = rf_buf[index];
  4832  00ED  0858               	movf	remote_hits@index,w
  4833  00EE  3E4C               	addlw	(low (remote_hits@rf_buf| 0))& (0+255)
  4834  00EF  0086               	movwf	6
  4835  00F0  0187               	clrf	7
  4836  00F1  0801               	movf	1,w
  4837  00F2  00C7               	movwf	??_remote_hits
  4838  00F3  0858               	movf	remote_hits@index,w
  4839  00F4  3EB3               	addlw	(low ((_remoter| 0+12)))& (0+255)
  4840  00F5  0086               	movwf	6
  4841  00F6  0187               	clrf	7
  4842  00F7  0847               	movf	??_remote_hits,w
  4843  00F8  0081               	movwf	1
  4844  00F9  3001               	movlw	1
  4845  00FA  00C7               	movwf	??_remote_hits
  4846  00FB  0847               	movf	??_remote_hits,w
  4847  00FC  07D8               	addwf	remote_hits@index,f
  4848  00FD  3004               	movlw	4
  4849  00FE  0258               	subwf	remote_hits@index,w
  4850  00FF  1C03               	skipc
  4851  0100  28ED               	goto	l2625
  4852  0101                     l2631:	
  4853                           
  4854                           ;remote.c: 147: }
  4855                           ;remote.c: 149: DEcrypt((u8*)rf_buf, (u8*)remoter.lrn_key_save);
  4856  0101  30BF               	movlw	low (_remoter+24)
  4857  0102  00AA               	movwf	DEcrypt@_key
  4858  0103  3000               	movlw	high (_remoter+24)
  4859  0104  00AB               	movwf	DEcrypt@_key+1
  4860  0105  304C               	movlw	(low (remote_hits@rf_buf| 0))& (0+255)
  4861  0106  3184  247D  3180   	fcall	_DEcrypt
  4862                           
  4863                           ;remote.c: 152: if((rf_buf[2] != rf_buf[4]) || ((rf_buf[3]&0xF0) != (rf_buf[7]&0xF0)))
  4864  0109  0020               	movlb	0	; select bank0
  4865  010A  084E               	movf	remote_hits@rf_buf+2,w
  4866  010B  0650               	xorwf	remote_hits@rf_buf+4,w
  4867  010C  1D03               	skipz
  4868  010D  2918               	goto	l2637
  4869  010E  30F0               	movlw	240
  4870  010F  0553               	andwf	remote_hits@rf_buf+7,w
  4871  0110  00C7               	movwf	??_remote_hits
  4872  0111  30F0               	movlw	240
  4873  0112  054F               	andwf	remote_hits@rf_buf+3,w
  4874  0113  00C8               	movwf	??_remote_hits+1
  4875  0114  0848               	movf	??_remote_hits+1,w
  4876  0115  0647               	xorwf	??_remote_hits,w
  4877  0116  1903               	skipnz
  4878  0117  291A               	goto	l2641
  4879  0118                     l2637:	
  4880                           
  4881                           ;remote.c: 153: return (0x11);
  4882  0118  3011               	movlw	17
  4883  0119  0008               	return
  4884  011A                     l2641:	
  4885                           
  4886                           ;remote.c: 156: counter_rf = ((U16ET)rf_buf[1] << 8) + rf_buf[0];
  4887  011A  084C               	movf	remote_hits@rf_buf,w
  4888  011B  00C7               	movwf	??_remote_hits
  4889  011C  01C8               	clrf	??_remote_hits+1
  4890  011D  084D               	movf	remote_hits@rf_buf+1,w
  4891  011E  00C9               	movwf	??_remote_hits+2
  4892  011F  01CA               	clrf	??_remote_hits+3
  4893  0120  0849               	movf	??_remote_hits+2,w
  4894  0121  00CA               	movwf	??_remote_hits+3
  4895  0122  01C9               	clrf	??_remote_hits+2
  4896  0123  0847               	movf	??_remote_hits,w
  4897  0124  0749               	addwf	??_remote_hits+2,w
  4898  0125  00D4               	movwf	remote_hits@counter_rf
  4899  0126  0848               	movf	??_remote_hits+1,w
  4900  0127  3D4A               	addwfc	??_remote_hits+3,w
  4901  0128  00D5               	movwf	remote_hits@counter_rf+1
  4902                           
  4903                           ;remote.c: 157: counter_save = ((U16ET)remoter.sn_save[1] << 8) + remoter.sn_save[0];
  4904  0129  0021               	movlb	1	; select bank1
  4905  012A  0837               	movf	(_remoter^(0+128)+16),w
  4906  012B  0020               	movlb	0	; select bank0
  4907  012C  00C7               	movwf	??_remote_hits
  4908  012D  01C8               	clrf	??_remote_hits+1
  4909  012E  0021               	movlb	1	; select bank1
  4910  012F  0838               	movf	(_remoter^(0+128)+17),w
  4911  0130  0020               	movlb	0	; select bank0
  4912  0131  00C9               	movwf	??_remote_hits+2
  4913  0132  01CA               	clrf	??_remote_hits+3
  4914  0133  0849               	movf	??_remote_hits+2,w
  4915  0134  00CA               	movwf	??_remote_hits+3
  4916  0135  01C9               	clrf	??_remote_hits+2
  4917  0136  0847               	movf	??_remote_hits,w
  4918  0137  0749               	addwf	??_remote_hits+2,w
  4919  0138  00D6               	movwf	remote_hits@counter_save
  4920  0139  0848               	movf	??_remote_hits+1,w
  4921  013A  3D4A               	addwfc	??_remote_hits+3,w
  4922  013B  00D7               	movwf	remote_hits@counter_save+1
  4923                           
  4924                           ;remote.c: 159: if ((counter_rf < (50)) && (counter_save > (0xffff - (50)))) {
  4925  013C  3000               	movlw	0
  4926  013D  0255               	subwf	remote_hits@counter_rf+1,w
  4927  013E  3032               	movlw	50
  4928  013F  1903               	skipnz
  4929  0140  0254               	subwf	remote_hits@counter_rf,w
  4930  0141  1803               	skipnc
  4931  0142  2968               	goto	l2657
  4932  0143  30FF               	movlw	255
  4933  0144  0257               	subwf	remote_hits@counter_save+1,w
  4934  0145  30CE               	movlw	206
  4935  0146  1903               	skipnz
  4936  0147  0256               	subwf	remote_hits@counter_save,w
  4937  0148  1C03               	skipc
  4938  0149  2968               	goto	l2657
  4939                           
  4940                           ;remote.c: 160: counter_save = counter_rf + (0xffff - counter_save) + (50);
  4941  014A  0956               	comf	remote_hits@counter_save,w
  4942  014B  00C7               	movwf	??_remote_hits
  4943  014C  0957               	comf	remote_hits@counter_save+1,w
  4944  014D  00C8               	movwf	??_remote_hits+1
  4945  014E  0AC7               	incf	??_remote_hits,f
  4946  014F  1903               	skipnz
  4947  0150  0AC8               	incf	??_remote_hits+1,f
  4948  0151  0854               	movf	remote_hits@counter_rf,w
  4949  0152  0747               	addwf	??_remote_hits,w
  4950  0153  00C9               	movwf	??_remote_hits+2
  4951  0154  0855               	movf	remote_hits@counter_rf+1,w
  4952  0155  3D48               	addwfc	??_remote_hits+1,w
  4953  0156  00CA               	movwf	??_remote_hits+3
  4954  0157  0849               	movf	??_remote_hits+2,w
  4955  0158  3E31               	addlw	49
  4956  0159  00D6               	movwf	remote_hits@counter_save
  4957  015A  3000               	movlw	0
  4958  015B  3D4A               	addwfc	??_remote_hits+3,w
  4959  015C  00D7               	movwf	remote_hits@counter_save+1
  4960                           
  4961                           ;remote.c: 161: if (counter_save > (50)) {
  4962  015D  3000               	movlw	0
  4963  015E  0257               	subwf	remote_hits@counter_save+1,w
  4964  015F  3033               	movlw	51
  4965  0160  1903               	skipnz
  4966  0161  0256               	subwf	remote_hits@counter_save,w
  4967  0162  1C03               	skipc
  4968  0163  298E               	goto	l2675
  4969                           
  4970                           ;remote.c: 162: remote_clear();
  4971  0164  318D  25C4         	fcall	_remote_clear
  4972                           
  4973                           ;remote.c: 163: return (0x11);
  4974  0166  3011               	movlw	17
  4975  0167  0008               	return
  4976  0168                     l2657:	
  4977                           ;remote.c: 164: }
  4978                           ;remote.c: 165: } else {
  4979                           
  4980                           
  4981                           ;remote.c: 166: if (counter_rf <= counter_save) {
  4982  0168  0020               	movlb	0	; select bank0
  4983  0169  0855               	movf	remote_hits@counter_rf+1,w
  4984  016A  0257               	subwf	remote_hits@counter_save+1,w
  4985  016B  1D03               	skipz
  4986  016C  296F               	goto	u2855
  4987  016D  0854               	movf	remote_hits@counter_rf,w
  4988  016E  0256               	subwf	remote_hits@counter_save,w
  4989  016F                     u2855:	
  4990  016F  1C03               	skipc
  4991  0170  2975               	goto	l2665
  4992                           
  4993                           ;remote.c: 167: remote_clear();
  4994  0171  318D  25C4         	fcall	_remote_clear
  4995                           
  4996                           ;remote.c: 168: return (0x11);
  4997  0173  3011               	movlw	17
  4998  0174  0008               	return
  4999  0175                     l2665:	
  5000                           
  5001                           ;remote.c: 169: }
  5002                           ;remote.c: 170: counter_save = counter_rf - counter_save;
  5003  0175  0020               	movlb	0	; select bank0
  5004  0176  0956               	comf	remote_hits@counter_save,w
  5005  0177  00C7               	movwf	??_remote_hits
  5006  0178  0957               	comf	remote_hits@counter_save+1,w
  5007  0179  00C8               	movwf	??_remote_hits+1
  5008  017A  0AC7               	incf	??_remote_hits,f
  5009  017B  1903               	skipnz
  5010  017C  0AC8               	incf	??_remote_hits+1,f
  5011  017D  0854               	movf	remote_hits@counter_rf,w
  5012  017E  0747               	addwf	??_remote_hits,w
  5013  017F  00D6               	movwf	remote_hits@counter_save
  5014  0180  0855               	movf	remote_hits@counter_rf+1,w
  5015  0181  3D48               	addwfc	??_remote_hits+1,w
  5016  0182  00D7               	movwf	remote_hits@counter_save+1
  5017                           
  5018                           ;remote.c: 172: if (counter_save > (50)) {
  5019  0183  3000               	movlw	0
  5020  0184  0257               	subwf	remote_hits@counter_save+1,w
  5021  0185  3033               	movlw	51
  5022  0186  1903               	skipnz
  5023  0187  0256               	subwf	remote_hits@counter_save,w
  5024  0188  1C03               	skipc
  5025  0189  298E               	goto	l2675
  5026                           
  5027                           ;remote.c: 173: remote_clear();
  5028  018A  318D  25C4         	fcall	_remote_clear
  5029                           
  5030                           ;remote.c: 174: return (0x11);
  5031  018C  3011               	movlw	17
  5032  018D  0008               	return
  5033  018E                     l2675:	
  5034                           
  5035                           ;remote.c: 175: }
  5036                           ;remote.c: 176: }
  5037                           ;remote.c: 179: remoter.sn_save[0] = rf_buf[0];
  5038  018E  0020               	movlb	0	; select bank0
  5039  018F  084C               	movf	remote_hits@rf_buf,w
  5040  0190  00C7               	movwf	??_remote_hits
  5041  0191  0847               	movf	??_remote_hits,w
  5042  0192  0021               	movlb	1	; select bank1
  5043  0193  00B7               	movwf	(_remoter^(0+128)+16)
  5044                           
  5045                           ;remote.c: 180: remoter.sn_save[1] = rf_buf[1];
  5046  0194  0020               	movlb	0	; select bank0
  5047  0195  084D               	movf	remote_hits@rf_buf+1,w
  5048  0196  00C7               	movwf	??_remote_hits
  5049  0197  0847               	movf	??_remote_hits,w
  5050  0198  0021               	movlb	1	; select bank1
  5051  0199  00B8               	movwf	(_remoter^(0+128)+17)
  5052                           
  5053                           ;remote.c: 181: eeprom_write(((U08ET)(0)), remoter.sn_save[0]);
  5054  019A  0837               	movf	(_remoter^(0+128)+16),w
  5055  019B  0020               	movlb	0	; select bank0
  5056  019C  00C7               	movwf	??_remote_hits
  5057  019D  0847               	movf	??_remote_hits,w
  5058  019E  00A2               	movwf	eeprom_write@value
  5059  019F  3000               	movlw	0
  5060  01A0  318D  256B  3180   	fcall	_eeprom_write
  5061                           
  5062                           ;remote.c: 182: eeprom_write(((U08ET)(0)) + 1, remoter.sn_save[1]);
  5063  01A3  0021               	movlb	1	; select bank1
  5064  01A4  0838               	movf	(_remoter^(0+128)+17),w
  5065  01A5  0020               	movlb	0	; select bank0
  5066  01A6  00C7               	movwf	??_remote_hits
  5067  01A7  0847               	movf	??_remote_hits,w
  5068  01A8  00A2               	movwf	eeprom_write@value
  5069  01A9  3001               	movlw	1
  5070  01AA  318D  256B  3180   	fcall	_eeprom_write
  5071                           
  5072                           ;remote.c: 185: if (counter_save > 3) {
  5073  01AD  3000               	movlw	0
  5074  01AE  0020               	movlb	0	; select bank0
  5075  01AF  0257               	subwf	remote_hits@counter_save+1,w
  5076  01B0  3004               	movlw	4
  5077  01B1  1903               	skipnz
  5078  01B2  0256               	subwf	remote_hits@counter_save,w
  5079  01B3  1C03               	skipc
  5080  01B4  29E5               	goto	l2739
  5081                           
  5082                           ;remote.c: 186: return (0x11);
  5083  01B5  3011               	movlw	17
  5084  01B6  0008               	return
  5085  01B7                     l2685:	
  5086                           ;remote.c: 191: case 0x60:
  5087                           
  5088                           ;remote.c: 187: }
  5089                           ;remote.c: 190: switch( rf_buf[7] & 0xf0){
  5090                           
  5091                           
  5092                           ;remote.c: 192: return (0x00);
  5093  01B7  3000               	movlw	0
  5094  01B8  0008               	return
  5095  01B9                     l2689:	
  5096                           ;remote.c: 193: case 0xa0:
  5097                           
  5098                           
  5099                           ;remote.c: 194: return (0x01);
  5100  01B9  3001               	movlw	1
  5101  01BA  0008               	return
  5102  01BB                     l2693:	
  5103                           ;remote.c: 195: case 0x40:
  5104                           
  5105                           
  5106                           ;remote.c: 196: return (0x02);
  5107  01BB  3002               	movlw	2
  5108  01BC  0008               	return
  5109  01BD                     l2697:	
  5110                           ;remote.c: 197: case 0x80:
  5111                           
  5112                           
  5113                           ;remote.c: 198: return (0x03);
  5114  01BD  3003               	movlw	3
  5115  01BE  0008               	return
  5116  01BF                     l2701:	
  5117                           ;remote.c: 199: case 0x10:
  5118                           
  5119                           
  5120                           ;remote.c: 200: return (0x04);
  5121  01BF  3004               	movlw	4
  5122  01C0  0008               	return
  5123  01C1                     l2705:	
  5124                           ;remote.c: 201: case 0x30:
  5125                           
  5126                           
  5127                           ;remote.c: 202: if ((1) == equipment_type()) {
  5128  01C1  318C  24AF  3180   	fcall	_equipment_type
  5129  01C4  3A01               	xorlw	1
  5130  01C5  1D03               	skipz
  5131  01C6  29CA               	goto	l2709
  5132                           
  5133                           ;remote.c: 203: remoter.repeat_pass = 1;
  5134  01C7  0021               	movlb	1	; select bank1
  5135  01C8  01A9               	clrf	(_remoter^(0+128)+2)
  5136  01C9  0AA9               	incf	(_remoter^(0+128)+2),f
  5137  01CA                     l2709:	
  5138                           
  5139                           ;remote.c: 204: }
  5140                           ;remote.c: 205: return (0x05);
  5141  01CA  3005               	movlw	5
  5142  01CB  0008               	return
  5143  01CC                     l2713:	
  5144                           ;remote.c: 206: case 0x90:
  5145                           
  5146                           
  5147                           ;remote.c: 207: if ((1) == equipment_type()) {
  5148  01CC  318C  24AF  3180   	fcall	_equipment_type
  5149  01CF  3A01               	xorlw	1
  5150  01D0  1D03               	skipz
  5151  01D1  29D5               	goto	l2717
  5152                           
  5153                           ;remote.c: 208: remoter.repeat_pass = 1;
  5154  01D2  0021               	movlb	1	; select bank1
  5155  01D3  01A9               	clrf	(_remoter^(0+128)+2)
  5156  01D4  0AA9               	incf	(_remoter^(0+128)+2),f
  5157  01D5                     l2717:	
  5158                           
  5159                           ;remote.c: 209: }
  5160                           ;remote.c: 210: return (0x06);
  5161  01D5  3006               	movlw	6
  5162  01D6  0008               	return
  5163  01D7                     l320:	
  5164                           ;remote.c: 211: case 0x50:
  5165                           
  5166                           
  5167                           ;remote.c: 212: remoter.repeat_pass = 1;
  5168  01D7  0021               	movlb	1	; select bank1
  5169  01D8  01A9               	clrf	(_remoter^(0+128)+2)
  5170  01D9  0AA9               	incf	(_remoter^(0+128)+2),f
  5171                           
  5172                           ;remote.c: 213: return (0x07);
  5173  01DA  3007               	movlw	7
  5174  01DB  0008               	return
  5175  01DC                     l2725:	
  5176                           ;remote.c: 214: case 0xc0:
  5177                           
  5178                           
  5179                           ;remote.c: 215: return (0x08);
  5180  01DC  3008               	movlw	8
  5181  01DD  0008               	return
  5182  01DE                     l322:	
  5183                           ;remote.c: 216: case 0x20:
  5184                           
  5185                           
  5186                           ;remote.c: 217: remoter.repeat_pass = 1;
  5187  01DE  0021               	movlb	1	; select bank1
  5188  01DF  01A9               	clrf	(_remoter^(0+128)+2)
  5189  01E0  0AA9               	incf	(_remoter^(0+128)+2),f
  5190                           
  5191                           ;remote.c: 218: return (0x09);
  5192  01E1  3009               	movlw	9
  5193  01E2  0008               	return
  5194  01E3                     l2733:	
  5195                           ;remote.c: 219: default:
  5196                           
  5197                           
  5198                           ;remote.c: 220: return (0x11);
  5199  01E3  3011               	movlw	17
  5200                           
  5201                           ;remote.c: 221: }
  5202  01E4  0008               	return
  5203  01E5                     l2739:	
  5204  01E5  0020               	movlb	0	; select bank0
  5205  01E6  0853               	movf	remote_hits@rf_buf+7,w
  5206  01E7  39F0               	andlw	240
  5207  01E8  00C7               	movwf	??_remote_hits
  5208  01E9  01C8               	clrf	??_remote_hits+1
  5209                           
  5210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5211                           ; Switch size 1, requested type "space"
  5212                           ; Number of cases is 1, Range of values is 0 to 0
  5213                           ; switch strategies available:
  5214                           ; Name         Instructions Cycles
  5215                           ; simple_byte            4     3 (average)
  5216                           ; direct_byte            8     6 (fixed)
  5217                           ; jumptable            260     6 (fixed)
  5218                           ;	Chosen strategy is simple_byte
  5219  01EA  0848               	movf	??_remote_hits+1,w
  5220  01EB  3A00               	xorlw	0	; case 0
  5221  01EC  1903               	skipnz
  5222  01ED  29EF               	goto	l3493
  5223  01EE  29E3               	goto	l2733
  5224  01EF                     l3493:	
  5225                           
  5226                           ; Switch size 1, requested type "space"
  5227                           ; Number of cases is 10, Range of values is 16 to 192
  5228                           ; switch strategies available:
  5229                           ; Name         Instructions Cycles
  5230                           ; simple_byte           31    16 (average)
  5231                           ; jumptable            263     9 (fixed)
  5232                           ;	Chosen strategy is simple_byte
  5233  01EF  0847               	movf	??_remote_hits,w
  5234  01F0  3A10               	xorlw	16	; case 16
  5235  01F1  1903               	skipnz
  5236  01F2  29BF               	goto	l2701
  5237  01F3  3A30               	xorlw	48	; case 32
  5238  01F4  1903               	skipnz
  5239  01F5  29DE               	goto	l322
  5240  01F6  3A10               	xorlw	16	; case 48
  5241  01F7  1903               	skipnz
  5242  01F8  29C1               	goto	l2705
  5243  01F9  3A70               	xorlw	112	; case 64
  5244  01FA  1903               	skipnz
  5245  01FB  29BB               	goto	l2693
  5246  01FC  3A10               	xorlw	16	; case 80
  5247  01FD  1903               	skipnz
  5248  01FE  29D7               	goto	l320
  5249  01FF  3A30               	xorlw	48	; case 96
  5250  0200  1903               	skipnz
  5251  0201  29B7               	goto	l2685
  5252  0202  3AE0               	xorlw	224	; case 128
  5253  0203  1903               	skipnz
  5254  0204  29BD               	goto	l2697
  5255  0205  3A10               	xorlw	16	; case 144
  5256  0206  1903               	skipnz
  5257  0207  29CC               	goto	l2713
  5258  0208  3A30               	xorlw	48	; case 160
  5259  0209  1903               	skipnz
  5260  020A  29B9               	goto	l2689
  5261  020B  3A60               	xorlw	96	; case 192
  5262  020C  1903               	skipnz
  5263  020D  29DC               	goto	l2725
  5264  020E  29E3               	goto	l2733
  5265  020F  0008               	return
  5266  0210                     __end_of_remote_hits:	
  5267                           
  5268                           	psect	text21
  5269  0F38                     __ptext21:	
  5270 ;; *************** function _remote_gkey *****************
  5271 ;; Defined at:
  5272 ;;		line 75 in file "source/remote.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  buf             1    wreg     PTR unsigned char 
  5275 ;;		 -> remote_learn@rf_buf(8), remote_hits@rf_buf(8), 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5278 ;;		 -> remote_learn@rf_buf(8), remote_hits@rf_buf(8), 
  5279 ;;  index           1    5[BANK0 ] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      unsigned char 
  5282 ;; Registers used:
  5283 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5289 ;;      Params:         0       0       0       0
  5290 ;;      Locals:         0       2       0       0
  5291 ;;      Temps:          0       2       0       0
  5292 ;;      Totals:         0       4       0       0
  5293 ;;Total ram usage:        4 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    3
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_remote_hits
  5300 ;;		_remote_learn
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _remote_gkey
  5306  0F38                     _remote_gkey:	
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _remote_gkey: [wreg+fsr1l+fsr1h+status,2+status,0]
  5310                           ;remote_gkey@buf stored from wreg
  5311  0F38  0020               	movlb	0	; select bank0
  5312  0F39  00A4               	movwf	remote_gkey@buf
  5313                           
  5314                           ;remote.c: 76: U08ET index;
  5315                           ;remote.c: 78: if ((3) != remoter.st_remo) return (0);
  5316  0F3A  0021               	movlb	1	; select bank1
  5317  0F3B  0C27               	rrf	_remoter^(0+128),w
  5318  0F3C  0C89               	rrf	9,f
  5319  0F3D  393F               	andlw	63
  5320  0F3E  3A03               	xorlw	3
  5321  0F3F  1903               	skipnz
  5322  0F40  2F43               	goto	l2353
  5323  0F41  3000               	movlw	0
  5324  0F42  0008               	return
  5325  0F43                     l2353:	
  5326                           
  5327                           ;remote.c: 81: if ((0x00==remoter.rbuf[4]) && (0x00==remoter.rbuf[5]) && (0x00==remoter.
      +                          rbuf[6]) && (0x00==(remoter.rbuf[7]&0x0F)) ) {
  5328  0F43  082F               	movf	(_remoter^(0+128)+8),w
  5329  0F44  1D03               	btfss	3,2
  5330  0F45  2F56               	goto	l2367
  5331  0F46  0830               	movf	(_remoter^(0+128)+9),w
  5332  0F47  1D03               	btfss	3,2
  5333  0F48  2F56               	goto	l2367
  5334  0F49  0831               	movf	(_remoter^(0+128)+10),w
  5335  0F4A  1D03               	btfss	3,2
  5336  0F4B  2F56               	goto	l2367
  5337  0F4C  0832               	movf	(_remoter^(0+128)+11),w
  5338  0F4D  390F               	andlw	15
  5339  0F4E  1D03               	btfss	3,2
  5340  0F4F  2F56               	goto	l2367
  5341                           
  5342                           ;remote.c: 82: remoter.st_remo = (1);
  5343  0F50  0827               	movf	_remoter^(0+128),w
  5344  0F51  3903               	andlw	-253
  5345  0F52  3804               	iorlw	4
  5346  0F53  00A7               	movwf	_remoter^(0+128)
  5347                           
  5348                           ;remote.c: 83: return (0);
  5349  0F54  3000               	movlw	0
  5350  0F55  0008               	return
  5351  0F56                     l2367:	
  5352                           
  5353                           ;remote.c: 84: }
  5354                           ;remote.c: 87: if( (0xFF==remoter.rbuf[4]) && (0xFF==remoter.rbuf[5]) && (0xFF==remoter.
      +                          rbuf[6]) && (0x0F==(remoter.rbuf[7]&0x0F)) ) {
  5355  0F56  0A2F               	incf	(_remoter^(0+128)+8),w
  5356  0F57  1D03               	btfss	3,2
  5357  0F58  2F6E               	goto	l2381
  5358  0F59  0A30               	incf	(_remoter^(0+128)+9),w
  5359  0F5A  1D03               	btfss	3,2
  5360  0F5B  2F6E               	goto	l2381
  5361  0F5C  0A31               	incf	(_remoter^(0+128)+10),w
  5362  0F5D  1D03               	btfss	3,2
  5363  0F5E  2F6E               	goto	l2381
  5364  0F5F  300F               	movlw	15
  5365  0F60  0532               	andwf	(_remoter^(0+128)+11),w
  5366  0F61  0020               	movlb	0	; select bank0
  5367  0F62  00A2               	movwf	??_remote_gkey
  5368  0F63  300F               	movlw	15
  5369  0F64  0622               	xorwf	??_remote_gkey,w
  5370  0F65  1D03               	btfss	3,2
  5371  0F66  2F6E               	goto	l2381
  5372                           
  5373                           ;remote.c: 88: remoter.st_remo = (1);
  5374  0F67  0021               	movlb	1	; select bank1
  5375  0F68  0827               	movf	_remoter^(0+128),w
  5376  0F69  3903               	andlw	-253
  5377  0F6A  3804               	iorlw	4
  5378  0F6B  00A7               	movwf	_remoter^(0+128)
  5379                           
  5380                           ;remote.c: 89: return (0);
  5381  0F6C  3000               	movlw	0
  5382  0F6D  0008               	return
  5383  0F6E                     l2381:	
  5384                           
  5385                           ;remote.c: 90: }
  5386                           ;remote.c: 92: for (index = 0; index < 8; index++) {
  5387  0F6E  0020               	movlb	0	; select bank0
  5388  0F6F  01A5               	clrf	remote_gkey@index
  5389  0F70  3008               	movlw	8
  5390  0F71  0225               	subwf	remote_gkey@index,w
  5391  0F72  1803               	btfsc	3,0
  5392  0F73  2F8A               	goto	l2393
  5393  0F74                     l2387:	
  5394                           
  5395                           ;remote.c: 93: buf[index] = remoter.rbuf[index];
  5396  0F74  0825               	movf	remote_gkey@index,w
  5397  0F75  3EAB               	addlw	(low ((_remoter| 0+4)))& (0+255)
  5398  0F76  0086               	movwf	6
  5399  0F77  0187               	clrf	7
  5400  0F78  0801               	movf	1,w
  5401  0F79  00A2               	movwf	??_remote_gkey
  5402  0F7A  0825               	movf	remote_gkey@index,w
  5403  0F7B  0724               	addwf	remote_gkey@buf,w
  5404  0F7C  00A3               	movwf	??_remote_gkey+1
  5405  0F7D  0823               	movf	??_remote_gkey+1,w
  5406  0F7E  0086               	movwf	6
  5407  0F7F  0187               	clrf	7
  5408  0F80  0822               	movf	??_remote_gkey,w
  5409  0F81  0081               	movwf	1
  5410  0F82  3001               	movlw	1
  5411  0F83  00A2               	movwf	??_remote_gkey
  5412  0F84  0822               	movf	??_remote_gkey,w
  5413  0F85  07A5               	addwf	remote_gkey@index,f
  5414  0F86  3008               	movlw	8
  5415  0F87  0225               	subwf	remote_gkey@index,w
  5416  0F88  1C03               	skipc
  5417  0F89  2F74               	goto	l2387
  5418  0F8A                     l2393:	
  5419                           
  5420                           ;remote.c: 94: }
  5421                           ;remote.c: 96: remoter.st_remo = (1);
  5422  0F8A  0021               	movlb	1	; select bank1
  5423  0F8B  0827               	movf	_remoter^(0+128),w
  5424  0F8C  3903               	andlw	-253
  5425  0F8D  3804               	iorlw	4
  5426  0F8E  00A7               	movwf	_remoter^(0+128)
  5427                           
  5428                           ;remote.c: 97: return (1);
  5429  0F8F  3001               	movlw	1
  5430  0F90  0008               	return
  5431  0F91                     __end_of_remote_gkey:	
  5432                           
  5433                           	psect	text22
  5434  0DC4                     __ptext22:	
  5435 ;; *************** function _remote_clear *****************
  5436 ;; Defined at:
  5437 ;;		line 313 in file "source/remote.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  index           1    7[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5451 ;;      Params:         0       0       0       0
  5452 ;;      Locals:         0       1       0       0
  5453 ;;      Temps:          0       1       0       0
  5454 ;;      Totals:         0       2       0       0
  5455 ;;Total ram usage:        2 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		_eeprom_write
  5460 ;; This function is called by:
  5461 ;;		_match_code
  5462 ;;		_remote_hits
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _remote_clear
  5468  0DC4                     _remote_clear:	
  5469                           
  5470                           ;remote.c: 314: U08ET index;
  5471                           ;remote.c: 315: for (index = 0; index < 8; index++){
  5472                           
  5473                           ;incstack = 0
  5474                           ; Regs used in _remote_clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5475  0DC4  0020               	movlb	0	; select bank0
  5476  0DC5  01A7               	clrf	remote_clear@index
  5477  0DC6  3008               	movlw	8
  5478  0DC7  0227               	subwf	remote_clear@index,w
  5479  0DC8  1803               	btfsc	3,0
  5480  0DC9  2DDC               	goto	l2325
  5481  0DCA                     l2319:	
  5482                           
  5483                           ;remote.c: 316: remoter.lrn_key_save[index] = 0x0;
  5484  0DCA  0827               	movf	remote_clear@index,w
  5485  0DCB  3EBF               	addlw	(low ((_remoter| 0+24)))& (0+255)
  5486  0DCC  0086               	movwf	6
  5487  0DCD  0187               	clrf	7
  5488  0DCE  0181               	clrf	1
  5489                           
  5490                           ;remote.c: 317: remoter.sn_save[index] = 0x0;
  5491  0DCF  0827               	movf	remote_clear@index,w
  5492  0DD0  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  5493  0DD1  0086               	movwf	6
  5494  0DD2  0187               	clrf	7
  5495  0DD3  0181               	clrf	1
  5496  0DD4  3001               	movlw	1
  5497  0DD5  00A6               	movwf	??_remote_clear
  5498  0DD6  0826               	movf	??_remote_clear,w
  5499  0DD7  07A7               	addwf	remote_clear@index,f
  5500  0DD8  3008               	movlw	8
  5501  0DD9  0227               	subwf	remote_clear@index,w
  5502  0DDA  1C03               	skipc
  5503  0DDB  2DCA               	goto	l2319
  5504  0DDC                     l2325:	
  5505                           
  5506                           ;remote.c: 318: }
  5507                           ;remote.c: 320: for (index = 0; index < 18; index++)
  5508  0DDC  01A7               	clrf	remote_clear@index
  5509  0DDD                     L4:	
  5510  0DDD  3012               	movlw	18
  5511  0DDE  0227               	subwf	remote_clear@index,w
  5512  0DDF  1803               	btfsc	3,0
  5513  0DE0  0008               	return
  5514                           
  5515                           ;remote.c: 321: eeprom_write((index + ((U08ET)(0))), ((U08ET*)(&remoter.sn_save[0]))[ind
      +                          ex]);
  5516  0DE1  0827               	movf	remote_clear@index,w
  5517  0DE2  3EB7               	addlw	(low ((_remoter| 0+16)))& (0+255)
  5518  0DE3  0086               	movwf	6
  5519  0DE4  0187               	clrf	7
  5520  0DE5  0801               	movf	1,w
  5521  0DE6  00A6               	movwf	??_remote_clear
  5522  0DE7  0826               	movf	??_remote_clear,w
  5523  0DE8  00A2               	movwf	eeprom_write@value
  5524  0DE9  0827               	movf	remote_clear@index,w
  5525  0DEA  318D  256B  318D   	fcall	_eeprom_write
  5526  0DED  3001               	movlw	1
  5527  0DEE  0020               	movlb	0	; select bank0
  5528  0DEF  00A6               	movwf	??_remote_clear
  5529  0DF0  0826               	movf	??_remote_clear,w
  5530  0DF1  07A7               	addwf	remote_clear@index,f
  5531  0DF2  2DDD               	goto	L4
  5532  0DF3                     __end_of_remote_clear:	
  5533                           
  5534                           	psect	text23
  5535  0D6B                     __ptext23:	
  5536 ;; *************** function _eeprom_write *****************
  5537 ;; Defined at:
  5538 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eewrite.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  addr            1    wreg     unsigned char 
  5541 ;;  value           1    2[BANK0 ] unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  addr            1    5[BANK0 ] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5553 ;;      Params:         0       1       0       0
  5554 ;;      Locals:         0       1       0       0
  5555 ;;      Temps:          0       2       0       0
  5556 ;;      Totals:         0       4       0       0
  5557 ;;Total ram usage:        4 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    3
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_remote_hits
  5564 ;;		_remote_learn
  5565 ;;		_remote_clear
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           
  5570                           ;psect for function _eeprom_write
  5571  0D6B                     _eeprom_write:	
  5572                           
  5573                           ;incstack = 0
  5574                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5575                           ;eeprom_write@addr stored from wreg
  5576  0D6B  0020               	movlb	0	; select bank0
  5577  0D6C  00A5               	movwf	eeprom_write@addr
  5578  0D6D                     l511:	
  5579  0D6D  0023               	movlb	3	; select bank3
  5580  0D6E  1895               	btfsc	21,1	;volsfr
  5581  0D6F  2D6D               	goto	l511
  5582  0D70  0020               	movlb	0	; select bank0
  5583  0D71  0825               	movf	eeprom_write@addr,w
  5584  0D72  00A3               	movwf	??_eeprom_write
  5585  0D73  01A4               	clrf	??_eeprom_write+1
  5586  0D74  0823               	movf	??_eeprom_write,w
  5587  0D75  0023               	movlb	3	; select bank3
  5588  0D76  0091               	movwf	17	;volatile
  5589  0D77  0020               	movlb	0	; select bank0
  5590  0D78  0824               	movf	??_eeprom_write+1,w
  5591  0D79  0023               	movlb	3	; select bank3
  5592  0D7A  0092               	movwf	18	;volatile
  5593  0D7B  0020               	movlb	0	; select bank0
  5594  0D7C  0822               	movf	eeprom_write@value,w
  5595  0D7D  0023               	movlb	3	; select bank3
  5596  0D7E  0093               	movwf	19	;volatile
  5597  0D7F  303F               	movlw	63
  5598  0D80  0020               	movlb	0	; select bank0
  5599  0D81  00A3               	movwf	??_eeprom_write
  5600  0D82  0823               	movf	??_eeprom_write,w
  5601  0D83  0023               	movlb	3	; select bank3
  5602  0D84  0595               	andwf	21,f	;volsfr
  5603  0D85  0020               	movlb	0	; select bank0
  5604  0D86  1003               	bcf	3,0	;volatile
  5605  0D87  1B8B               	btfsc	11,7	;volatile
  5606  0D88  1403               	bsf	3,0	;volatile
  5607  0D89  138B               	bcf	11,7	;volatile
  5608  0D8A  0023               	movlb	3	; select bank3
  5609  0D8B  1515               	bsf	21,2	;volsfr
  5610  0D8C  3055               	movlw	85
  5611  0D8D  0096               	movwf	22	;volsfr
  5612  0D8E  30AA               	movlw	170
  5613  0D8F  0096               	movwf	22	;volsfr
  5614  0D90  1495               	bsf	21,1	;volsfr
  5615  0D91  1115               	bcf	21,2	;volsfr
  5616  0D92  0020               	movlb	0	; select bank0
  5617  0D93  1C03               	btfss	3,0	;volatile
  5618  0D94  0008               	return
  5619  0D95  178B               	bsf	11,7	;volatile
  5620  0D96  0008               	return
  5621  0D97                     __end_of_eeprom_write:	
  5622                           
  5623                           	psect	text24
  5624  047D                     __ptext24:	
  5625 ;; *************** function _DEcrypt *****************
  5626 ;; Defined at:
  5627 ;;		line 79 in file "source/keeloq.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  source          1    wreg     PTR unsigned char 
  5630 ;;		 -> remote_learn@lrn_buf(8), remote_learn@rf_buf(8), remote_hits@rf_buf(8), 
  5631 ;;  _key            2   10[BANK0 ] PTR unsigned char 
  5632 ;;		 -> CUSTOMER_code(8), remote_learn@lrn_buf(8), remoter(34), 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  source          1   38[BANK0 ] PTR unsigned char 
  5635 ;;		 -> remote_learn@lrn_buf(8), remote_learn@rf_buf(8), remote_hits@rf_buf(8), 
  5636 ;;  bitk            4   32[BANK0 ] unsigned char [4]
  5637 ;;  index           2   36[BANK0 ] unsigned short 
  5638 ;;  res             1   31[BANK0 ] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      PTR unsigned char 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5648 ;;      Params:         0       2       0       0
  5649 ;;      Locals:         0       8       0       0
  5650 ;;      Temps:          0      19       0       0
  5651 ;;      Totals:         0      29       0       0
  5652 ;;Total ram usage:       29 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    4
  5655 ;; This function calls:
  5656 ;;		_getBit
  5657 ;; This function is called by:
  5658 ;;		_remote_hits
  5659 ;;		_remote_learn
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _DEcrypt
  5665  047D                     _DEcrypt:	
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _DEcrypt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5669                           ;DEcrypt@source stored from wreg
  5670  047D  0020               	movlb	0	; select bank0
  5671  047E  00C6               	movwf	DEcrypt@source
  5672                           
  5673                           ;keeloq.c: 81: U08ET bitk[4], res;
  5674                           ;keeloq.c: 82: U16ET index;
  5675                           ;keeloq.c: 83: for(index=0; index<528; index++) {
  5676  047F  01C4               	clrf	DEcrypt@index
  5677  0480  01C5               	clrf	DEcrypt@index+1
  5678  0481                     L5:	
  5679  0481  3002               	movlw	2
  5680  0482  0245               	subwf	DEcrypt@index+1,w
  5681  0483  3010               	movlw	16
  5682  0484  1903               	skipnz
  5683  0485  0244               	subwf	DEcrypt@index,w
  5684  0486  1803               	btfsc	3,0
  5685  0487  0008               	return
  5686                           
  5687                           ;keeloq.c: 84: bitk[0] = NLF[getBit(source,30)][getBit(source,25)][getBit(source,19)][ge
      +                          tBit(source, 8)][getBit(source,0)];
  5688  0488  0846               	movf	DEcrypt@source,w
  5689  0489  00A2               	movwf	getBit@source
  5690  048A  3000               	movlw	0
  5691  048B  00A3               	movwf	getBit@source+1
  5692  048C  3008               	movlw	8
  5693  048D  00A4               	movwf	getBit@n
  5694  048E  3000               	movlw	0
  5695  048F  00A5               	movwf	getBit@n+1
  5696  0490  318D  2547  3184   	fcall	_getBit
  5697  0493  0020               	movlb	0	; select bank0
  5698  0494  00AC               	movwf	??_DEcrypt
  5699  0495  01AD               	clrf	??_DEcrypt+1
  5700  0496  35AC               	lslf	??_DEcrypt,f
  5701  0497  0DAD               	rlf	??_DEcrypt+1,f
  5702  0498  0846               	movf	DEcrypt@source,w
  5703  0499  00A2               	movwf	getBit@source
  5704  049A  3000               	movlw	0
  5705  049B  00A3               	movwf	getBit@source+1
  5706  049C  3013               	movlw	19
  5707  049D  00A4               	movwf	getBit@n
  5708  049E  3000               	movlw	0
  5709  049F  00A5               	movwf	getBit@n+1
  5710  04A0  318D  2547  3184   	fcall	_getBit
  5711  04A3  0020               	movlb	0	; select bank0
  5712  04A4  00AE               	movwf	??_DEcrypt+2
  5713  04A5  01AF               	clrf	??_DEcrypt+3
  5714  04A6  35AE               	lslf	??_DEcrypt+2,f
  5715  04A7  0DAF               	rlf	??_DEcrypt+3,f
  5716  04A8  35AE               	lslf	??_DEcrypt+2,f
  5717  04A9  0DAF               	rlf	??_DEcrypt+3,f
  5718  04AA  0846               	movf	DEcrypt@source,w
  5719  04AB  00A2               	movwf	getBit@source
  5720  04AC  3000               	movlw	0
  5721  04AD  00A3               	movwf	getBit@source+1
  5722  04AE  3019               	movlw	25
  5723  04AF  00A4               	movwf	getBit@n
  5724  04B0  3000               	movlw	0
  5725  04B1  00A5               	movwf	getBit@n+1
  5726  04B2  318D  2547  3184   	fcall	_getBit
  5727  04B5  0020               	movlb	0	; select bank0
  5728  04B6  00B0               	movwf	??_DEcrypt+4
  5729  04B7  01B1               	clrf	??_DEcrypt+5
  5730  04B8  35B0               	lslf	??_DEcrypt+4,f
  5731  04B9  0DB1               	rlf	??_DEcrypt+5,f
  5732  04BA  35B0               	lslf	??_DEcrypt+4,f
  5733  04BB  0DB1               	rlf	??_DEcrypt+5,f
  5734  04BC  35B0               	lslf	??_DEcrypt+4,f
  5735  04BD  0DB1               	rlf	??_DEcrypt+5,f
  5736  04BE  0846               	movf	DEcrypt@source,w
  5737  04BF  00A2               	movwf	getBit@source
  5738  04C0  3000               	movlw	0
  5739  04C1  00A3               	movwf	getBit@source+1
  5740  04C2  301E               	movlw	30
  5741  04C3  00A4               	movwf	getBit@n
  5742  04C4  3000               	movlw	0
  5743  04C5  00A5               	movwf	getBit@n+1
  5744  04C6  318D  2547  3184   	fcall	_getBit
  5745  04C9  0020               	movlb	0	; select bank0
  5746  04CA  00B2               	movwf	??_DEcrypt+6
  5747  04CB  01B3               	clrf	??_DEcrypt+7
  5748  04CC  0EB2               	swapf	??_DEcrypt+6,f
  5749  04CD  0EB3               	swapf	??_DEcrypt+7,f
  5750  04CE  30F0               	movlw	240
  5751  04CF  05B3               	andwf	??_DEcrypt+7,f
  5752  04D0  0832               	movf	??_DEcrypt+6,w
  5753  04D1  390F               	andlw	15
  5754  04D2  04B3               	iorwf	??_DEcrypt+7,f
  5755  04D3  30F0               	movlw	240
  5756  04D4  05B2               	andwf	??_DEcrypt+6,f
  5757  04D5  30FE               	movlw	low (_NLF| (0+32768))
  5758  04D6  00B4               	movwf	??_DEcrypt+8
  5759  04D7  3087               	movlw	high (_NLF| (0+32768))
  5760  04D8  00B5               	movwf	??_DEcrypt+9
  5761  04D9  0832               	movf	??_DEcrypt+6,w
  5762  04DA  0734               	addwf	??_DEcrypt+8,w
  5763  04DB  00B6               	movwf	??_DEcrypt+10
  5764  04DC  0833               	movf	??_DEcrypt+7,w
  5765  04DD  3D35               	addwfc	??_DEcrypt+9,w
  5766  04DE  00B7               	movwf	??_DEcrypt+11
  5767  04DF  0830               	movf	??_DEcrypt+4,w
  5768  04E0  0736               	addwf	??_DEcrypt+10,w
  5769  04E1  00B8               	movwf	??_DEcrypt+12
  5770  04E2  0831               	movf	??_DEcrypt+5,w
  5771  04E3  3D37               	addwfc	??_DEcrypt+11,w
  5772  04E4  00B9               	movwf	??_DEcrypt+13
  5773  04E5  082E               	movf	??_DEcrypt+2,w
  5774  04E6  0738               	addwf	??_DEcrypt+12,w
  5775  04E7  00BA               	movwf	??_DEcrypt+14
  5776  04E8  082F               	movf	??_DEcrypt+3,w
  5777  04E9  3D39               	addwfc	??_DEcrypt+13,w
  5778  04EA  00BB               	movwf	??_DEcrypt+15
  5779  04EB  082C               	movf	??_DEcrypt,w
  5780  04EC  073A               	addwf	??_DEcrypt+14,w
  5781  04ED  00BC               	movwf	??_DEcrypt+16
  5782  04EE  082D               	movf	??_DEcrypt+1,w
  5783  04EF  3D3B               	addwfc	??_DEcrypt+15,w
  5784  04F0  00BD               	movwf	??_DEcrypt+17
  5785  04F1  0846               	movf	DEcrypt@source,w
  5786  04F2  00A2               	movwf	getBit@source
  5787  04F3  3000               	movlw	0
  5788  04F4  00A3               	movwf	getBit@source+1
  5789  04F5  3000               	movlw	0
  5790  04F6  00A4               	movwf	getBit@n
  5791  04F7  00A5               	movwf	getBit@n+1
  5792  04F8  318D  2547  3184   	fcall	_getBit
  5793  04FB  0020               	movlb	0	; select bank0
  5794  04FC  073C               	addwf	??_DEcrypt+16,w
  5795  04FD  0084               	movwf	4
  5796  04FE  083D               	movf	??_DEcrypt+17,w
  5797  04FF  1803               	skipnc
  5798  0500  0A3D               	incf	??_DEcrypt+17,w
  5799  0501  0085               	movwf	5
  5800  0502  0800               	movf	0,w	;code access
  5801  0503  00BE               	movwf	??_DEcrypt+18
  5802  0504  083E               	movf	??_DEcrypt+18,w
  5803  0505  00C0               	movwf	DEcrypt@bitk
  5804                           
  5805                           ;keeloq.c: 85: bitk[1] = getBit(source, 15);
  5806  0506  0846               	movf	DEcrypt@source,w
  5807  0507  00A2               	movwf	getBit@source
  5808  0508  3000               	movlw	0
  5809  0509  00A3               	movwf	getBit@source+1
  5810  050A  300F               	movlw	15
  5811  050B  00A4               	movwf	getBit@n
  5812  050C  3000               	movlw	0
  5813  050D  00A5               	movwf	getBit@n+1
  5814  050E  318D  2547  3184   	fcall	_getBit
  5815  0511  0020               	movlb	0	; select bank0
  5816  0512  00AC               	movwf	??_DEcrypt
  5817  0513  082C               	movf	??_DEcrypt,w
  5818  0514  00C1               	movwf	DEcrypt@bitk+1
  5819                           
  5820                           ;keeloq.c: 86: bitk[2] = getBit(source, 31);
  5821  0515  0846               	movf	DEcrypt@source,w
  5822  0516  00A2               	movwf	getBit@source
  5823  0517  3000               	movlw	0
  5824  0518  00A3               	movwf	getBit@source+1
  5825  0519  301F               	movlw	31
  5826  051A  00A4               	movwf	getBit@n
  5827  051B  3000               	movlw	0
  5828  051C  00A5               	movwf	getBit@n+1
  5829  051D  318D  2547  3184   	fcall	_getBit
  5830  0520  0020               	movlb	0	; select bank0
  5831  0521  00AC               	movwf	??_DEcrypt
  5832  0522  082C               	movf	??_DEcrypt,w
  5833  0523  00C2               	movwf	DEcrypt@bitk+2
  5834                           
  5835                           ;keeloq.c: 87: bitk[3] = getBit(_key, (527-index)%64);
  5836  0524  082B               	movf	DEcrypt@_key+1,w
  5837  0525  00A3               	movwf	getBit@source+1
  5838  0526  082A               	movf	DEcrypt@_key,w
  5839  0527  00A2               	movwf	getBit@source
  5840  0528  0944               	comf	DEcrypt@index,w
  5841  0529  00AC               	movwf	??_DEcrypt
  5842  052A  0945               	comf	DEcrypt@index+1,w
  5843  052B  00AD               	movwf	??_DEcrypt+1
  5844  052C  0AAC               	incf	??_DEcrypt,f
  5845  052D  1903               	skipnz
  5846  052E  0AAD               	incf	??_DEcrypt+1,f
  5847  052F  082C               	movf	??_DEcrypt,w
  5848  0530  3E0F               	addlw	15
  5849  0531  00AE               	movwf	??_DEcrypt+2
  5850  0532  3002               	movlw	2
  5851  0533  3D2D               	addwfc	??_DEcrypt+1,w
  5852  0534  00AF               	movwf	??_DEcrypt+3
  5853  0535  303F               	movlw	63
  5854  0536  052E               	andwf	??_DEcrypt+2,w
  5855  0537  00A4               	movwf	getBit@n
  5856  0538  3000               	movlw	0
  5857  0539  052F               	andwf	??_DEcrypt+3,w
  5858  053A  00A5               	movwf	getBit@n+1
  5859  053B  318D  2547  3184   	fcall	_getBit
  5860  053E  0020               	movlb	0	; select bank0
  5861  053F  00B0               	movwf	??_DEcrypt+4
  5862  0540  0830               	movf	??_DEcrypt+4,w
  5863  0541  00C3               	movwf	DEcrypt@bitk+3
  5864                           
  5865                           ;keeloq.c: 88: res = bitk[0]^bitk[1]^bitk[2]^bitk[3];
  5866  0542  0841               	movf	DEcrypt@bitk+1,w
  5867  0543  0642               	xorwf	DEcrypt@bitk+2,w
  5868  0544  0643               	xorwf	DEcrypt@bitk+3,w
  5869  0545  0640               	xorwf	DEcrypt@bitk,w
  5870  0546  00AC               	movwf	??_DEcrypt
  5871  0547  082C               	movf	??_DEcrypt,w
  5872  0548  00BF               	movwf	DEcrypt@res
  5873                           
  5874                           ;keeloq.c: 89: source[3] = (source[3]<<1) | (source[2]>>7);
  5875  0549  0846               	movf	DEcrypt@source,w
  5876  054A  3E02               	addlw	2
  5877  054B  0086               	movwf	6
  5878  054C  0187               	clrf	7
  5879  054D  0801               	movf	1,w
  5880  054E  00AC               	movwf	??_DEcrypt
  5881  054F  3007               	movlw	7
  5882  0550                     u2215:	
  5883  0550  36AC               	lsrf	??_DEcrypt,f
  5884  0551  0B89               	decfsz	9,f
  5885  0552  2D50               	goto	u2215
  5886  0553  0846               	movf	DEcrypt@source,w
  5887  0554  3E03               	addlw	3
  5888  0555  0086               	movwf	6
  5889  0556  0187               	clrf	7
  5890  0557  3501               	lslf	1,w
  5891  0558  042C               	iorwf	??_DEcrypt,w
  5892  0559  00AD               	movwf	??_DEcrypt+1
  5893  055A  0846               	movf	DEcrypt@source,w
  5894  055B  3E03               	addlw	3
  5895  055C  0086               	movwf	6
  5896  055D  0187               	clrf	7
  5897  055E  082D               	movf	??_DEcrypt+1,w
  5898  055F  0081               	movwf	1
  5899                           
  5900                           ;keeloq.c: 90: source[2] = (source[2]<<1) | (source[1]>>7);
  5901  0560  0A46               	incf	DEcrypt@source,w
  5902  0561  0086               	movwf	6
  5903  0562  0187               	clrf	7
  5904  0563  0801               	movf	1,w
  5905  0564  00AC               	movwf	??_DEcrypt
  5906  0565  3007               	movlw	7
  5907  0566                     u2225:	
  5908  0566  36AC               	lsrf	??_DEcrypt,f
  5909  0567  0B89               	decfsz	9,f
  5910  0568  2D66               	goto	u2225
  5911  0569  0846               	movf	DEcrypt@source,w
  5912  056A  3E02               	addlw	2
  5913  056B  0086               	movwf	6
  5914  056C  0187               	clrf	7
  5915  056D  3501               	lslf	1,w
  5916  056E  042C               	iorwf	??_DEcrypt,w
  5917  056F  00AD               	movwf	??_DEcrypt+1
  5918  0570  0846               	movf	DEcrypt@source,w
  5919  0571  3E02               	addlw	2
  5920  0572  0086               	movwf	6
  5921  0573  0187               	clrf	7
  5922  0574  082D               	movf	??_DEcrypt+1,w
  5923  0575  0081               	movwf	1
  5924                           
  5925                           ;keeloq.c: 91: source[1] = (source[1]<<1) | (source[0]>>7);
  5926  0576  0846               	movf	DEcrypt@source,w
  5927  0577  0086               	movwf	6
  5928  0578  0187               	clrf	7
  5929  0579  0801               	movf	1,w
  5930  057A  00AC               	movwf	??_DEcrypt
  5931  057B  3007               	movlw	7
  5932  057C                     u2235:	
  5933  057C  36AC               	lsrf	??_DEcrypt,f
  5934  057D  0B89               	decfsz	9,f
  5935  057E  2D7C               	goto	u2235
  5936  057F  0A46               	incf	DEcrypt@source,w
  5937  0580  0086               	movwf	6
  5938  0581  0187               	clrf	7
  5939  0582  3501               	lslf	1,w
  5940  0583  042C               	iorwf	??_DEcrypt,w
  5941  0584  00AD               	movwf	??_DEcrypt+1
  5942  0585  0A46               	incf	DEcrypt@source,w
  5943  0586  0086               	movwf	6
  5944  0587  0187               	clrf	7
  5945  0588  082D               	movf	??_DEcrypt+1,w
  5946  0589  0081               	movwf	1
  5947                           
  5948                           ;keeloq.c: 92: source[0] = (source[0]<<1) | (res);
  5949  058A  0846               	movf	DEcrypt@source,w
  5950  058B  0086               	movwf	6
  5951  058C  0187               	clrf	7
  5952  058D  3501               	lslf	1,w
  5953  058E  043F               	iorwf	DEcrypt@res,w
  5954  058F  00AC               	movwf	??_DEcrypt
  5955  0590  0846               	movf	DEcrypt@source,w
  5956  0591  0086               	movwf	6
  5957  0592  0187               	clrf	7
  5958  0593  082C               	movf	??_DEcrypt,w
  5959  0594  0081               	movwf	1
  5960  0595  3001               	movlw	1
  5961  0596  07C4               	addwf	DEcrypt@index,f
  5962  0597  3000               	movlw	0
  5963  0598  3DC5               	addwfc	DEcrypt@index+1,f
  5964  0599  2C81               	goto	L5
  5965  059A                     __end_of_DEcrypt:	
  5966                           ;keeloq.c: 93: }
  5967                           ;keeloq.c: 94: return source;
  5968                           ;	Return value of _DEcrypt is never used
  5969                           
  5970                           
  5971                           	psect	text25
  5972  0D47                     __ptext25:	
  5973 ;; *************** function _getBit *****************
  5974 ;; Defined at:
  5975 ;;		line 105 in file "source/keeloq.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  source          2    2[BANK0 ] PTR unsigned char 
  5978 ;;		 -> CUSTOMER_code(8), remote_learn@lrn_buf(8), remote_learn@rf_buf(8), remote_hits@rf_buf(8), 
  5979 ;;		 -> remoter(34), 
  5980 ;;  n               2    4[BANK0 ] unsigned short 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      unsigned char 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5992 ;;      Params:         0       4       0       0
  5993 ;;      Locals:         0       0       0       0
  5994 ;;      Temps:          0       4       0       0
  5995 ;;      Totals:         0       8       0       0
  5996 ;;Total ram usage:        8 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    3
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_DEcrypt
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function _getBit
  6008  0D47                     _getBit:	
  6009                           
  6010                           ;keeloq.c: 112: return (source[n / 8] & (1 << (n % 8))) ? 1 : 0;
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in _getBit: [wreg-fsr0h+status,2+status,0+pclath]
  6014  0D47  0020               	movlb	0	; select bank0
  6015  0D48  0825               	movf	getBit@n+1,w
  6016  0D49  00A7               	movwf	??_getBit+1
  6017  0D4A  0824               	movf	getBit@n,w
  6018  0D4B  00A6               	movwf	??_getBit
  6019  0D4C  36A7               	lsrf	??_getBit+1,f
  6020  0D4D  0CA6               	rrf	??_getBit,f
  6021  0D4E  36A7               	lsrf	??_getBit+1,f
  6022  0D4F  0CA6               	rrf	??_getBit,f
  6023  0D50  36A7               	lsrf	??_getBit+1,f
  6024  0D51  0CA6               	rrf	??_getBit,f
  6025  0D52  0822               	movf	getBit@source,w
  6026  0D53  0726               	addwf	??_getBit,w
  6027  0D54  0084               	movwf	4
  6028  0D55  0823               	movf	getBit@source+1,w
  6029  0D56  3D27               	addwfc	??_getBit+1,w
  6030  0D57  0085               	movwf	5
  6031  0D58  0800               	movf	0,w	;code access
  6032  0D59  00A8               	movwf	??_getBit+2
  6033  0D5A  3001               	movlw	1
  6034  0D5B  00A9               	movwf	??_getBit+3
  6035  0D5C  0824               	movf	getBit@n,w
  6036  0D5D  3907               	andlw	7
  6037  0D5E  0A89               	incf	9,f
  6038  0D5F  2D61               	goto	u2114
  6039  0D60                     u2115:	
  6040  0D60  35A9               	lslf	??_getBit+3,f
  6041  0D61                     u2114:	
  6042  0D61  0B89               	decfsz	9,f
  6043  0D62  2D60               	goto	u2115
  6044  0D63  0829               	movf	??_getBit+3,w
  6045  0D64  0528               	andwf	??_getBit+2,w
  6046  0D65  1903               	btfsc	3,2
  6047  0D66  2D69               	goto	u2120
  6048  0D67  3001               	movlw	1
  6049  0D68  0008               	return
  6050  0D69                     u2120:	
  6051  0D69  3000               	movlw	0
  6052  0D6A  0008               	return
  6053  0D6B                     __end_of_getBit:	
  6054                           
  6055                           	psect	text26
  6056  0CE6                     __ptext26:	
  6057 ;; *************** function _led_ctrl *****************
  6058 ;; Defined at:
  6059 ;;		line 45 in file "source/ledTask.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  period          2    2[BANK0 ] unsigned short 
  6062 ;;  times           1    4[BANK0 ] unsigned char 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6074 ;;      Params:         0       3       0       0
  6075 ;;      Locals:         0       0       0       0
  6076 ;;      Temps:          0       1       0       0
  6077 ;;      Totals:         0       4       0       0
  6078 ;;Total ram usage:        4 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    3
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_sys_power_on
  6085 ;;		_standby
  6086 ;;		_door_transmit
  6087 ;;		_wifi_transmit
  6088 ;;		_match_code
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           
  6093                           ;psect for function _led_ctrl
  6094  0CE6                     _led_ctrl:	
  6095                           
  6096                           ;ledTask.c: 46: if (0 != period) RA4 = 0;
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _led_ctrl: [wreg+status,2+status,0]
  6100  0CE6  0020               	movlb	0	; select bank0
  6101  0CE7  0822               	movf	led_ctrl@period,w
  6102  0CE8  0423               	iorwf	led_ctrl@period+1,w
  6103  0CE9  1903               	btfsc	3,2
  6104  0CEA  2CED               	goto	l40
  6105  0CEB  120C               	bcf	12,4	;volatile
  6106  0CEC  2CEE               	goto	l2411
  6107  0CED                     l40:	
  6108                           
  6109                           ;ledTask.c: 47: else RA4 = 1;;
  6110  0CED  160C               	bsf	12,4	;volatile
  6111  0CEE                     l2411:	
  6112                           
  6113                           ;ledTask.c: 48: st_led.times = times;
  6114  0CEE  0824               	movf	led_ctrl@times,w
  6115  0CEF  00A5               	movwf	??_led_ctrl
  6116  0CF0  0825               	movf	??_led_ctrl,w
  6117  0CF1  0021               	movlb	1	; select bank1
  6118  0CF2  00A5               	movwf	(_st_led^(0+128)+5)
  6119                           
  6120                           ;ledTask.c: 49: st_led.times_cnt = times;
  6121  0CF3  0020               	movlb	0	; select bank0
  6122  0CF4  0824               	movf	led_ctrl@times,w
  6123  0CF5  00A5               	movwf	??_led_ctrl
  6124  0CF6  0825               	movf	??_led_ctrl,w
  6125  0CF7  0021               	movlb	1	; select bank1
  6126  0CF8  00A6               	movwf	(_st_led^(0+128)+6)
  6127                           
  6128                           ;ledTask.c: 50: st_led.period = period;
  6129  0CF9  0020               	movlb	0	; select bank0
  6130  0CFA  0823               	movf	led_ctrl@period+1,w
  6131  0CFB  0021               	movlb	1	; select bank1
  6132  0CFC  00A2               	movwf	((_st_led+1)^(0+128)+1)
  6133  0CFD  0020               	movlb	0	; select bank0
  6134  0CFE  0822               	movf	led_ctrl@period,w
  6135  0CFF  0021               	movlb	1	; select bank1
  6136  0D00  00A1               	movwf	(_st_led^(0+128)+1)
  6137                           
  6138                           ;ledTask.c: 51: st_led.count = 0;
  6139  0D01  01A3               	clrf	(_st_led^(0+128)+3)
  6140  0D02  01A4               	clrf	((_st_led+1)^(0+128)+3)
  6141                           
  6142                           ;ledTask.c: 52: st_led.stats = (0);
  6143  0D03  01A0               	clrf	_st_led^(0+128)
  6144  0D04  0008               	return
  6145  0D05                     __end_of_led_ctrl:	
  6146                           
  6147                           	psect	text27
  6148  0E23                     __ptext27:	
  6149 ;; *************** function _equipmet_uart_send *****************
  6150 ;; Defined at:
  6151 ;;		line 337 in file "source/main.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  data            1    wreg     unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  data            1    8[BANK0 ] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, pclath, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6165 ;;      Params:         0       0       0       0
  6166 ;;      Locals:         0       1       0       0
  6167 ;;      Temps:          0       1       0       0
  6168 ;;      Totals:         0       2       0       0
  6169 ;;Total ram usage:        2 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    5
  6172 ;; This function calls:
  6173 ;;		_Uart1SendByte
  6174 ;;		_equipment_type
  6175 ;; This function is called by:
  6176 ;;		_standby
  6177 ;;		_door_transmit
  6178 ;;		_wifi_transmit
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _equipmet_uart_send
  6184  0E23                     _equipmet_uart_send:	
  6185                           
  6186                           ;incstack = 0
  6187                           ; Regs used in _equipmet_uart_send: [wreg+status,2+status,0+pclath+cstack]
  6188                           ;equipmet_uart_send@data stored from wreg
  6189  0E23  0020               	movlb	0	; select bank0
  6190  0E24  00A8               	movwf	equipmet_uart_send@data
  6191                           
  6192                           ;main.c: 338: if ((0) == equipment_type())
  6193  0E25  318C  24AF  318E   	fcall	_equipment_type
  6194  0E28  3A00               	xorlw	0
  6195  0E29  1D03               	skipz
  6196  0E2A  2E30               	goto	l2509
  6197                           
  6198                           ;main.c: 339: Uart1SendByte(data);
  6199  0E2B  0020               	movlb	0	; select bank0
  6200  0E2C  0828               	movf	equipmet_uart_send@data,w
  6201  0E2D  318C  2496         	fcall	_Uart1SendByte
  6202  0E2F  0008               	return
  6203  0E30                     l2509:	
  6204                           
  6205                           ;main.c: 340: else {
  6206                           ;main.c: 341: if ((0x00) == data)
  6207  0E30  0020               	movlb	0	; select bank0
  6208  0E31  0828               	movf	equipmet_uart_send@data,w
  6209  0E32  1D03               	btfss	3,2
  6210  0E33  2E36               	goto	l2513
  6211                           
  6212                           ;main.c: 342: data = (0x03);
  6213  0E34  3003               	movlw	3
  6214  0E35  2E40               	goto	L6
  6215  0E36                     l2513:	
  6216                           
  6217                           ;main.c: 344: else if ((0x03) == data)
  6218  0E36  3003               	movlw	3
  6219  0E37  0628               	xorwf	equipmet_uart_send@data,w
  6220  0E38  1D03               	btfss	3,2
  6221  0E39  2E3C               	goto	l2517
  6222                           
  6223                           ;main.c: 345: data = (0x00);
  6224  0E3A  01A8               	clrf	equipmet_uart_send@data
  6225  0E3B  2E4A               	goto	l2525
  6226  0E3C                     l2517:	
  6227                           
  6228                           ;main.c: 347: else if ((0x01) == data)
  6229  0E3C  0328               	decf	equipmet_uart_send@data,w
  6230  0E3D  1D03               	btfss	3,2
  6231  0E3E  2E44               	goto	l2521
  6232                           
  6233                           ;main.c: 348: data = (0x02);
  6234  0E3F  3002               	movlw	2
  6235  0E40                     L6:	
  6236  0E40  00A7               	movwf	??_equipmet_uart_send
  6237  0E41  0827               	movf	??_equipmet_uart_send,w
  6238  0E42  00A8               	movwf	equipmet_uart_send@data
  6239  0E43  2E4A               	goto	l2525
  6240  0E44                     l2521:	
  6241                           
  6242                           ;main.c: 350: else if ((0x02) == data)
  6243  0E44  3002               	movlw	2
  6244  0E45  0628               	xorwf	equipmet_uart_send@data,w
  6245  0E46  1D03               	btfss	3,2
  6246  0E47  2E4A               	goto	l2525
  6247                           
  6248                           ;main.c: 351: data = (0x01);
  6249  0E48  01A8               	clrf	equipmet_uart_send@data
  6250  0E49  0AA8               	incf	equipmet_uart_send@data,f
  6251  0E4A                     l2525:	
  6252                           
  6253                           ;main.c: 354: Uart1SendByte(0x01);
  6254  0E4A  3001               	movlw	1
  6255  0E4B  318C  2496  318E   	fcall	_Uart1SendByte
  6256                           
  6257                           ;main.c: 355: Uart1SendByte(data);
  6258  0E4E  0020               	movlb	0	; select bank0
  6259  0E4F  0828               	movf	equipmet_uart_send@data,w
  6260  0E50  318C  2496  318E   	fcall	_Uart1SendByte
  6261                           
  6262                           ;main.c: 356: Uart1SendByte(data + 0x01);
  6263  0E53  0020               	movlb	0	; select bank0
  6264  0E54  0828               	movf	equipmet_uart_send@data,w
  6265  0E55  3E01               	addlw	1
  6266  0E56  318C  2496         	fcall	_Uart1SendByte
  6267  0E58  0008               	return
  6268  0E59                     __end_of_equipmet_uart_send:	
  6269                           
  6270                           	psect	text28
  6271  0CAF                     __ptext28:	
  6272 ;; *************** function _equipment_type *****************
  6273 ;; Defined at:
  6274 ;;		line 304 in file "source/remote.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      unsigned char 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6288 ;;      Params:         0       0       0       0
  6289 ;;      Locals:         0       0       0       0
  6290 ;;      Temps:          0       1       0       0
  6291 ;;      Totals:         0       1       0       0
  6292 ;;Total ram usage:        1 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    3
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_standby
  6299 ;;		_equipmet_uart_send
  6300 ;;		_remote_hits
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _equipment_type
  6306  0CAF                     _equipment_type:	
  6307                           
  6308                           ;remote.c: 305: if ((0x00 == remoter.sn_save[4]) && (0x00 == remoter.sn_save[5]) && (0x0
      +                          0 == remoter.sn_save[6]) && (0x00 == remoter.sn_save[7])) {
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in _equipment_type: [wreg+status,2+status,0]
  6312  0CAF  0021               	movlb	1	; select bank1
  6313  0CB0  083B               	movf	(_remoter^(0+128)+20),w
  6314  0CB1  1D03               	btfss	3,2
  6315  0CB2  2CBE               	goto	l2301
  6316  0CB3  083C               	movf	(_remoter^(0+128)+21),w
  6317  0CB4  1D03               	btfss	3,2
  6318  0CB5  2CBE               	goto	l2301
  6319  0CB6  083D               	movf	(_remoter^(0+128)+22),w
  6320  0CB7  1D03               	btfss	3,2
  6321  0CB8  2CBE               	goto	l2301
  6322  0CB9  083E               	movf	(_remoter^(0+128)+23),w
  6323  0CBA  1D03               	btfss	3,2
  6324  0CBB  2CBE               	goto	l2301
  6325                           
  6326                           ;remote.c: 306: return (2);
  6327  0CBC  3002               	movlw	2
  6328  0CBD  0008               	return
  6329  0CBE                     l2301:	
  6330                           
  6331                           ;remote.c: 307: }
  6332                           ;remote.c: 309: if ((remoter.sn_save[7] & 0x0f) < 8) return (0);
  6333  0CBE  300F               	movlw	15
  6334  0CBF  053E               	andwf	(_remoter^(0+128)+23),w
  6335  0CC0  0020               	movlb	0	; select bank0
  6336  0CC1  00A2               	movwf	??_equipment_type
  6337  0CC2  3008               	movlw	8
  6338  0CC3  0222               	subwf	??_equipment_type,w
  6339  0CC4  1803               	skipnc
  6340  0CC5  2CC8               	goto	l2309
  6341  0CC6  3000               	movlw	0
  6342  0CC7  0008               	return
  6343  0CC8                     l2309:	
  6344                           
  6345                           ;remote.c: 310: else return (1);
  6346  0CC8  3001               	movlw	1
  6347  0CC9  0008               	return
  6348  0CCA                     __end_of_equipment_type:	
  6349                           
  6350                           	psect	text29
  6351  0C96                     __ptext29:	
  6352 ;; *************** function _Uart1SendByte *****************
  6353 ;; Defined at:
  6354 ;;		line 73 in file "source/usart.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  Byte            1    wreg     unsigned char 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  Byte            1    6[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6368 ;;      Params:         0       0       0       0
  6369 ;;      Locals:         0       1       0       0
  6370 ;;      Temps:          0       1       0       0
  6371 ;;      Totals:         0       2       0       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    4
  6375 ;; This function calls:
  6376 ;;		_even_check
  6377 ;; This function is called by:
  6378 ;;		_equipmet_uart_send
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function _Uart1SendByte
  6384  0C96                     _Uart1SendByte:	
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in _Uart1SendByte: [wreg+status,2+status,0+pclath+cstack]
  6388                           ;Uart1SendByte@Byte stored from wreg
  6389  0C96  0020               	movlb	0	; select bank0
  6390  0C97  00A6               	movwf	Uart1SendByte@Byte
  6391  0C98                     l467:	
  6392                           ;usart.c: 74: while(!TRMT);
  6393                           
  6394  0C98  0023               	movlb	3	; select bank3
  6395  0C99  1C9E               	btfss	30,1	;volatile
  6396  0C9A  2C98               	goto	l467
  6397                           
  6398                           ;usart.c: 75: TXREG = Byte ;
  6399  0C9B  0020               	movlb	0	; select bank0
  6400  0C9C  0826               	movf	Uart1SendByte@Byte,w
  6401  0C9D  0023               	movlb	3	; select bank3
  6402  0C9E  009A               	movwf	26	;volatile
  6403                           
  6404                           ;usart.c: 76: TX9D = even_check(Byte);
  6405  0C9F  0020               	movlb	0	; select bank0
  6406  0CA0  0826               	movf	Uart1SendByte@Byte,w
  6407  0CA1  318C  2467  318C   	fcall	_even_check
  6408  0CA4  0020               	movlb	0	; select bank0
  6409  0CA5  00A5               	movwf	??_Uart1SendByte
  6410  0CA6  0C25               	rrf	??_Uart1SendByte,w
  6411  0CA7  1C03               	btfss	3,0
  6412  0CA8  2CAC               	goto	u2350
  6413  0CA9  0023               	movlb	3	; select bank3
  6414  0CAA  141E               	bsf	30,0	;volatile
  6415  0CAB  0008               	return
  6416  0CAC                     u2350:	
  6417  0CAC  0023               	movlb	3	; select bank3
  6418  0CAD  101E               	bcf	30,0	;volatile
  6419  0CAE  0008               	return
  6420  0CAF                     __end_of_Uart1SendByte:	
  6421                           
  6422                           	psect	text30
  6423  0C67                     __ptext30:	
  6424 ;; *************** function _even_check *****************
  6425 ;; Defined at:
  6426 ;;		line 102 in file "source/usart.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  data            1    wreg     unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  data            1    4[BANK0 ] unsigned char 
  6431 ;;  res             1    3[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      unsigned char 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6441 ;;      Params:         0       0       0       0
  6442 ;;      Locals:         0       2       0       0
  6443 ;;      Temps:          0       1       0       0
  6444 ;;      Totals:         0       3       0       0
  6445 ;;Total ram usage:        3 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    3
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_Uart1SendByte
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _even_check
  6457  0C67                     _even_check:	
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _even_check: [wreg+status,2+status,0]
  6461                           ;even_check@data stored from wreg
  6462  0C67  0020               	movlb	0	; select bank0
  6463  0C68  00A4               	movwf	even_check@data
  6464  0C69                     l473:	
  6465                           ;usart.c: 103: u8 res;
  6466                           ;usart.c: 104: while (data) {
  6467                           
  6468  0C69  0824               	movf	even_check@data,w
  6469  0C6A  1903               	btfsc	3,2
  6470  0C6B  2C7C               	goto	l2263
  6471                           
  6472                           ;usart.c: 105: res = !res;
  6473  0C6C  0823               	movf	even_check@res,w
  6474  0C6D  1D03               	btfss	3,2
  6475  0C6E  2C71               	goto	u2170
  6476  0C6F  3001               	movlw	1
  6477  0C70  2C72               	goto	u2180
  6478  0C71                     u2170:	
  6479  0C71  3000               	movlw	0
  6480  0C72                     u2180:	
  6481  0C72  00A2               	movwf	??_even_check
  6482  0C73  0822               	movf	??_even_check,w
  6483  0C74  00A3               	movwf	even_check@res
  6484                           
  6485                           ;usart.c: 106: data = data & (data - 1);
  6486  0C75  0824               	movf	even_check@data,w
  6487  0C76  3EFF               	addlw	255
  6488  0C77  0524               	andwf	even_check@data,w
  6489  0C78  00A2               	movwf	??_even_check
  6490  0C79  0822               	movf	??_even_check,w
  6491  0C7A  00A4               	movwf	even_check@data
  6492  0C7B  2C69               	goto	l473
  6493  0C7C                     l2263:	
  6494                           
  6495                           ;usart.c: 107: }
  6496                           ;usart.c: 108: return res;
  6497  0C7C  0823               	movf	even_check@res,w
  6498  0C7D  0008               	return
  6499  0C7E                     __end_of_even_check:	
  6500                           
  6501                           	psect	text31
  6502  0C1B                     __ptext31:	
  6503 ;; *************** function _clear_ack *****************
  6504 ;; Defined at:
  6505 ;;		line 40 in file "source/timer.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      unsigned char 
  6512 ;; Registers used:
  6513 ;;		status,2
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6519 ;;      Params:         0       0       0       0
  6520 ;;      Locals:         0       0       0       0
  6521 ;;      Temps:          0       0       0       0
  6522 ;;      Totals:         0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    3
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_standby
  6530 ;;		_door_transmit
  6531 ;;		_wifi_transmit
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function _clear_ack
  6537  0C1B                     _clear_ack:	
  6538                           
  6539                           ;timer.c: 41: ACK = 0;
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _clear_ack: [status,2]
  6543  0C1B  0020               	movlb	0	; select bank0
  6544  0C1C  01E2               	clrf	_ACK
  6545  0C1D  0008               	return
  6546  0C1E                     __end_of_clear_ack:	
  6547                           
  6548                           	psect	intentry
  6549  0004                     __pintentry:	
  6550 ;; *************** function _ISR *****************
  6551 ;; Defined at:
  6552 ;;		line 20 in file "source/timer.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6566 ;;      Params:         0       0       0       0
  6567 ;;      Locals:         0       0       0       0
  6568 ;;      Temps:          0       2       0       0
  6569 ;;      Totals:         0       2       0       0
  6570 ;;Total ram usage:        2 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    2
  6573 ;; This function calls:
  6574 ;;		_remote_timer_task
  6575 ;; This function is called by:
  6576 ;;		Interrupt level 1
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580  0004                     _ISR:	
  6581                           
  6582                           ;incstack = 0
  6583  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6584                           
  6585                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6586  0005  3180               	pagesel	$
  6587  0006  0020               	movlb	0	; select bank0
  6588  0007  087F               	movf	127,w
  6589  0008  00A1               	movwf	??_ISR+1
  6590                           
  6591                           ;timer.c: 21: if(T0IF==1) {
  6592  0009  1D0B               	btfss	11,2	;volatile
  6593  000A  281B               	goto	i1l3449
  6594                           
  6595                           ;timer.c: 22: TMR0=208;
  6596  000B  30D0               	movlw	208
  6597  000C  0095               	movwf	21	;volatile
  6598                           
  6599                           ;timer.c: 23: TMR0IF=0;
  6600  000D  110B               	bcf	11,2	;volatile
  6601                           
  6602                           ;timer.c: 24: T0IF=0;
  6603  000E  110B               	bcf	11,2	;volatile
  6604                           
  6605                           ;timer.c: 25: remote_timer_task();
  6606  000F  3185  259A  3180   	fcall	_remote_timer_task
  6607                           
  6608                           ;timer.c: 26: if (sys_cnt < 50) sys_cnt++;
  6609  0012  3032               	movlw	50
  6610  0013  0020               	movlb	0	; select bank0
  6611  0014  0263               	subwf	_sys_cnt,w
  6612  0015  1803               	skipnc
  6613  0016  281B               	goto	i1l3449
  6614  0017  3001               	movlw	1
  6615  0018  00A0               	movwf	??_ISR
  6616  0019  0820               	movf	??_ISR,w
  6617  001A  07E3               	addwf	_sys_cnt,f
  6618  001B                     i1l3449:	
  6619                           
  6620                           ;timer.c: 27: }
  6621                           ;timer.c: 29: if(RCIF == 1){
  6622  001B  1E91               	btfss	17,5	;volatile
  6623  001C  2834               	goto	i1l402
  6624                           
  6625                           ;timer.c: 30: if (RCREG > 0x75) ACK = 1;
  6626  001D  3076               	movlw	118
  6627  001E  0023               	movlb	3	; select bank3
  6628  001F  0219               	subwf	25,w	;volatile
  6629  0020  1C03               	skipc
  6630  0021  2825               	goto	i1l3455
  6631  0022  0020               	movlb	0	; select bank0
  6632  0023  01E2               	clrf	_ACK
  6633  0024  0AE2               	incf	_ACK,f
  6634  0025                     i1l3455:	
  6635                           
  6636                           ;timer.c: 31: if ((0xff == RCREG)|| (0xfe == RCREG)) ACK_data = RCREG;
  6637  0025  0023               	movlb	3	; select bank3
  6638  0026  0A19               	incf	25,w	;volatile
  6639  0027  1903               	btfsc	3,2
  6640  0028  282D               	goto	i1l3459
  6641  0029  30FE               	movlw	254
  6642  002A  0619               	xorwf	25,w	;volatile
  6643  002B  1D03               	btfss	3,2
  6644  002C  2832               	goto	i1l3461
  6645  002D                     i1l3459:	
  6646  002D  0819               	movf	25,w	;volatile
  6647  002E  0020               	movlb	0	; select bank0
  6648  002F  00A0               	movwf	??_ISR
  6649  0030  0820               	movf	??_ISR,w
  6650  0031  00E1               	movwf	_ACK_data
  6651  0032                     i1l3461:	
  6652                           
  6653                           ;timer.c: 32: RCIF = 0;
  6654  0032  0020               	movlb	0	; select bank0
  6655  0033  1291               	bcf	17,5	;volatile
  6656  0034                     i1l402:	
  6657  0034  0821               	movf	??_ISR+1,w
  6658  0035  00FF               	movwf	127
  6659  0036  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6660  0037  0009               	retfie
  6661  0038                     __end_of_ISR:	
  6662                           
  6663                           	psect	text33
  6664  059A                     __ptext33:	
  6665 ;; *************** function _remote_timer_task *****************
  6666 ;; Defined at:
  6667 ;;		line 35 in file "source/remote.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  btidx           1   13[COMMON] unsigned char 
  6672 ;;  byidx           1   12[COMMON] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6682 ;;      Params:         0       0       0       0
  6683 ;;      Locals:         2       0       0       0
  6684 ;;      Temps:          3       0       0       0
  6685 ;;      Totals:         5       0       0       0
  6686 ;;Total ram usage:        5 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    1
  6689 ;; This function calls:
  6690 ;;		___awdiv
  6691 ;; This function is called by:
  6692 ;;		_ISR
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _remote_timer_task
  6698  059A                     _remote_timer_task:	
  6699                           
  6700                           ;remote.c: 36: static U08ET lv_cnt, tp_cnt;
  6701                           ;remote.c: 37: U08ET byidx,btidx;
  6702                           ;remote.c: 38: remoter.st_last = remoter.st_curt;
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _remote_timer_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6706  059A  0021               	movlb	1	; select bank1
  6707  059B  1CA7               	btfss	_remoter^(0+128),1
  6708  059C  2DA0               	goto	u392_20
  6709  059D  0021               	movlb	1	; select bank1
  6710  059E  1427               	bsf	_remoter^(0+128),0
  6711  059F  2DA2               	goto	u393_24
  6712  05A0                     u392_20:	
  6713  05A0  0021               	movlb	1	; select bank1
  6714  05A1  1027               	bcf	_remoter^(0+128),0
  6715  05A2                     u393_24:	
  6716                           
  6717                           ;remote.c: 39: remoter.st_curt = (U08ET)RA5;
  6718  05A2  10A7               	bcf	_remoter^(0+128),1
  6719  05A3  0020               	movlb	0	; select bank0
  6720  05A4  1E8C               	btfss	12,5	;volatile
  6721  05A5  2DA8               	goto	i1l3363
  6722  05A6  0021               	movlb	1	; select bank1
  6723  05A7  14A7               	bsf	_remoter^(0+128),1
  6724  05A8                     i1l3363:	
  6725                           
  6726                           ;remote.c: 40: if (remoter.st_last == remoter.st_curt) {
  6727  05A8  0021               	movlb	1	; select bank1
  6728  05A9  1CA7               	btfss	_remoter^(0+128),1
  6729  05AA  2DAD               	goto	u395_20
  6730  05AB  3001               	movlw	1
  6731  05AC  2DAE               	goto	u395_22
  6732  05AD                     u395_20:	
  6733  05AD  3000               	movlw	0
  6734  05AE                     u395_22:	
  6735  05AE  00F9               	movwf	??_remote_timer_task
  6736  05AF  1C27               	btfss	_remoter^(0+128),0
  6737  05B0  2DB3               	goto	u396_20
  6738  05B1  3001               	movlw	1
  6739  05B2  2DB4               	goto	u396_22
  6740  05B3                     u396_20:	
  6741  05B3  3000               	movlw	0
  6742  05B4                     u396_22:	
  6743  05B4  0679               	xorwf	??_remote_timer_task,w
  6744  05B5  1D03               	skipz
  6745  05B6  2DBD               	goto	i1l3367
  6746                           
  6747                           ;remote.c: 41: lv_cnt++;
  6748  05B7  3001               	movlw	1
  6749  05B8  00F9               	movwf	??_remote_timer_task
  6750  05B9  0879               	movf	??_remote_timer_task,w
  6751  05BA  0020               	movlb	0	; select bank0
  6752  05BB  07E5               	addwf	remote_timer_task@lv_cnt,f
  6753                           
  6754                           ;remote.c: 42: } else {
  6755  05BC  0008               	return
  6756  05BD                     i1l3367:	
  6757                           
  6758                           ;remote.c: 43: if ((1) == remoter.st_remo) {
  6759  05BD  0021               	movlb	1	; select bank1
  6760  05BE  0C27               	rrf	_remoter^(0+128),w
  6761  05BF  0C89               	rrf	9,f
  6762  05C0  393F               	andlw	63
  6763  05C1  3A01               	xorlw	1
  6764  05C2  1D03               	skipz
  6765  05C3  2DDE               	goto	i1l3383
  6766                           
  6767                           ;remote.c: 44: if ((1 == remoter.st_curt) && (lv_cnt >= (52)) && (lv_cnt<=(132))) {
  6768  05C4  1CA7               	btfss	_remoter^(0+128),1
  6769  05C5  2DD6               	goto	i1l3379
  6770  05C6  3034               	movlw	52
  6771  05C7  0020               	movlb	0	; select bank0
  6772  05C8  0265               	subwf	remote_timer_task@lv_cnt,w
  6773  05C9  1C03               	skipc
  6774  05CA  2DD6               	goto	i1l3379
  6775  05CB  3085               	movlw	133
  6776  05CC  0265               	subwf	remote_timer_task@lv_cnt,w
  6777  05CD  1803               	skipnc
  6778  05CE  2DD6               	goto	i1l3379
  6779                           
  6780                           ;remote.c: 45: remoter.st_remo = (2);
  6781  05CF  0021               	movlb	1	; select bank1
  6782  05D0  0827               	movf	_remoter^(0+128),w
  6783  05D1  3903               	andlw	-253
  6784  05D2  3808               	iorlw	8
  6785  05D3  00A7               	movwf	_remoter^(0+128)
  6786                           
  6787                           ;remote.c: 46: remoter.recvidx = 0;
  6788  05D4  01A8               	clrf	(_remoter^(0+128)+1)
  6789                           
  6790                           ;remote.c: 47: } else remoter.st_remo = (1);
  6791  05D5  2DDB               	goto	i1l3381
  6792  05D6                     i1l3379:	
  6793  05D6  0021               	movlb	1	; select bank1
  6794  05D7  0827               	movf	_remoter^(0+128),w
  6795  05D8  3903               	andlw	-253
  6796  05D9  3804               	iorlw	4
  6797  05DA  00A7               	movwf	_remoter^(0+128)
  6798  05DB                     i1l3381:	
  6799                           
  6800                           ;remote.c: 48: lv_cnt = 0;
  6801  05DB  0020               	movlb	0	; select bank0
  6802  05DC  01E5               	clrf	remote_timer_task@lv_cnt
  6803                           
  6804                           ;remote.c: 49: } else if ((2) == remoter.st_remo) {
  6805  05DD  0008               	return
  6806  05DE                     i1l3383:	
  6807  05DE  0021               	movlb	1	; select bank1
  6808  05DF  0C27               	rrf	_remoter^(0+128),w
  6809  05E0  0C89               	rrf	9,f
  6810  05E1  393F               	andlw	63
  6811  05E2  3A02               	xorlw	2
  6812  05E3  1D03               	skipz
  6813  05E4  0008               	return
  6814                           
  6815                           ;remote.c: 50: if (0 == remoter.st_curt) {
  6816  05E5  18A7               	btfsc	_remoter^(0+128),1
  6817  05E6  2E4A               	goto	i1l3415
  6818                           
  6819                           ;remote.c: 51: byidx = (U08ET)(remoter.recvidx / 8);
  6820  05E7  3008               	movlw	8
  6821  05E8  00F0               	movwf	___awdiv@divisor
  6822  05E9  3000               	movlw	0
  6823  05EA  00F1               	movwf	___awdiv@divisor+1
  6824  05EB  0828               	movf	(_remoter^(0+128)+1),w
  6825  05EC  00F9               	movwf	??_remote_timer_task
  6826  05ED  01FA               	clrf	??_remote_timer_task+1
  6827  05EE  0879               	movf	??_remote_timer_task,w
  6828  05EF  00F2               	movwf	___awdiv@dividend
  6829  05F0  087A               	movf	??_remote_timer_task+1,w
  6830  05F1  00F3               	movwf	___awdiv@dividend+1
  6831  05F2  318E  26E7  3185   	fcall	___awdiv
  6832  05F5  0870               	movf	?___awdiv,w
  6833  05F6  00FB               	movwf	??_remote_timer_task+2
  6834  05F7  087B               	movf	??_remote_timer_task+2,w
  6835  05F8  00FC               	movwf	remote_timer_task@byidx
  6836                           
  6837                           ;remote.c: 52: btidx = (U08ET)(remoter.recvidx % 8);
  6838  05F9  0021               	movlb	1	; select bank1
  6839  05FA  0828               	movf	(_remoter^(0+128)+1),w
  6840  05FB  3907               	andlw	7
  6841  05FC  00F9               	movwf	??_remote_timer_task
  6842  05FD  0879               	movf	??_remote_timer_task,w
  6843  05FE  00FD               	movwf	remote_timer_task@btidx
  6844                           
  6845                           ;remote.c: 53: if ((lv_cnt >= (4)) && (lv_cnt <= (10))) {
  6846  05FF  3004               	movlw	4
  6847  0600  0020               	movlb	0	; select bank0
  6848  0601  0265               	subwf	remote_timer_task@lv_cnt,w
  6849  0602  1C03               	skipc
  6850  0603  2E18               	goto	i1l3399
  6851  0604  300B               	movlw	11
  6852  0605  0265               	subwf	remote_timer_task@lv_cnt,w
  6853  0606  1803               	skipnc
  6854  0607  2E18               	goto	i1l3399
  6855                           
  6856                           ;remote.c: 54: remoter.rbuf[byidx] |= (U08ET)(1<<btidx);
  6857  0608  3001               	movlw	1
  6858  0609  00F9               	movwf	??_remote_timer_task
  6859  060A  0A7D               	incf	remote_timer_task@btidx,w
  6860  060B  2E0D               	goto	u406_24
  6861  060C                     u406_25:	
  6862  060C  35F9               	lslf	??_remote_timer_task,f
  6863  060D                     u406_24:	
  6864  060D  0B89               	decfsz	9,f
  6865  060E  2E0C               	goto	u406_25
  6866  060F  0879               	movf	??_remote_timer_task,w
  6867  0610  00FA               	movwf	??_remote_timer_task+1
  6868  0611  087C               	movf	remote_timer_task@byidx,w
  6869  0612  3EAB               	addlw	(low ((_remoter| 0+4)))& (0+255)
  6870  0613  0086               	movwf	6
  6871  0614  0187               	clrf	7
  6872  0615  087A               	movf	??_remote_timer_task+1,w
  6873  0616  0481               	iorwf	1,f
  6874  0617  2E31               	goto	i1l3405
  6875  0618                     i1l3399:	
  6876                           ;remote.c: 56: } else if ((lv_cnt>=(12)) && (lv_cnt<=(20))) {
  6877                           
  6878                           ;remote.c: 55: remoter.recvidx++;
  6879                           
  6880  0618  300C               	movlw	12
  6881  0619  0020               	movlb	0	; select bank0
  6882  061A  0265               	subwf	remote_timer_task@lv_cnt,w
  6883  061B  1C03               	skipc
  6884  061C  2E37               	goto	i1l3407
  6885  061D  3015               	movlw	21
  6886  061E  0265               	subwf	remote_timer_task@lv_cnt,w
  6887  061F  1803               	skipnc
  6888  0620  2E37               	goto	i1l3407
  6889                           
  6890                           ;remote.c: 57: remoter.rbuf[byidx] &= (U08ET)(~(1<<btidx));
  6891  0621  3001               	movlw	1
  6892  0622  00F9               	movwf	??_remote_timer_task
  6893  0623  0A7D               	incf	remote_timer_task@btidx,w
  6894  0624  2E26               	goto	u409_24
  6895  0625                     u409_25:	
  6896  0625  35F9               	lslf	??_remote_timer_task,f
  6897  0626                     u409_24:	
  6898  0626  0B89               	decfsz	9,f
  6899  0627  2E25               	goto	u409_25
  6900  0628  0879               	movf	??_remote_timer_task,w
  6901  0629  3AFF               	xorlw	255
  6902  062A  00FA               	movwf	??_remote_timer_task+1
  6903  062B  087C               	movf	remote_timer_task@byidx,w
  6904  062C  3EAB               	addlw	(low ((_remoter| 0+4)))& (0+255)
  6905  062D  0086               	movwf	6
  6906  062E  0187               	clrf	7
  6907  062F  087A               	movf	??_remote_timer_task+1,w
  6908  0630  0581               	andwf	1,f
  6909  0631                     i1l3405:	
  6910                           
  6911                           ;remote.c: 58: remoter.recvidx++;
  6912  0631  3001               	movlw	1
  6913  0632  00F9               	movwf	??_remote_timer_task
  6914  0633  0879               	movf	??_remote_timer_task,w
  6915  0634  0021               	movlb	1	; select bank1
  6916  0635  07A8               	addwf	(_remoter^(0+128)+1),f
  6917                           
  6918                           ;remote.c: 59: } else remoter.st_remo = (1);
  6919  0636  2E3C               	goto	i1l3409
  6920  0637                     i1l3407:	
  6921  0637  0021               	movlb	1	; select bank1
  6922  0638  0827               	movf	_remoter^(0+128),w
  6923  0639  3903               	andlw	-253
  6924  063A  3804               	iorlw	4
  6925  063B  00A7               	movwf	_remoter^(0+128)
  6926  063C                     i1l3409:	
  6927                           
  6928                           ;remote.c: 60: remoter.hi_cnt = lv_cnt;
  6929  063C  0020               	movlb	0	; select bank0
  6930  063D  0865               	movf	remote_timer_task@lv_cnt,w
  6931  063E  00F9               	movwf	??_remote_timer_task
  6932  063F  0879               	movf	??_remote_timer_task,w
  6933  0640  0021               	movlb	1	; select bank1
  6934  0641  00AA               	movwf	(_remoter^(0+128)+3)
  6935                           
  6936                           ;remote.c: 62: if(remoter.recvidx >= (8) * 8)
  6937  0642  3040               	movlw	64
  6938  0643  0228               	subwf	(_remoter^(0+128)+1),w
  6939  0644  1C03               	skipc
  6940  0645  2E4A               	goto	i1l3415
  6941                           
  6942                           ;remote.c: 63: remoter.st_remo = (3);
  6943  0646  0827               	movf	_remoter^(0+128),w
  6944  0647  3903               	andlw	-253
  6945  0648  380C               	iorlw	12
  6946  0649  00A7               	movwf	_remoter^(0+128)
  6947  064A                     i1l3415:	
  6948                           
  6949                           ;remote.c: 64: }
  6950                           ;remote.c: 65: if (1 == remoter.st_curt) {
  6951  064A  1CA7               	btfss	_remoter^(0+128),1
  6952  064B  2E74               	goto	i1l3423
  6953                           
  6954                           ;remote.c: 66: if ((remoter.hi_cnt + lv_cnt) < (18) || (remoter.hi_cnt + lv_cnt) > (38))
  6955  064C  082A               	movf	(_remoter^(0+128)+3),w
  6956  064D  0020               	movlb	0	; select bank0
  6957  064E  0765               	addwf	remote_timer_task@lv_cnt,w
  6958  064F  00F9               	movwf	??_remote_timer_task
  6959  0650  01FA               	clrf	??_remote_timer_task+1
  6960  0651  0DFA               	rlf	??_remote_timer_task+1,f
  6961  0652  087A               	movf	??_remote_timer_task+1,w
  6962  0653  3A80               	xorlw	128
  6963  0654  00FB               	movwf	??_remote_timer_task+2
  6964  0655  3080               	movlw	128
  6965  0656  027B               	subwf	??_remote_timer_task+2,w
  6966  0657  1D03               	skipz
  6967  0658  2E5B               	goto	u412_25
  6968  0659  3012               	movlw	18
  6969  065A  0279               	subwf	??_remote_timer_task,w
  6970  065B                     u412_25:	
  6971  065B  1C03               	skipc
  6972  065C  2E6F               	goto	i1l3421
  6973  065D  0021               	movlb	1	; select bank1
  6974  065E  082A               	movf	(_remoter^(0+128)+3),w
  6975  065F  0020               	movlb	0	; select bank0
  6976  0660  0765               	addwf	remote_timer_task@lv_cnt,w
  6977  0661  00F9               	movwf	??_remote_timer_task
  6978  0662  01FA               	clrf	??_remote_timer_task+1
  6979  0663  0DFA               	rlf	??_remote_timer_task+1,f
  6980  0664  087A               	movf	??_remote_timer_task+1,w
  6981  0665  3A80               	xorlw	128
  6982  0666  00FB               	movwf	??_remote_timer_task+2
  6983  0667  3080               	movlw	128
  6984  0668  027B               	subwf	??_remote_timer_task+2,w
  6985  0669  1D03               	skipz
  6986  066A  2E6D               	goto	u413_25
  6987  066B  3027               	movlw	39
  6988  066C  0279               	subwf	??_remote_timer_task,w
  6989  066D                     u413_25:	
  6990  066D  1C03               	skipc
  6991  066E  2E74               	goto	i1l3423
  6992  066F                     i1l3421:	
  6993                           
  6994                           ;remote.c: 67: remoter.st_remo = (1);
  6995  066F  0021               	movlb	1	; select bank1
  6996  0670  0827               	movf	_remoter^(0+128),w
  6997  0671  3903               	andlw	-253
  6998  0672  3804               	iorlw	4
  6999  0673  00A7               	movwf	_remoter^(0+128)
  7000  0674                     i1l3423:	
  7001                           
  7002                           ;remote.c: 68: }
  7003                           ;remote.c: 69: lv_cnt = 0;
  7004  0674  0020               	movlb	0	; select bank0
  7005  0675  01E5               	clrf	remote_timer_task@lv_cnt
  7006  0676  0008               	return
  7007  0677                     __end_of_remote_timer_task:	
  7008                           
  7009                           	psect	text34
  7010  0EE7                     __ptext34:	
  7011 ;; *************** function ___awdiv *****************
  7012 ;; Defined at:
  7013 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  divisor         2    0[COMMON] int 
  7016 ;;  dividend        2    2[COMMON] int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  quotient        2    7[COMMON] int 
  7019 ;;  sign            1    6[COMMON] unsigned char 
  7020 ;;  counter         1    5[COMMON] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[COMMON] int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7030 ;;      Params:         4       0       0       0
  7031 ;;      Locals:         4       0       0       0
  7032 ;;      Temps:          1       0       0       0
  7033 ;;      Totals:         9       0       0       0
  7034 ;;Total ram usage:        9 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		_remote_timer_task
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           
  7044                           ;psect for function ___awdiv
  7045  0EE7                     ___awdiv:	
  7046                           
  7047                           ;incstack = 0
  7048                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7049  0EE7  01F6               	clrf	___awdiv@sign
  7050  0EE8  1FF1               	btfss	___awdiv@divisor+1,7
  7051  0EE9  2EF1               	goto	i1l2893
  7052  0EEA  09F0               	comf	___awdiv@divisor,f
  7053  0EEB  09F1               	comf	___awdiv@divisor+1,f
  7054  0EEC  0AF0               	incf	___awdiv@divisor,f
  7055  0EED  1903               	skipnz
  7056  0EEE  0AF1               	incf	___awdiv@divisor+1,f
  7057  0EEF  01F6               	clrf	___awdiv@sign
  7058  0EF0  0AF6               	incf	___awdiv@sign,f
  7059  0EF1                     i1l2893:	
  7060  0EF1  1FF3               	btfss	___awdiv@dividend+1,7
  7061  0EF2  2EFC               	goto	i1l2899
  7062  0EF3  09F2               	comf	___awdiv@dividend,f
  7063  0EF4  09F3               	comf	___awdiv@dividend+1,f
  7064  0EF5  0AF2               	incf	___awdiv@dividend,f
  7065  0EF6  1903               	skipnz
  7066  0EF7  0AF3               	incf	___awdiv@dividend+1,f
  7067  0EF8  3001               	movlw	1
  7068  0EF9  00F4               	movwf	??___awdiv
  7069  0EFA  0874               	movf	??___awdiv,w
  7070  0EFB  06F6               	xorwf	___awdiv@sign,f
  7071  0EFC                     i1l2899:	
  7072  0EFC  01F7               	clrf	___awdiv@quotient
  7073  0EFD  01F8               	clrf	___awdiv@quotient+1
  7074  0EFE  0870               	movf	___awdiv@divisor,w
  7075  0EFF  0471               	iorwf	___awdiv@divisor+1,w
  7076  0F00  1903               	btfsc	3,2
  7077  0F01  2F2B               	goto	i1l2921
  7078  0F02  01F5               	clrf	___awdiv@counter
  7079  0F03  0AF5               	incf	___awdiv@counter,f
  7080  0F04                     i1l2909:	
  7081  0F04  1BF1               	btfsc	___awdiv@divisor+1,7
  7082  0F05  2F10               	goto	i1l2911
  7083  0F06  3001               	movlw	1
  7084  0F07                     u316_25:	
  7085  0F07  35F0               	lslf	___awdiv@divisor,f
  7086  0F08  0DF1               	rlf	___awdiv@divisor+1,f
  7087  0F09  0B89               	decfsz	9,f
  7088  0F0A  2F07               	goto	u316_25
  7089  0F0B  3001               	movlw	1
  7090  0F0C  00F4               	movwf	??___awdiv
  7091  0F0D  0874               	movf	??___awdiv,w
  7092  0F0E  07F5               	addwf	___awdiv@counter,f
  7093  0F0F  2F04               	goto	i1l2909
  7094  0F10                     i1l2911:	
  7095  0F10  3001               	movlw	1
  7096  0F11                     u318_25:	
  7097  0F11  35F7               	lslf	___awdiv@quotient,f
  7098  0F12  0DF8               	rlf	___awdiv@quotient+1,f
  7099  0F13  0B89               	decfsz	9,f
  7100  0F14  2F11               	goto	u318_25
  7101  0F15  0871               	movf	___awdiv@divisor+1,w
  7102  0F16  0273               	subwf	___awdiv@dividend+1,w
  7103  0F17  1D03               	skipz
  7104  0F18  2F1B               	goto	u319_25
  7105  0F19  0870               	movf	___awdiv@divisor,w
  7106  0F1A  0272               	subwf	___awdiv@dividend,w
  7107  0F1B                     u319_25:	
  7108  0F1B  1C03               	skipc
  7109  0F1C  2F22               	goto	i1l2917
  7110  0F1D  0870               	movf	___awdiv@divisor,w
  7111  0F1E  02F2               	subwf	___awdiv@dividend,f
  7112  0F1F  0871               	movf	___awdiv@divisor+1,w
  7113  0F20  3BF3               	subwfb	___awdiv@dividend+1,f
  7114  0F21  1477               	bsf	___awdiv@quotient,0
  7115  0F22                     i1l2917:	
  7116  0F22  3001               	movlw	1
  7117  0F23                     u320_25:	
  7118  0F23  36F1               	lsrf	___awdiv@divisor+1,f
  7119  0F24  0CF0               	rrf	___awdiv@divisor,f
  7120  0F25  0B89               	decfsz	9,f
  7121  0F26  2F23               	goto	u320_25
  7122  0F27  3001               	movlw	1
  7123  0F28  02F5               	subwf	___awdiv@counter,f
  7124  0F29  1D03               	btfss	3,2
  7125  0F2A  2F10               	goto	i1l2911
  7126  0F2B                     i1l2921:	
  7127  0F2B  0876               	movf	___awdiv@sign,w
  7128  0F2C  1903               	btfsc	3,2
  7129  0F2D  2F33               	goto	i1l2925
  7130  0F2E  09F7               	comf	___awdiv@quotient,f
  7131  0F2F  09F8               	comf	___awdiv@quotient+1,f
  7132  0F30  0AF7               	incf	___awdiv@quotient,f
  7133  0F31  1903               	skipnz
  7134  0F32  0AF8               	incf	___awdiv@quotient+1,f
  7135  0F33                     i1l2925:	
  7136  0F33  0878               	movf	___awdiv@quotient+1,w
  7137  0F34  00F1               	movwf	?___awdiv+1
  7138  0F35  0877               	movf	___awdiv@quotient,w
  7139  0F36  00F0               	movwf	?___awdiv
  7140  0F37  0008               	return
  7141  0F38                     __end_of___awdiv:	
  7142  007E                     btemp	set	126	;btemp
  7143  007E                     int$flags	set	126
  7144  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    40
    Data        10
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      70
    BANK1            80      0      62
    BANK2            80      0       0

Pointer List with Targets:

    remote_learn@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> sys_ctrl(BANK1[11]), 

    remote_gkey@buf	PTR unsigned char  size(1) Largest target is 8
		 -> remote_learn@rf_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 

    sys_fun	PTR FTN()void [5] size(2) Largest target is 1
		 -> match_code(), wifi_transmit(), door_transmit(), standby(), 
		 -> sys_power_on(), 

    getBit@source	PTR unsigned char  size(2) Largest target is 34
		 -> CUSTOMER_code(CODE[8]), remote_learn@lrn_buf(BANK0[8]), remote_learn@rf_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 
		 -> remoter(BANK1[34]), 

    sp__DEcrypt	PTR unsigned char  size(1) Largest target is 8
		 -> remote_learn@lrn_buf(BANK0[8]), remote_learn@rf_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 

    DEcrypt@_key	PTR unsigned char  size(2) Largest target is 34
		 -> CUSTOMER_code(CODE[8]), remote_learn@lrn_buf(BANK0[8]), remoter(BANK1[34]), 

    DEcrypt@source	PTR unsigned char  size(1) Largest target is 8
		 -> remote_learn@lrn_buf(BANK0[8]), remote_learn@rf_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_remote_timer_task
    _remote_timer_task->___awdiv

Critical Paths under _main in BANK0

    _main->_match_code
    _main->_wifi_transmit
    _wifi_transmit->_remote_hits
    _sys_power_on->_led_ctrl
    _sys_init->_remote_init
    _remote_init->_eeprom_read
    _standby->_remote_hits
    _match_code->_remote_learn
    _remote_learn->_DEcrypt
    _door_transmit->_remote_hits
    _remote_hits->_DEcrypt
    _remote_clear->_eeprom_write
    _DEcrypt->_getBit
    _equipmet_uart_send->_Uart1SendByte
    _Uart1SendByte->_even_check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   26723
                                             61 BANK0      4     0      4
                      _door_transmit *
                           _led_task
                         _match_code *
                            _standby *
                           _sys_init
                       _sys_power_on *
                           _sys_task
                      _wifi_transmit *
 ---------------------------------------------------------------------------------
 (1) _wifi_transmit                                        4     4      0    5953
                                             57 BANK0      4     4      0
                          _clear_ack
                 _equipmet_uart_send
                           _led_ctrl
                        _remote_hits
                        _repeat_lock
 ---------------------------------------------------------------------------------
 (1) _sys_task                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_power_on                                         4     4      0    1808
                                              6 BANK0      4     4      0
                           _led_ctrl
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0     180
                          _Init_Uart
                          _init_fosc
                        _init_timer0
                           _led_init
                        _remote_init
 ---------------------------------------------------------------------------------
 (2) _remote_init                                          2     2      0     180
                                              6 BANK0      2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      22
                                              2 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _led_init                                             1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_fosc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Uart                                            1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _standby                                              2     2      0    6649
                                             57 BANK0      2     2      0
                            ___lwmod
                          _clear_ack
                     _equipment_type
                 _equipmet_uart_send
                            _get_ack
                       _get_ack_data
                           _led_ctrl
                        _remote_hits
 ---------------------------------------------------------------------------------
 (2) _get_ack_data                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     477
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _match_code                                           1     1      0    6181
                                             60 BANK0      1     1      0
                           _led_ctrl
                       _remote_clear
                       _remote_learn
 ---------------------------------------------------------------------------------
 (2) _remote_learn                                        21    20      1    3961
                                             39 BANK0     21    20      1
                            _DEcrypt
                       _eeprom_write
                        _remote_gkey
 ---------------------------------------------------------------------------------
 (1) _led_task                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _door_transmit                                        2     2      0    5952
                                             57 BANK0      2     2      0
                          _clear_ack
                 _equipmet_uart_send
                           _led_ctrl
                        _remote_hits
                        _repeat_lock
 ---------------------------------------------------------------------------------
 (2) _repeat_lock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _remote_hits                                         18    18      0    3808
                                             39 BANK0     18    18      0
                            _DEcrypt
                       _eeprom_write
                     _equipment_type
                       _remote_clear
                        _remote_gkey
 ---------------------------------------------------------------------------------
 (3) _remote_gkey                                          4     4      0     166
                                              2 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _remote_clear                                         2     2      0     436
                                              6 BANK0      2     2      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         4     3      1     256
                                              2 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _DEcrypt                                             29    27      2    1913
                                             10 BANK0     29    27      2
                             _getBit
 ---------------------------------------------------------------------------------
 (4) _getBit                                               8     4      4     914
                                              2 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _led_ctrl                                             4     1      3    1784
                                              2 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _equipmet_uart_send                                   2     2      0     314
                                              7 BANK0      2     2      0
                      _Uart1SendByte
                     _equipment_type
 ---------------------------------------------------------------------------------
 (3) _equipment_type                                       1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Uart1SendByte                                        2     2      0     156
                                              5 BANK0      2     2      0
                         _even_check
 ---------------------------------------------------------------------------------
 (4) _even_check                                           3     3      0     112
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _clear_ack                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0     496
                                              0 BANK0      2     2      0
                  _remote_timer_task
 ---------------------------------------------------------------------------------
 (6) _remote_timer_task                                    5     5      0     496
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _door_transmit *
     _clear_ack
     _equipmet_uart_send
       _Uart1SendByte
         _even_check
       _equipment_type
     _led_ctrl
     _remote_hits
       _DEcrypt
         _getBit
       _eeprom_write
       _equipment_type
       _remote_clear
         _eeprom_write
       _remote_gkey
     _repeat_lock
   _led_task *
   _match_code *
     _led_ctrl
     _remote_clear
       _eeprom_write
     _remote_learn
       _DEcrypt
         _getBit
       _eeprom_write
       _remote_gkey
   _standby *
     ___lwmod
     _clear_ack
     _equipment_type
     _equipmet_uart_send
       _Uart1SendByte
         _even_check
       _equipment_type
     _get_ack
     _get_ack_data
     _led_ctrl
     _remote_hits
       _DEcrypt
         _getBit
       _eeprom_write
       _equipment_type
       _remote_clear
         _eeprom_write
       _remote_gkey
   _sys_init *
     _Init_Uart
     _init_fosc
     _init_timer0
     _led_init
     _remote_init
       _eeprom_read
   _sys_power_on *
     _led_ctrl
   _sys_task *
   _wifi_transmit *
     _clear_ack
     _equipmet_uart_send
       _Uart1SendByte
         _even_check
       _equipment_type
     _led_ctrl
     _remote_hits
       _DEcrypt
         _getBit
       _eeprom_write
       _equipment_type
       _remote_clear
         _eeprom_write
       _remote_gkey
     _repeat_lock

 _ISR (ROOT)
   _remote_timer_task
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      92       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     41      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      92      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 17:21:16 2018

                 __CFG_CP$ON 0000             door_transmit@key 005A                           l40 0CED  
                         l34 0E20                           _RD 0CA8                           _WR 0CA9  
               ___awdiv@sign 0076       __size_of_door_transmit 00BB                          l320 01D7  
                        l322 01DE                          l511 0D6D                          _ACK 0062  
                        l473 0C69                          l467 0C98                          l489 0D2A  
                        _GIE 005F                          _RA2 0062                          _RA4 0064  
                        _RA5 0065                          _NLF 07FE                 __CFG_CPD$OFF 0000  
                        _ISR 0004                          _RX9 0CEE                          _TX9 0CF6  
             ??_get_ack_data 0022                          wreg 0009             ??_equipment_type 0022  
             ?_wifi_transmit 0070                 __CFG_LVP$OFF 0000                         ?_ISR 0070  
                       l2301 0CBE                         l3013 0EAB                         l3031 0ED1  
                       l3025 0EBA                         l3201 07B3                         l2411 0CEE  
                       l3131 031E                         l2309 0CC8                         l2325 0DDC  
                       l3037 0EE2                         l3141 0331                         l3109 02DD  
                       l3117 02EB                         l3205 07BE                         l2263 0C7C  
                       l2319 0DCA                         l3127 0311                         l3071 0291  
                       l3063 0258                         l3047 021D                         l2521 0E44  
                       l2513 0E36                         l2353 0F43                         l3241 0FA2  
                       l3145 0337                         l3065 025D                         l3217 07DB  
                       l3305 06B3                         l2611 00E3                         l3155 0354  
                       l3083 02A0                         l2517 0E3C                         l2525 0E4A  
                       l2509 0E30                         l2381 0F6E                         l2701 01BF  
                       l2453 0E8B                         l2445 0E7D                         l3261 0FCA  
                       l3245 0FB1                         l3229 07F3                         l3165 0752  
                       l3309 06C0                         l2367 0F56                         l2631 0101  
                       l2607 00E1                         l2615 00E5                         l2439 0E69  
                       l3095 02BC                         l3319 06E0                         l2393 0F8A  
                       l2713 01CC                         l2705 01C1                         l2641 011A  
                       l2625 00ED                         l2545 007C                         l2537 005F  
                       l3089 02AD                         l3329 06F4                         l2387 0F74  
                       l2619 00E7                         l2563 0098                         l2555 0084  
                       l2459 0E98                         l3187 078C                         l3339 0715  
                       l3291 068F                         l3427 0C81                         l2733 01E3  
                       l2725 01DC                         l2717 01D5                         l2709 01CA  
                       l2637 0118                         l2573 00B8                         l2549 007E  
                       l3277 0FF5                         l3349 072B                         l2591 00CF  
                       l2583 00C6                         l2815 03EC                         l2665 0175  
                       l2657 0168                         l2833 040D                         l2761 0366  
                       l2739 01E5                         l2675 018E                         l2827 03F6  
                       l2819 03EE                         l3493 01EF                         l2693 01BB  
                       l2685 01B7                         l2853 043A                         l2781 0386  
                       l2599 00D8                         l2871 0464                         l2839 040F  
                       l2775 0380                         l2767 036C                         l2943 0DB6  
                       l2697 01BD                         l2689 01B9                         l2961 0E0C  
                       l2865 045F                         l2849 0438                         l2881 047B  
                       l2793 039F                         l2937 0D9E                         l2859 043F  
                       l2787 038B                         l2939 0DAA                         l2947 0DBF  
                       l2877 0479                         l2967 0E1B                         l2999 0C4A  
               __CFG_WDTE$ON 0000                         _BRGH 0CF2                         _T0IE 005D  
                       _CREN 0CEC                         _T0IF 005A                         _FERR 0CEA  
                       u2120 0D69                         u2114 0D61                         u2115 0D60  
                       _CSRC 0CF7                         u2215 0550                         u2225 0566  
                       u2170 0C71                         u2235 057C                         u2180 0C72  
                       u3060 0433                         u2350 0CAC                         u3070 0434  
                       u3305 0E02                         u2371 0D29                         u3245 0DA1  
                       u3265 0DB0                         u3275 0DB7                         u3394 0EC9  
                       u3395 0EC7                         u2855 016F                         _RCIE 048D  
                       _RCIF 008D                         _OERR 0CE9              __end_of_DEcrypt 059A  
                       _TMR0 0015                         _SPEN 0CEF                         _TX9D 0CF0  
                       _SREN 0CED                         _TRMT 0CF1                         _TXEN 0CF5  
                       _WREN 0CAA                         _SYNC 0CF4               ??_eeprom_write 0023  
              __CFG_FCMEN$ON 0000                         _main 0C7E                         fsr0h 0005  
                       fsr1h 0007                         indf0 0000                         fsr0l 0004  
                       indf1 0001                         fsr1l 0006                         btemp 007E  
              __CFG_BOREN$ON 0000                         start 0038                __CFG_IESO$OFF 0000  
              _CUSTOMER_code 081E      remote_hits@counter_save 0056                        ??_ISR 0020  
                      _ADDEN 0CEB                        ?_main 005D              __end_of___awdiv 0F38  
                      _EEADR 0191                        _BRG16 0CFB                        _CARRY 0018  
            ___awdiv@divisor 0070                        i1l402 0034              __end_of___lwmod 0DC4  
            ___awdiv@counter 0075                        _RCREG 0199                DEcrypt@source 0046  
                      _TRISA 008C                        _TRISC 008E                        _TXREG 019A  
               ?_init_timer0 0070                __CFG_PWRTE$ON 0000              __end_of_get_ack 0C24  
                      pclath 000A                _door_transmit 0743              __end_of_standby 035B  
                      status 0003                        wtemp0 007E   __end_of_equipmet_uart_send 0E59  
             __CFG_MCLRE$OFF 0000              __initialization 003A                 __end_of_main 0C96  
                     ??_main 0061               __CFG_PLLEN$OFF 0000              ??_wifi_transmit 0059  
                  ??_DEcrypt 002C                 ?_repeat_lock 0070        __size_of_sys_power_on 0049  
                     _EEDATA 0193                       _EECON1 0195                       _EECON2 0196  
           ___awdiv@dividend 0072                       _ANSELA 018C               ?_door_transmit 0070  
                     i1l3421 066F                       i1l3405 0631                       i1l3423 0674  
                     i1l3407 0637                       i1l3415 064A                       i1l3409 063C  
                     i1l3363 05A8                       i1l3381 05DB                       i1l3461 0032  
                     i1l2911 0F10                       i1l3383 05DE                       i1l3367 05BD  
                     i1l3455 0025                       i1l2921 0F2B                       i1l3449 001B  
                     i1l3379 05D6                       i1l3459 002D                       i1l2925 0F33  
                     i1l2917 0F22                       i1l2909 0F04                       i1l3399 0618  
                     i1l2893 0EF1                       i1l2899 0EFC                       u320_25 0F23  
                     u316_25 0F07                       u412_25 065B                       u413_25 066D  
                     u406_24 060D                       u318_25 0F11                       u406_25 060C  
                     u319_25 0F1B                       u409_24 0626                       u409_25 0625  
                     u392_20 05A0                       u393_24 05A2                       _OSCCON 0099  
                     u395_20 05AD                       u395_22 05AE                       u396_20 05B3  
                     u396_22 05B4                       _TMR0IF 005A                       _SPBRGH 019C  
                     _SPBRGL 019B                       _WDTCON 0097           __size_of_Init_Uart 0021  
               ?_remote_gkey 0070                 ?_remote_hits 0070                 ?_remote_init 0070  
       __end_of_get_ack_data 0C27         __size_of_eeprom_read 0021               even_check@data 0024  
           __end_of_led_ctrl 0D05             __end_of_led_init 0C67             __end_of_led_task 0E23  
                  ??___awdiv 0074                       _getBit 0D47                    ??___lwmod 0026  
           ___awdiv@quotient 0077         __end_of_eeprom_write 0D97                       _st_led 00A0  
                  ??_get_ack 0022                 _sys_power_on 0E9E                led_ctrl@times 0024  
                  ??_standby 0059             __end_of_sys_init 0CE6             __end_of_sys_task 0C4D  
    __end_of__initialization 0052              eeprom_read@addr 0025               __pcstackCOMMON 0070  
                DEcrypt@_key 002A                  DEcrypt@bitk 0040                 __pidataBANK1 0C4D  
         __size_of_clear_ack 0003            __end_of_Init_Uart 0D26            eeprom_write@value 0022  
            ??_door_transmit 0059         __size_of_init_timer0 000A                   __pbssBANK0 0061  
                 __pbssBANK1 00A0       __size_of_Uart1SendByte 0019           __size_of_init_fosc 0006  
                 __pmaintext 0C7E                      ?_getBit 0022                   __pintentry 0004  
                    _BAUDCON 019F                      _APFCON0 011D               remote_gkey@buf 0024  
        remote_learn@lrn_buf 004A                      _DEcrypt 047D            _remote_timer_task 059A  
         ?_remote_timer_task 0070                    ?_led_ctrl 0022                    ?_led_init 0070  
                  ?_led_task 0070         __size_of_repeat_lock 0003                ?_remote_clear 0070  
      __size_of_get_ack_data 0003                ?_remote_learn 0047            __end_of_clear_ack 0C1E  
        ??_remote_timer_task 0079                   _even_check 0C67                   _match_code 0677  
       __size_of_remote_gkey 0059         __size_of_remote_hits 01BA         __size_of_remote_init 0045  
      __size_of_eeprom_write 002C             remote_gkey@index 0025                      ___awdiv 0EE7  
    remote_timer_task@lv_cnt 0065                      ___lwmod 0D97              __size_of_getBit 0024  
    remote_timer_task@tp_cnt 0064                _Uart1SendByte 0C96             remote_learn@flag 0047  
                    __ptext1 0677                      __ptext2 0743                      __ptext3 0210  
                    __ptext4 0E9E                      __ptext5 0F91                      __ptext6 0C43  
                    __ptext7 0CCA                      __ptext8 0E59                      __ptext9 0D26  
                    _get_ack 0C21             remote_learn@pbuf 005A                    ?_sys_init 0070  
                  ?_sys_task 0070                 __size_of_ISR 0034    __end_of_remote_timer_task 0677  
         _equipmet_uart_send 0E23            __end_of_init_fosc 0C2D             remote_hits@index 0058  
                    getBit@n 0024                 _get_ack_data 0C24                      _remoter 00A7  
           remote_init@index 0027                      _standby 0210          ?_equipmet_uart_send 0070  
                    clrloop0 0C2E                   ??_led_ctrl 0025                   ??_led_init 0022  
                    _sys_cnt 0063         end_of_initialization 0052                      _sys_fun 00D4  
                 ??_led_task 0022               ??_remote_clear 0026               ??_remote_learn 0048  
                    init_ram 0C33                 _eeprom_write 0D6B                      initloop 0C34  
    __size_of_equipment_type 001B               led_ctrl@period 0022         ??_equipmet_uart_send 0027  
             ?_Uart1SendByte 0070                   ??_sys_init 0028                   ??_sys_task 0022  
           __CFG_FOSC$INTOSC 0000                    _TRISAbits 008C        __end_of_wifi_transmit 1000  
          _wifi_transmit$215 005A                ??_eeprom_read 0022                  ?_even_check 0070  
                ?_match_code 0070             _sys_power_on$208 0028                 DEcrypt@index 0044  
             __end_of_getBit 0D6B   __size_of_remote_timer_task 00DD          start_initialization 003A  
          Uart1SendByte@Byte 0026                  __end_of_NLF 081E                  __end_of_ISR 0038  
                  _Init_Uart 0D05        __end_of_CUSTOMER_code 0826                even_check@res 0023  
            ??_Uart1SendByte 0025          __end_of_eeprom_read 0D47                     ??_getBit 0026  
                __pdataBANK1 00D4         __end_of_remote_clear 0DF3         __end_of_remote_learn 047D  
              ??_init_timer0 0022                    ___latbits 0001                __pcstackBANK0 0020  
                   ?_DEcrypt 002A          __size_of_even_check 0017                   ?_Init_Uart 0070  
                 DEcrypt@res 003F          __size_of_match_code 00CC        __end_of_door_transmit 07FE  
           eeprom_write@addr 0025            __size_of_led_ctrl 001F            __size_of_led_init 0010  
             _equipment_type 0CAF            __size_of_led_task 0030                    _clear_ack 0C1B  
                   ?___awdiv 0070                     ?___lwmod 0022           remote_learn@rf_buf 0052  
           wifi_transmit@key 005C                     ?_get_ack 0070            __size_of_sys_init 001C  
          __size_of_sys_task 000A                     _ACK_data 0061       remote_timer_task@btidx 007D  
              ??_repeat_lock 0022       remote_timer_task@byidx 007C                     ?_standby 0070  
                  _init_fosc 0C27       __end_of_equipment_type 0CCA          __end_of_init_timer0 0C43  
              ??_remote_gkey 0022                ??_remote_hits 0047                ??_remote_init 0026  
                  clear_ram0 0C2D                  _eeprom_read 0D26            remote_clear@index 0027  
                 ?_clear_ack 0070                ?_sys_power_on 0070                  ??_Init_Uart 0022  
      remote_hits@counter_rf 0054             __size_of_DEcrypt 011D                   ?_init_fosc 0070  
            ?_equipment_type 0070                   standby@key 005A          __end_of_repeat_lock 0C21  
               getBit@source 0022                 ??_even_check 0022                 ??_match_code 005C  
      __size_of_remote_clear 002F        __size_of_remote_learn 0122  __size_of_equipmet_uart_send 0036  
        __end_of_remote_gkey 0F91          __end_of_remote_hits 0210          __end_of_remote_init 0E9E  
           __size_of___awdiv 0051             __size_of___lwmod 002D               ??_sys_power_on 0026  
           __size_of_get_ack 0003                  _init_timer0 0C39           __end_of_even_check 0C7E  
                   __ptext10 0C57                     __ptext11 0C39                     __ptext20 0056  
                   __ptext12 0C27                     __ptext21 0F38                     __ptext13 0D05  
                   __ptext30 0C67                     __ptext22 0DC4                     __ptext14 0C24  
                   __ptext31 0C1B                     __ptext23 0D6B                     __ptext15 0C21  
                   __ptext24 047D                     __ptext16 0D97                     __ptext33 059A  
                   __ptext25 0D47                     __ptext17 035B                     __ptext34 0EE7  
                   __ptext26 0CE6                     __ptext18 0DF3                     __ptext27 0E23  
                   __ptext19 0C1E                     __ptext28 0CAF                     __ptext29 0C96  
          remote_learn@index 005B           __end_of_match_code 0743             __size_of_standby 014B  
                   _led_ctrl 0CE6                     _led_init 0C57                     _led_task 0DF3  
               _remote_clear 0DC4                 _remote_learn 035B                __size_of_main 0018  
          remote_hits@rf_buf 004C       equipmet_uart_send@data 0028                  ??_clear_ack 0022  
     __size_of_wifi_transmit 006F                     int$flags 007E                     main@argc 005D  
                   main@argv 005F                     _sys_ctrl 00C9                     _sys_init 0CCA  
                   _sys_task 0C43                  _repeat_lock 0C1E                  ??_init_fosc 0022  
                   intlevel1 0000             ___lwmod@dividend 0024                  _remote_gkey 0F38  
                _remote_hits 0056                  _remote_init 0E59        __end_of_Uart1SendByte 0CAF  
              __pstringtext1 07FE                __pstringtext2 081E                   _OPTION_REG 0095  
            ___lwmod@divisor 0022              ___lwmod@counter 0027                ?_get_ack_data 0070  
              _wifi_transmit 0F91                ?_eeprom_write 0022         __end_of_sys_power_on 0EE7  
               ?_eeprom_read 0070  
