

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 17:27:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1823 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0391                     	;# 
   175  0392                     	;# 
   176  0393                     	;# 
   177  039A                     	;# 
   178  039C                     	;# 
   179  039D                     	;# 
   180  039E                     	;# 
   181  039F                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000E                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  008C                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010E                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020E                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0295                     	;# 
   296  0296                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  0393                     	;# 
   300  039A                     	;# 
   301  039C                     	;# 
   302  039D                     	;# 
   303  039E                     	;# 
   304  039F                     	;# 
   305  0FE4                     	;# 
   306  0FE5                     	;# 
   307  0FE6                     	;# 
   308  0FE7                     	;# 
   309  0FE8                     	;# 
   310  0FE9                     	;# 
   311  0FEA                     	;# 
   312  0FEB                     	;# 
   313  0FED                     	;# 
   314  0FEE                     	;# 
   315  0FEF                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000E                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  010C                     	;# 
   359  010E                     	;# 
   360  0111                     	;# 
   361  0112                     	;# 
   362  0113                     	;# 
   363  0114                     	;# 
   364  0115                     	;# 
   365  0116                     	;# 
   366  0117                     	;# 
   367  0118                     	;# 
   368  0119                     	;# 
   369  011A                     	;# 
   370  011B                     	;# 
   371  011D                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018E                     	;# 
   375  0191                     	;# 
   376  0191                     	;# 
   377  0192                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0194                     	;# 
   382  0195                     	;# 
   383  0196                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020E                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0294                     	;# 
   417  0295                     	;# 
   418  0295                     	;# 
   419  0296                     	;# 
   420  0391                     	;# 
   421  0392                     	;# 
   422  0393                     	;# 
   423  039A                     	;# 
   424  039C                     	;# 
   425  039D                     	;# 
   426  039E                     	;# 
   427  039F                     	;# 
   428  0FE4                     	;# 
   429  0FE5                     	;# 
   430  0FE6                     	;# 
   431  0FE7                     	;# 
   432  0FE8                     	;# 
   433  0FE9                     	;# 
   434  0FEA                     	;# 
   435  0FEB                     	;# 
   436  0FED                     	;# 
   437  0FEE                     	;# 
   438  0FEF                     	;# 
   439  0000                     	;# 
   440  0001                     	;# 
   441  0002                     	;# 
   442  0003                     	;# 
   443  0004                     	;# 
   444  0005                     	;# 
   445  0006                     	;# 
   446  0007                     	;# 
   447  0008                     	;# 
   448  0009                     	;# 
   449  000A                     	;# 
   450  000B                     	;# 
   451  000C                     	;# 
   452  000E                     	;# 
   453  0011                     	;# 
   454  0012                     	;# 
   455  0015                     	;# 
   456  0016                     	;# 
   457  0016                     	;# 
   458  0017                     	;# 
   459  0018                     	;# 
   460  0019                     	;# 
   461  001A                     	;# 
   462  001B                     	;# 
   463  001C                     	;# 
   464  001E                     	;# 
   465  001F                     	;# 
   466  008C                     	;# 
   467  008E                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0095                     	;# 
   471  0096                     	;# 
   472  0097                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009A                     	;# 
   476  009B                     	;# 
   477  009B                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  010C                     	;# 
   482  010E                     	;# 
   483  0111                     	;# 
   484  0112                     	;# 
   485  0113                     	;# 
   486  0114                     	;# 
   487  0115                     	;# 
   488  0116                     	;# 
   489  0117                     	;# 
   490  0118                     	;# 
   491  0119                     	;# 
   492  011A                     	;# 
   493  011B                     	;# 
   494  011D                     	;# 
   495  011D                     	;# 
   496  018C                     	;# 
   497  018E                     	;# 
   498  0191                     	;# 
   499  0191                     	;# 
   500  0192                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0194                     	;# 
   505  0195                     	;# 
   506  0196                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019E                     	;# 
   517  019F                     	;# 
   518  020C                     	;# 
   519  020E                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0216                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0217                     	;# 
   535  0291                     	;# 
   536  0291                     	;# 
   537  0292                     	;# 
   538  0293                     	;# 
   539  0294                     	;# 
   540  0295                     	;# 
   541  0295                     	;# 
   542  0296                     	;# 
   543  0391                     	;# 
   544  0392                     	;# 
   545  0393                     	;# 
   546  039A                     	;# 
   547  039C                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0FE4                     	;# 
   552  0FE5                     	;# 
   553  0FE6                     	;# 
   554  0FE7                     	;# 
   555  0FE8                     	;# 
   556  0FE9                     	;# 
   557  0FEA                     	;# 
   558  0FEB                     	;# 
   559  0FED                     	;# 
   560  0FEE                     	;# 
   561  0FEF                     	;# 
   562  0000                     	;# 
   563  0001                     	;# 
   564  0002                     	;# 
   565  0003                     	;# 
   566  0004                     	;# 
   567  0005                     	;# 
   568  0006                     	;# 
   569  0007                     	;# 
   570  0008                     	;# 
   571  0009                     	;# 
   572  000A                     	;# 
   573  000B                     	;# 
   574  000C                     	;# 
   575  000E                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0016                     	;# 
   581  0017                     	;# 
   582  0018                     	;# 
   583  0019                     	;# 
   584  001A                     	;# 
   585  001B                     	;# 
   586  001C                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  008C                     	;# 
   590  008E                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  010C                     	;# 
   605  010E                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0113                     	;# 
   609  0114                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  011A                     	;# 
   616  011B                     	;# 
   617  011D                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0193                     	;# 
   627  0194                     	;# 
   628  0195                     	;# 
   629  0196                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  020C                     	;# 
   642  020E                     	;# 
   643  0211                     	;# 
   644  0211                     	;# 
   645  0212                     	;# 
   646  0212                     	;# 
   647  0213                     	;# 
   648  0213                     	;# 
   649  0214                     	;# 
   650  0214                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0216                     	;# 
   655  0216                     	;# 
   656  0217                     	;# 
   657  0217                     	;# 
   658  0291                     	;# 
   659  0291                     	;# 
   660  0292                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0295                     	;# 
   664  0295                     	;# 
   665  0296                     	;# 
   666  0391                     	;# 
   667  0392                     	;# 
   668  0393                     	;# 
   669  039A                     	;# 
   670  039C                     	;# 
   671  039D                     	;# 
   672  039E                     	;# 
   673  039F                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000E                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001B                     	;# 
   709  001C                     	;# 
   710  001E                     	;# 
   711  001F                     	;# 
   712  008C                     	;# 
   713  008E                     	;# 
   714  0091                     	;# 
   715  0092                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0097                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009A                     	;# 
   722  009B                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  010C                     	;# 
   728  010E                     	;# 
   729  0111                     	;# 
   730  0112                     	;# 
   731  0113                     	;# 
   732  0114                     	;# 
   733  0115                     	;# 
   734  0116                     	;# 
   735  0117                     	;# 
   736  0118                     	;# 
   737  0119                     	;# 
   738  011A                     	;# 
   739  011B                     	;# 
   740  011D                     	;# 
   741  011D                     	;# 
   742  018C                     	;# 
   743  018E                     	;# 
   744  0191                     	;# 
   745  0191                     	;# 
   746  0192                     	;# 
   747  0193                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0194                     	;# 
   751  0195                     	;# 
   752  0196                     	;# 
   753  0199                     	;# 
   754  019A                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  019C                     	;# 
   761  019D                     	;# 
   762  019E                     	;# 
   763  019F                     	;# 
   764  020C                     	;# 
   765  020E                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  0212                     	;# 
   769  0212                     	;# 
   770  0213                     	;# 
   771  0213                     	;# 
   772  0214                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0215                     	;# 
   777  0216                     	;# 
   778  0216                     	;# 
   779  0217                     	;# 
   780  0217                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0294                     	;# 
   786  0295                     	;# 
   787  0295                     	;# 
   788  0296                     	;# 
   789  0391                     	;# 
   790  0392                     	;# 
   791  0393                     	;# 
   792  039A                     	;# 
   793  039C                     	;# 
   794  039D                     	;# 
   795  039E                     	;# 
   796  039F                     	;# 
   797  0FE4                     	;# 
   798  0FE5                     	;# 
   799  0FE6                     	;# 
   800  0FE7                     	;# 
   801  0FE8                     	;# 
   802  0FE9                     	;# 
   803  0FEA                     	;# 
   804  0FEB                     	;# 
   805  0FED                     	;# 
   806  0FEE                     	;# 
   807  0FEF                     	;# 
   808                           
   809                           	psect	stringtext1
   810  0476                     __pstringtext1:	
   811  0476                     _NLF:	
   812  0476  3400               	retlw	0
   813  0477  3401               	retlw	1
   814  0478  3401               	retlw	1
   815  0479  3401               	retlw	1
   816  047A  3400               	retlw	0
   817  047B  3401               	retlw	1
   818  047C  3400               	retlw	0
   819  047D  3400               	retlw	0
   820  047E  3400               	retlw	0
   821  047F  3400               	retlw	0
   822  0480  3401               	retlw	1
   823  0481  3400               	retlw	0
   824  0482  3401               	retlw	1
   825  0483  3401               	retlw	1
   826  0484  3401               	retlw	1
   827  0485  3400               	retlw	0
   828  0486  3400               	retlw	0
   829  0487  3400               	retlw	0
   830  0488  3401               	retlw	1
   831  0489  3401               	retlw	1
   832  048A  3401               	retlw	1
   833  048B  3400               	retlw	0
   834  048C  3401               	retlw	1
   835  048D  3400               	retlw	0
   836  048E  3400               	retlw	0
   837  048F  3401               	retlw	1
   838  0490  3400               	retlw	0
   839  0491  3401               	retlw	1
   840  0492  3401               	retlw	1
   841  0493  3401               	retlw	1
   842  0494  3400               	retlw	0
   843  0495  3400               	retlw	0
   844  0496                     __end_of_NLF:	
   845                           
   846                           	psect	stringtext2
   847  0548                     __pstringtext2:	
   848  0548                     _sav_key:	
   849  0548  3401               	retlw	1
   850  0549  3400               	retlw	0
   851  054A  3400               	retlw	0
   852  054B  3400               	retlw	0
   853  054C                     __end_of_sav_key:	
   854                           
   855                           	psect	stringtext3
   856  052C                     __pstringtext3:	
   857  052C                     _CUSTOMER_code:	
   858  052C  34EF               	retlw	239
   859  052D  34CD               	retlw	205
   860  052E  34AB               	retlw	171
   861  052F  3489               	retlw	137
   862  0530  3467               	retlw	103
   863  0531  3445               	retlw	69
   864  0532  3423               	retlw	35
   865  0533  3401               	retlw	1
   866  0534                     __end_of_CUSTOMER_code:	
   867  0015                     _TMR0	set	21
   868  0011                     _PIR1	set	17
   869  005D                     _T0IE	set	93
   870  005A                     _T0IF	set	90
   871  005A                     _TMR0IF	set	90
   872  0075                     _RC5	set	117
   873  005F                     _GIE	set	95
   874  008B                     _SSP1IF	set	139
   875  0073                     _RC3	set	115
   876  0095                     _OPTION_REG	set	149
   877  0097                     _WDTCON	set	151
   878  0099                     _OSCCON	set	153
   879  008E                     _TRISC	set	142
   880  011D                     _APFCON	set	285
   881  019A                     _TXREG	set	410
   882  019B                     _SPBRGL	set	411
   883  019C                     _SPBRGH	set	412
   884  019F                     _BAUDCON	set	415
   885  0CF0                     _TX9D	set	3312
   886  0CE9                     _OERR	set	3305
   887  0CEA                     _FERR	set	3306
   888  0CEB                     _ADDEN	set	3307
   889  0CEC                     _CREN	set	3308
   890  0CED                     _SREN	set	3309
   891  0CEE                     _RX9	set	3310
   892  0CEF                     _SPEN	set	3311
   893  0CF1                     _TRMT	set	3313
   894  0CFB                     _BRG16	set	3323
   895  0CF2                     _BRGH	set	3314
   896  0CF4                     _SYNC	set	3316
   897  0CF5                     _TXEN	set	3317
   898  0CF6                     _TX9	set	3318
   899  0CF7                     _CSRC	set	3319
   900  020E                     _WPUC	set	526
   901  0211                     _SSP1BUF	set	529
   902  0212                     _SSP1ADD	set	530
   903  0215                     _SSP1CON1	set	533
   904  0214                     _SSP1STAT	set	532
   905                           
   906                           ; #config settings
   907  0000                     
   908                           	psect	cinit
   909  001E                     start_initialization:	
   910  001E                     __initialization:	
   911                           
   912                           ; Clear objects allocated to BANK0
   913  001E  0020               	movlb	0	; select bank0
   914  001F  01EA               	clrf	__pbssBANK0& (0+127)
   915  0020  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   916  0021  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   917  0022  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   918                           
   919                           ; Clear objects allocated to BANK1
   920  0023  30A0               	movlw	low __pbssBANK1
   921  0024  0084               	movwf	4
   922  0025  3000               	movlw	high __pbssBANK1
   923  0026  0085               	movwf	5
   924  0027  3013               	movlw	19
   925  0028  253C               	fcall	clear_ram0
   926  0029                     end_of_initialization:	
   927                           ;End of C runtime variable initialization code
   928                           
   929  0029                     __end_of__initialization:	
   930  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   931  002A  0020               	movlb	0
   932  002B  2D34               	ljmp	_main	;jump to C main() function
   933                           
   934                           	psect	bssBANK0
   935  006A                     __pbssBANK0:	
   936  006A                     _sys_cnt:	
   937  006A                     	ds	1
   938  006B                     remote_timer_task@tp_cnt:	
   939  006B                     	ds	1
   940  006C                     remote_timer_task@lv_cnt:	
   941  006C                     	ds	1
   942  006D                     _de_code:	
   943  006D                     	ds	1
   944                           
   945                           	psect	bssBANK1
   946  00A0                     __pbssBANK1:	
   947  00A0                     _remoter:	
   948  00A0                     	ds	14
   949  00AE                     _sys_ctrl:	
   950  00AE                     	ds	5
   951                           
   952                           	psect	clrtext
   953  053C                     clear_ram0:	
   954                           ;	Called with FSR0 containing the base address, and
   955                           ;	WREG with the size to clear
   956                           
   957  053C  0064               	clrwdt	;clear the watchdog before getting into this loop
   958  053D                     clrloop0:	
   959  053D  0180               	clrf	0	;clear RAM location pointed to by FSR
   960  053E  3101               	addfsr 0,1
   961  053F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   962  0540  2D3D               	goto	clrloop0	;have we reached the end yet?
   963  0541  3400               	retlw	0	;all done for this memory range, return
   964                           
   965                           	psect	cstackCOMMON
   966  0070                     __pcstackCOMMON:	
   967  0070                     ?_sys_init:	
   968  0070                     ?_sys_task:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_main_process:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_init_timer0:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0070                     ?_Init_Uart:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0070                     ?_remote_init:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     ?_remote_hits:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ?_data_construct:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ?_even_check:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_SPI_init:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ?_SPI_send_byte:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_init_fosc:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_remote_timer_task:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_remote_gkey:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_ISR:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?___awdiv:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ___awdiv@divisor:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x0
  1018  0070                     	ds	2
  1019  0072                     ___awdiv@dividend:	
  1020                           
  1021                           ; 2 bytes @ 0x2
  1022  0072                     	ds	2
  1023  0074                     ??___awdiv:	
  1024                           
  1025                           ; 1 bytes @ 0x4
  1026  0074                     	ds	1
  1027  0075                     ___awdiv@counter:	
  1028                           
  1029                           ; 1 bytes @ 0x5
  1030  0075                     	ds	1
  1031  0076                     ___awdiv@sign:	
  1032                           
  1033                           ; 1 bytes @ 0x6
  1034  0076                     	ds	1
  1035  0077                     ___awdiv@quotient:	
  1036                           
  1037                           ; 2 bytes @ 0x7
  1038  0077                     	ds	2
  1039  0079                     ??_remote_timer_task:	
  1040                           
  1041                           ; 1 bytes @ 0x9
  1042  0079                     	ds	3
  1043  007C                     remote_timer_task@byidx:	
  1044                           
  1045                           ; 1 bytes @ 0xC
  1046  007C                     	ds	1
  1047  007D                     remote_timer_task@btidx:	
  1048                           
  1049                           ; 1 bytes @ 0xD
  1050  007D                     	ds	1
  1051                           
  1052                           	psect	cstackBANK0
  1053  0020                     __pcstackBANK0:	
  1054  0020                     ??_ISR:	
  1055                           
  1056                           ; 1 bytes @ 0x0
  1057  0020                     	ds	2
  1058  0022                     ?_getBit:	
  1059  0022                     ??_sys_task:	
  1060                           ; 1 bytes @ 0x2
  1061                           
  1062  0022                     ??_init_timer0:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0022                     ??_Init_Uart:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068  0022                     ??_remote_init:	
  1069                           ; 1 bytes @ 0x2
  1070                           
  1071  0022                     ??_data_construct:	
  1072                           ; 1 bytes @ 0x2
  1073                           
  1074  0022                     ??_even_check:	
  1075                           ; 1 bytes @ 0x2
  1076                           
  1077  0022                     ??_SPI_init:	
  1078                           ; 1 bytes @ 0x2
  1079                           
  1080  0022                     ??_SPI_send_byte:	
  1081                           ; 1 bytes @ 0x2
  1082                           
  1083  0022                     ??_init_fosc:	
  1084                           ; 1 bytes @ 0x2
  1085                           
  1086  0022                     ??_remote_gkey:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089  0022                     SPI_send_byte@data:	
  1090                           ; 1 bytes @ 0x2
  1091                           
  1092  0022                     getBit@source:	
  1093                           ; 1 bytes @ 0x2
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x2
  1097  0022                     	ds	1
  1098  0023                     ?_SPI_send_string:	
  1099  0023                     SPI_send_string@length:	
  1100                           ; 1 bytes @ 0x3
  1101                           
  1102  0023                     remote_init@index:	
  1103                           ; 1 bytes @ 0x3
  1104                           
  1105  0023                     even_check@res:	
  1106                           ; 1 bytes @ 0x3
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x3
  1110  0023                     	ds	1
  1111  0024                     ??_sys_init:	
  1112  0024                     ??_SPI_send_string:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115  0024                     remote_gkey@pbuf:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118  0024                     even_check@data:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  0024                     getBit@n:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124  0024                     data_construct@temp_buf:	
  1125                           ; 2 bytes @ 0x4
  1126                           
  1127                           
  1128                           ; 8 bytes @ 0x4
  1129  0024                     	ds	1
  1130  0025                     ?_Uart1SendString:	
  1131  0025                     SPI_send_string@str:	
  1132                           ; 1 bytes @ 0x5
  1133                           
  1134  0025                     remote_gkey@index:	
  1135                           ; 1 bytes @ 0x5
  1136                           
  1137  0025                     Uart1SendString@DatLong:	
  1138                           ; 1 bytes @ 0x5
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x5
  1142  0025                     	ds	1
  1143  0026                     ??_getBit:	
  1144  0026                     ??_Uart1SendString:	
  1145                           ; 1 bytes @ 0x6
  1146                           
  1147  0026                     SPI_send_string@index:	
  1148                           ; 1 bytes @ 0x6
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x6
  1152  0026                     	ds	1
  1153  0027                     SPI_send_string@index_delay:	
  1154  0027                     Uart1SendString@a:	
  1155                           ; 1 bytes @ 0x7
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x7
  1159  0027                     	ds	1
  1160  0028                     Uart1SendString@i:	
  1161                           
  1162                           ; 1 bytes @ 0x8
  1163  0028                     	ds	2
  1164  002A                     getBit@byidx:	
  1165                           
  1166                           ; 1 bytes @ 0xA
  1167  002A                     	ds	1
  1168  002B                     getBit@btidx:	
  1169                           
  1170                           ; 1 bytes @ 0xB
  1171  002B                     	ds	1
  1172  002C                     ?_DEcrypt:	
  1173  002C                     data_construct@index:	
  1174                           ; 1 bytes @ 0xC
  1175                           
  1176  002C                     DEcrypt@_key:	
  1177                           ; 1 bytes @ 0xC
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0xC
  1181  002C                     	ds	1
  1182  002D                     data_construct@buf:	
  1183                           
  1184                           ; 1 bytes @ 0xD
  1185  002D                     	ds	1
  1186  002E                     ??_DEcrypt:	
  1187                           
  1188                           ; 1 bytes @ 0xE
  1189  002E                     	ds	19
  1190  0041                     DEcrypt@res:	
  1191                           
  1192                           ; 1 bytes @ 0x21
  1193  0041                     	ds	1
  1194  0042                     DEcrypt@bitk:	
  1195                           
  1196                           ; 4 bytes @ 0x22
  1197  0042                     	ds	4
  1198  0046                     DEcrypt@index:	
  1199                           
  1200                           ; 2 bytes @ 0x26
  1201  0046                     	ds	2
  1202  0048                     DEcrypt@source:	
  1203                           
  1204                           ; 1 bytes @ 0x28
  1205  0048                     	ds	1
  1206  0049                     ??_remote_hits:	
  1207                           
  1208                           ; 1 bytes @ 0x29
  1209  0049                     	ds	2
  1210  004B                     remote_hits@buf:	
  1211                           
  1212                           ; 1 bytes @ 0x2B
  1213  004B                     	ds	1
  1214  004C                     remote_hits@lrn_buf:	
  1215                           
  1216                           ; 8 bytes @ 0x2C
  1217  004C                     	ds	8
  1218  0054                     remote_hits@rf_buf:	
  1219                           
  1220                           ; 8 bytes @ 0x34
  1221  0054                     	ds	8
  1222  005C                     remote_hits@index:	
  1223                           
  1224                           ; 1 bytes @ 0x3C
  1225  005C                     	ds	1
  1226  005D                     ??_main_process:	
  1227                           
  1228                           ; 1 bytes @ 0x3D
  1229  005D                     	ds	1
  1230  005E                     main_process@buf:	
  1231                           
  1232                           ; 8 bytes @ 0x3E
  1233  005E                     	ds	8
  1234  0066                     ?_main:	
  1235  0066                     main@argc:	
  1236                           ; 2 bytes @ 0x46
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0x46
  1240  0066                     	ds	2
  1241  0068                     main@argv:	
  1242                           
  1243                           ; 2 bytes @ 0x48
  1244  0068                     	ds	2
  1245  006A                     ??_main:	
  1246                           
  1247                           	psect	maintext
  1248  0534                     __pmaintext:	
  1249                           ; 1 bytes @ 0x4A
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 34 in file "source/main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  argc            2   70[BANK0 ] int 
  1258 ;;  argv            2   72[BANK0 ] PTR PTR unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2   70[BANK0 ] int 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : B1F/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1
  1270 ;;      Params:         0       4       0
  1271 ;;      Locals:         0       0       0
  1272 ;;      Temps:          0       0       0
  1273 ;;      Totals:         0       4       0
  1274 ;;Total ram usage:        4 bytes
  1275 ;; Hardware stack levels required when called:    7
  1276 ;; This function calls:
  1277 ;;		_main_process
  1278 ;;		_sys_init
  1279 ;;		_sys_task
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _main
  1287  0534                     _main:	
  1288                           
  1289                           ;main.c: 35: sys_init();
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1293  0534  24FD               	fcall	_sys_init
  1294  0535                     l1780:	
  1295                           ;main.c: 36: while(1u){
  1296                           
  1297                           
  1298                           ;main.c: 37: if ((0) == sys_task()) continue;
  1299  0535  2518               	fcall	_sys_task
  1300  0536  3A00               	xorlw	0
  1301  0537  1903               	btfsc	3,2
  1302  0538  2D35               	goto	l1780
  1303  0539  0064               	clrwdt	;# 
  1304                           
  1305                           ;main.c: 39: main_process();
  1306  053A  24E7               	fcall	_main_process
  1307  053B  2D35               	goto	l1780
  1308  053C                     __end_of_main:	
  1309                           
  1310                           	psect	text1
  1311  0518                     __ptext1:	
  1312 ;; *************** function _sys_task *****************
  1313 ;; Defined at:
  1314 ;;		line 26 in file "source/timer.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      unsigned char 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1
  1328 ;;      Params:         0       0       0
  1329 ;;      Locals:         0       0       0
  1330 ;;      Temps:          0       0       0
  1331 ;;      Totals:         0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    3
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _sys_task
  1344  0518                     _sys_task:	
  1345                           
  1346                           ;timer.c: 27: if (sys_cnt < 40) return (0);
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _sys_task: [wreg+status,2]
  1350  0518  3028               	movlw	40
  1351  0519  0020               	movlb	0	; select bank0
  1352  051A  026A               	subwf	_sys_cnt,w
  1353  051B  1803               	skipnc
  1354  051C  2D1F               	goto	l1682
  1355  051D  3000               	movlw	0
  1356  051E  0008               	return
  1357  051F                     l1682:	
  1358                           
  1359                           ;timer.c: 28: sys_cnt = 0;
  1360  051F  01EA               	clrf	_sys_cnt
  1361                           
  1362                           ;timer.c: 29: return (1);
  1363  0520  3001               	movlw	1
  1364  0521  0008               	return
  1365  0522                     __end_of_sys_task:	
  1366                           
  1367                           	psect	text2
  1368  04FD                     __ptext2:	
  1369 ;; *************** function _sys_init *****************
  1370 ;; Defined at:
  1371 ;;		line 43 in file "source/main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1
  1385 ;;      Params:         0       0       0
  1386 ;;      Locals:         0       0       0
  1387 ;;      Temps:          0       0       0
  1388 ;;      Totals:         0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		_Init_Uart
  1394 ;;		_SPI_init
  1395 ;;		_init_fosc
  1396 ;;		_init_timer0
  1397 ;;		_remote_init
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _sys_init
  1405  04FD                     _sys_init:	
  1406                           
  1407                           ;main.c: 44: init_fosc();
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _sys_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1411  04FD  2542               	fcall	_init_fosc
  1412                           
  1413                           ;main.c: 45: init_timer0();
  1414  04FE  2522               	fcall	_init_timer0
  1415                           
  1416                           ;main.c: 46: Init_Uart();
  1417  04FF  24B3               	fcall	_Init_Uart
  1418                           
  1419                           ;main.c: 47: remote_init();
  1420  0500  2431               	fcall	_remote_init
  1421                           
  1422                           ;main.c: 48: SPI_init();
  1423  0501  2496               	fcall	_SPI_init
  1424                           
  1425                           ;main.c: 49: GIE=1;
  1426  0502  178B               	bsf	11,7	;volatile
  1427                           
  1428                           ;main.c: 50: sys_ctrl.delay0 = 0;
  1429  0503  0021               	movlb	1	; select bank1
  1430  0504  01AE               	clrf	_sys_ctrl^(0+128)
  1431  0505  01AF               	clrf	(_sys_ctrl+1)^(0+128)
  1432                           
  1433                           ;main.c: 51: sys_ctrl.status = 0;
  1434  0506  01B2               	clrf	(_sys_ctrl^(0+128)+4)
  1435                           
  1436                           ;main.c: 52: sys_ctrl.delay1 = 250;
  1437  0507  30FA               	movlw	250
  1438  0508  00B0               	movwf	(_sys_ctrl^(0+128)+2)
  1439  0509  3000               	movlw	0
  1440  050A  00B1               	movwf	(_sys_ctrl^(0+128)+3)
  1441  050B  0008               	return
  1442  050C                     __end_of_sys_init:	
  1443                           
  1444                           	psect	text3
  1445  0431                     __ptext3:	
  1446 ;; *************** function _remote_init *****************
  1447 ;; Defined at:
  1448 ;;		line 15 in file "source/remote.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  index           1    3[BANK0 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1
  1462 ;;      Params:         0       0       0
  1463 ;;      Locals:         0       1       0
  1464 ;;      Temps:          0       1       0
  1465 ;;      Totals:         0       2       0
  1466 ;;Total ram usage:        2 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    3
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_sys_init
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _remote_init
  1478  0431                     _remote_init:	
  1479                           
  1480                           ;remote.c: 16: U08ET index;
  1481                           ;remote.c: 17: WPUC |= (1<<5);
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _remote_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  1485  0431  0024               	movlb	4	; select bank4
  1486  0432  168E               	bsf	14,5	;volatile
  1487                           
  1488                           ;remote.c: 18: TRISC |= (1<<5);
  1489  0433  0021               	movlb	1	; select bank1
  1490  0434  168E               	bsf	14,5	;volatile
  1491                           
  1492                           ;remote.c: 19: remoter.st_last = 0;
  1493  0435  1020               	bcf	_remoter^(0+128),0
  1494                           
  1495                           ;remote.c: 20: remoter.st_curt = 0;
  1496  0436  10A0               	bcf	_remoter^(0+128),1
  1497                           
  1498                           ;remote.c: 21: remoter.st_remo = (0);
  1499  0437  3003               	movlw	-253
  1500  0438  05A0               	andwf	_remoter^(0+128),f
  1501                           
  1502                           ;remote.c: 22: remoter.recvidx = 0;
  1503  0439  01A1               	clrf	(_remoter^(0+128)+1)
  1504                           
  1505                           ;remote.c: 23: for (index = 0; index < (8); index++) {
  1506  043A  0020               	movlb	0	; select bank0
  1507  043B  01A3               	clrf	remote_init@index
  1508  043C  3008               	movlw	8
  1509  043D  0223               	subwf	remote_init@index,w
  1510  043E  1803               	btfsc	3,0
  1511  043F  2C52               	goto	l1514
  1512  0440                     l1508:	
  1513                           
  1514                           ;remote.c: 24: remoter.rbuf[index] = 0;
  1515  0440  0823               	movf	remote_init@index,w
  1516  0441  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  1517  0442  0086               	movwf	6
  1518  0443  0187               	clrf	7
  1519  0444  0181               	clrf	1
  1520                           
  1521                           ;remote.c: 25: remoter.lbuf[index] = 0;
  1522  0445  0823               	movf	remote_init@index,w
  1523  0446  3EAA               	addlw	(low ((_remoter| 0+10)))& (0+255)
  1524  0447  0086               	movwf	6
  1525  0448  0187               	clrf	7
  1526  0449  0181               	clrf	1
  1527  044A  3001               	movlw	1
  1528  044B  00A2               	movwf	??_remote_init
  1529  044C  0822               	movf	??_remote_init,w
  1530  044D  07A3               	addwf	remote_init@index,f
  1531  044E  3008               	movlw	8
  1532  044F  0223               	subwf	remote_init@index,w
  1533  0450  1C03               	skipc
  1534  0451  2C40               	goto	l1508
  1535  0452                     l1514:	
  1536                           
  1537                           ;remote.c: 26: }
  1538                           ;remote.c: 27: de_code.delock = 0;
  1539  0452  01ED               	clrf	_de_code
  1540  0453  0008               	return
  1541  0454                     __end_of_remote_init:	
  1542                           ;remote.c: 28: return;
  1543                           
  1544                           
  1545                           	psect	text4
  1546  0522                     __ptext4:	
  1547 ;; *************** function _init_timer0 *****************
  1548 ;; Defined at:
  1549 ;;		line 8 in file "source/timer.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1
  1563 ;;      Params:         0       0       0
  1564 ;;      Locals:         0       0       0
  1565 ;;      Temps:          0       0       0
  1566 ;;      Totals:         0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_sys_init
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _init_timer0
  1579  0522                     _init_timer0:	
  1580                           
  1581                           ;timer.c: 9: OPTION_REG=0x81;
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _init_timer0: [wreg]
  1585  0522  3081               	movlw	129
  1586  0523  0021               	movlb	1	; select bank1
  1587  0524  0095               	movwf	21	;volatile
  1588                           
  1589                           ;timer.c: 10: TMR0IF=0;
  1590  0525  110B               	bcf	11,2	;volatile
  1591                           
  1592                           ;timer.c: 11: TMR0= 208;
  1593  0526  30D0               	movlw	208
  1594  0527  0020               	movlb	0	; select bank0
  1595  0528  0095               	movwf	21	;volatile
  1596                           
  1597                           ;timer.c: 12: T0IF=0;
  1598  0529  110B               	bcf	11,2	;volatile
  1599                           
  1600                           ;timer.c: 13: T0IE=1;
  1601  052A  168B               	bsf	11,5	;volatile
  1602  052B  0008               	return
  1603  052C                     __end_of_init_timer0:	
  1604                           
  1605                           	psect	text5
  1606  0542                     __ptext5:	
  1607 ;; *************** function _init_fosc *****************
  1608 ;; Defined at:
  1609 ;;		line 5 in file "source/clkset.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1
  1623 ;;      Params:         0       0       0
  1624 ;;      Locals:         0       0       0
  1625 ;;      Temps:          0       0       0
  1626 ;;      Totals:         0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    3
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_sys_init
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _init_fosc
  1639  0542                     _init_fosc:	
  1640                           
  1641                           ;clkset.c: 6: OSCCON= 0x78;
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _init_fosc: [wreg]
  1645  0542  3078               	movlw	120
  1646  0543  0021               	movlb	1	; select bank1
  1647  0544  0099               	movwf	25	;volatile
  1648                           
  1649                           ;clkset.c: 9: WDTCON = 0x10;
  1650  0545  3010               	movlw	16
  1651  0546  0097               	movwf	23	;volatile
  1652  0547  0008               	return
  1653  0548                     __end_of_init_fosc:	
  1654                           
  1655                           	psect	text6
  1656  0496                     __ptext6:	
  1657 ;; *************** function _SPI_init *****************
  1658 ;; Defined at:
  1659 ;;		line 4 in file "source/SPI.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1
  1673 ;;      Params:         0       0       0
  1674 ;;      Locals:         0       0       0
  1675 ;;      Temps:          0       1       0
  1676 ;;      Totals:         0       1       0
  1677 ;;Total ram usage:        1 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    3
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_sys_init
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _SPI_init
  1689  0496                     _SPI_init:	
  1690                           
  1691                           ;SPI.c: 6: APFCON &= ~(1 << 6);
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  1695  0496  30BF               	movlw	191
  1696  0497  0020               	movlb	0	; select bank0
  1697  0498  00A2               	movwf	??_SPI_init
  1698  0499  0822               	movf	??_SPI_init,w
  1699  049A  0022               	movlb	2	; select bank2
  1700  049B  059D               	andwf	29,f	;volatile
  1701                           
  1702                           ;SPI.c: 8: APFCON &= ~(1 << 5);
  1703  049C  30DF               	movlw	223
  1704  049D  0020               	movlb	0	; select bank0
  1705  049E  00A2               	movwf	??_SPI_init
  1706  049F  0822               	movf	??_SPI_init,w
  1707  04A0  0022               	movlb	2	; select bank2
  1708  04A1  059D               	andwf	29,f	;volatile
  1709                           
  1710                           ;SPI.c: 21: TRISC &= ~(1 << 3);
  1711  04A2  30F7               	movlw	247
  1712  04A3  0020               	movlb	0	; select bank0
  1713  04A4  00A2               	movwf	??_SPI_init
  1714  04A5  0822               	movf	??_SPI_init,w
  1715  04A6  0021               	movlb	1	; select bank1
  1716  04A7  058E               	andwf	14,f	;volatile
  1717                           
  1718                           ;SPI.c: 24: PIR1=0;
  1719  04A8  0020               	movlb	0	; select bank0
  1720  04A9  0191               	clrf	17	;volatile
  1721                           
  1722                           ;SPI.c: 26: SSP1STAT = 0x0;
  1723  04AA  0024               	movlb	4	; select bank4
  1724  04AB  0194               	clrf	20	;volatile
  1725                           
  1726                           ;SPI.c: 30: SSP1CON1 = 0x2a;
  1727  04AC  302A               	movlw	42
  1728  04AD  0095               	movwf	21	;volatile
  1729                           
  1730                           ;SPI.c: 32: SSP1ADD = 0x7;
  1731  04AE  3007               	movlw	7
  1732  04AF  0092               	movwf	18	;volatile
  1733                           
  1734                           ;SPI.c: 33: RC3 = 1;
  1735  04B0  0020               	movlb	0	; select bank0
  1736  04B1  158E               	bsf	14,3	;volatile
  1737  04B2  0008               	return
  1738  04B3                     __end_of_SPI_init:	
  1739                           
  1740                           	psect	text7
  1741  04B3                     __ptext7:	
  1742 ;; *************** function _Init_Uart *****************
  1743 ;; Defined at:
  1744 ;;		line 11 in file "source/usart.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1
  1758 ;;      Params:         0       0       0
  1759 ;;      Locals:         0       0       0
  1760 ;;      Temps:          0       0       0
  1761 ;;      Totals:         0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_sys_init
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _Init_Uart
  1774  04B3                     _Init_Uart:	
  1775                           
  1776                           ;usart.c: 13: APFCON |= (1<<7);
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _Init_Uart: [wreg]
  1780  04B3  0022               	movlb	2	; select bank2
  1781  04B4  179D               	bsf	29,7	;volatile
  1782                           
  1783                           ;usart.c: 14: APFCON |= (1<<2);
  1784  04B5  151D               	bsf	29,2	;volatile
  1785                           
  1786                           ;usart.c: 16: CSRC = 0;
  1787  04B6  0023               	movlb	3	; select bank3
  1788  04B7  139E               	bcf	30,7	;volatile
  1789                           
  1790                           ;usart.c: 17: TX9 = 1;
  1791  04B8  171E               	bsf	30,6	;volatile
  1792                           
  1793                           ;usart.c: 18: TXEN = 1;
  1794  04B9  169E               	bsf	30,5	;volatile
  1795                           
  1796                           ;usart.c: 19: SYNC=0;
  1797  04BA  121E               	bcf	30,4	;volatile
  1798                           
  1799                           ;usart.c: 20: BRGH=1;
  1800  04BB  151E               	bsf	30,2	;volatile
  1801                           
  1802                           ;usart.c: 21: BRG16 = 0;
  1803  04BC  119F               	bcf	31,3	;volatile
  1804                           
  1805                           ;usart.c: 22: TRMT=1;
  1806  04BD  149E               	bsf	30,1	;volatile
  1807                           
  1808                           ;usart.c: 25: SPEN = 1;
  1809  04BE  179D               	bsf	29,7	;volatile
  1810                           
  1811                           ;usart.c: 26: RX9 = 1;
  1812  04BF  171D               	bsf	29,6	;volatile
  1813                           
  1814                           ;usart.c: 27: SREN=1;
  1815  04C0  169D               	bsf	29,5	;volatile
  1816                           
  1817                           ;usart.c: 28: CREN=1;
  1818  04C1  161D               	bsf	29,4	;volatile
  1819                           
  1820                           ;usart.c: 29: ADDEN=0;
  1821  04C2  119D               	bcf	29,3	;volatile
  1822                           
  1823                           ;usart.c: 30: FERR=0;
  1824  04C3  111D               	bcf	29,2	;volatile
  1825                           
  1826                           ;usart.c: 31: OERR=0;
  1827  04C4  109D               	bcf	29,1	;volatile
  1828                           
  1829                           ;usart.c: 32: TRISC=0X80;
  1830  04C5  3080               	movlw	128
  1831  04C6  0021               	movlb	1	; select bank1
  1832  04C7  008E               	movwf	14	;volatile
  1833                           
  1834                           ;usart.c: 33: BAUDCON = (1<<3);
  1835  04C8  3008               	movlw	8
  1836  04C9  0023               	movlb	3	; select bank3
  1837  04CA  009F               	movwf	31	;volatile
  1838                           
  1839                           ;usart.c: 34: SPBRGH = 0x1;
  1840  04CB  3001               	movlw	1
  1841  04CC  009C               	movwf	28	;volatile
  1842                           
  1843                           ;usart.c: 35: SPBRGL = 0xa1;
  1844  04CD  30A1               	movlw	161
  1845  04CE  009B               	movwf	27	;volatile
  1846  04CF  0008               	return
  1847  04D0                     __end_of_Init_Uart:	
  1848                           
  1849                           	psect	text8
  1850  04E7                     __ptext8:	
  1851 ;; *************** function _main_process *****************
  1852 ;; Defined at:
  1853 ;;		line 55 in file "source/main.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  buf             8   62[BANK0 ] unsigned char [8]
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1
  1867 ;;      Params:         0       0       0
  1868 ;;      Locals:         0       8       0
  1869 ;;      Temps:          0       1       0
  1870 ;;      Totals:         0       9       0
  1871 ;;Total ram usage:        9 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    6
  1874 ;; This function calls:
  1875 ;;		_SPI_send_string
  1876 ;;		_Uart1SendString
  1877 ;;		_data_construct
  1878 ;;		_remote_hits
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _main_process
  1886  04E7                     _main_process:	
  1887                           
  1888                           ;main.c: 57: U08ET buf[8];
  1889                           ;main.c: 60: if ((1) == remote_hits(buf)) {
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _main_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1893  04E7  305E               	movlw	(low (main_process@buf| 0))& (0+255)
  1894  04E8  22AD               	fcall	_remote_hits
  1895  04E9  3A01               	xorlw	1
  1896  04EA  1D03               	skipz
  1897  04EB  0008               	return
  1898                           
  1899                           ;main.c: 61: data_construct(buf);
  1900  04EC  305E               	movlw	(low (main_process@buf| 0))& (0+255)
  1901  04ED  2320               	fcall	_data_construct
  1902                           
  1903                           ;main.c: 62: SPI_send_string((U08ET*)buf, 8);
  1904  04EE  3008               	movlw	8
  1905  04EF  0020               	movlb	0	; select bank0
  1906  04F0  00DD               	movwf	??_main_process
  1907  04F1  085D               	movf	??_main_process,w
  1908  04F2  00A3               	movwf	SPI_send_string@length
  1909  04F3  305E               	movlw	(low (main_process@buf| 0))& (0+255)
  1910  04F4  2454               	fcall	_SPI_send_string
  1911                           
  1912                           ;main.c: 63: Uart1SendString((U08ET*)buf, 8);
  1913  04F5  3008               	movlw	8
  1914  04F6  0020               	movlb	0	; select bank0
  1915  04F7  00DD               	movwf	??_main_process
  1916  04F8  085D               	movf	??_main_process,w
  1917  04F9  00A5               	movwf	Uart1SendString@DatLong
  1918  04FA  305E               	movlw	(low (main_process@buf| 0))& (0+255)
  1919  04FB  2405               	fcall	_Uart1SendString
  1920  04FC  0008               	return
  1921  04FD                     __end_of_main_process:	
  1922                           
  1923                           	psect	text9
  1924  02AD                     __ptext9:	
  1925 ;; *************** function _remote_hits *****************
  1926 ;; Defined at:
  1927 ;;		line 117 in file "source/remote.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  buf             1    wreg     PTR unsigned char 
  1930 ;;		 -> main_process@buf(8), 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  buf             1   43[BANK0 ] PTR unsigned char 
  1933 ;;		 -> main_process@buf(8), 
  1934 ;;  rf_buf          8   52[BANK0 ] unsigned char [8]
  1935 ;;  lrn_buf         8   44[BANK0 ] unsigned char [8]
  1936 ;;  index           1   60[BANK0 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      unsigned char 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1
  1946 ;;      Params:         0       0       0
  1947 ;;      Locals:         0      18       0
  1948 ;;      Temps:          0       2       0
  1949 ;;      Totals:         0      20       0
  1950 ;;Total ram usage:       20 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    5
  1953 ;; This function calls:
  1954 ;;		_DEcrypt
  1955 ;;		_remote_gkey
  1956 ;; This function is called by:
  1957 ;;		_main_process
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _remote_hits
  1963  02AD                     _remote_hits:	
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _remote_hits: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1967                           ;remote_hits@buf stored from wreg
  1968  02AD  0020               	movlb	0	; select bank0
  1969  02AE  00CB               	movwf	remote_hits@buf
  1970                           
  1971                           ;remote.c: 118: U08ET rf_buf[8], lrn_buf[8], index;
  1972                           ;remote.c: 120: if ((0) == remote_gkey(rf_buf)) return (0);
  1973  02AF  3054               	movlw	(low (remote_hits@rf_buf| 0))& (0+255)
  1974  02B0  2203               	fcall	_remote_gkey
  1975  02B1  3A00               	xorlw	0
  1976  02B2  1D03               	skipz
  1977  02B3  2AB6               	goto	l1524
  1978  02B4  3000               	movlw	0
  1979  02B5  0008               	return
  1980  02B6                     l1524:	
  1981                           
  1982                           ;remote.c: 121: lrn_buf[3] = rf_buf[7] & 0x0F | 0x20;
  1983  02B6  0020               	movlb	0	; select bank0
  1984  02B7  085B               	movf	remote_hits@rf_buf+7,w
  1985  02B8  390F               	andlw	15
  1986  02B9  3820               	iorlw	32
  1987  02BA  00C9               	movwf	??_remote_hits
  1988  02BB  0849               	movf	??_remote_hits,w
  1989  02BC  00CF               	movwf	remote_hits@lrn_buf+3
  1990                           
  1991                           ;remote.c: 122: lrn_buf[2] = rf_buf[6];
  1992  02BD  085A               	movf	remote_hits@rf_buf+6,w
  1993  02BE  00C9               	movwf	??_remote_hits
  1994  02BF  0849               	movf	??_remote_hits,w
  1995  02C0  00CE               	movwf	remote_hits@lrn_buf+2
  1996                           
  1997                           ;remote.c: 123: lrn_buf[1] = rf_buf[5];
  1998  02C1  0859               	movf	remote_hits@rf_buf+5,w
  1999  02C2  00C9               	movwf	??_remote_hits
  2000  02C3  0849               	movf	??_remote_hits,w
  2001  02C4  00CD               	movwf	remote_hits@lrn_buf+1
  2002                           
  2003                           ;remote.c: 124: lrn_buf[0] = rf_buf[4];
  2004  02C5  0858               	movf	remote_hits@rf_buf+4,w
  2005  02C6  00C9               	movwf	??_remote_hits
  2006  02C7  0849               	movf	??_remote_hits,w
  2007  02C8  00CC               	movwf	remote_hits@lrn_buf
  2008                           
  2009                           ;remote.c: 125: DEcrypt((u8*)lrn_buf, (u8*)CUSTOMER_code);
  2010  02C9  302C               	movlw	low (_CUSTOMER_code| (0+32768))
  2011  02CA  00AC               	movwf	DEcrypt@_key
  2012  02CB  3085               	movlw	high (_CUSTOMER_code| (0+32768))
  2013  02CC  00AD               	movwf	DEcrypt@_key+1
  2014  02CD  304C               	movlw	(low (remote_hits@lrn_buf| 0))& (0+255)
  2015  02CE  202C               	fcall	_DEcrypt
  2016                           
  2017                           ;remote.c: 126: lrn_buf[7] = rf_buf[7] & 0x0F | 0x60;
  2018  02CF  0020               	movlb	0	; select bank0
  2019  02D0  085B               	movf	remote_hits@rf_buf+7,w
  2020  02D1  390F               	andlw	15
  2021  02D2  3860               	iorlw	96
  2022  02D3  00C9               	movwf	??_remote_hits
  2023  02D4  0849               	movf	??_remote_hits,w
  2024  02D5  00D3               	movwf	remote_hits@lrn_buf+7
  2025                           
  2026                           ;remote.c: 127: lrn_buf[6] = rf_buf[6];
  2027  02D6  085A               	movf	remote_hits@rf_buf+6,w
  2028  02D7  00C9               	movwf	??_remote_hits
  2029  02D8  0849               	movf	??_remote_hits,w
  2030  02D9  00D2               	movwf	remote_hits@lrn_buf+6
  2031                           
  2032                           ;remote.c: 128: lrn_buf[5] = rf_buf[5];
  2033  02DA  0859               	movf	remote_hits@rf_buf+5,w
  2034  02DB  00C9               	movwf	??_remote_hits
  2035  02DC  0849               	movf	??_remote_hits,w
  2036  02DD  00D1               	movwf	remote_hits@lrn_buf+5
  2037                           
  2038                           ;remote.c: 129: lrn_buf[4] = rf_buf[4];
  2039  02DE  0858               	movf	remote_hits@rf_buf+4,w
  2040  02DF  00C9               	movwf	??_remote_hits
  2041  02E0  0849               	movf	??_remote_hits,w
  2042  02E1  00D0               	movwf	remote_hits@lrn_buf+4
  2043  02E2  0064               	clrwdt	;# 
  2044                           
  2045                           ;remote.c: 131: DEcrypt(((u8*)lrn_buf) + 4, (u8*)CUSTOMER_code);
  2046  02E3  302C               	movlw	low (_CUSTOMER_code| (0+32768))
  2047  02E4  0020               	movlb	0	; select bank0
  2048  02E5  00AC               	movwf	DEcrypt@_key
  2049  02E6  3085               	movlw	high (_CUSTOMER_code| (0+32768))
  2050  02E7  00AD               	movwf	DEcrypt@_key+1
  2051  02E8  3050               	movlw	(low ((remote_hits@lrn_buf| 0+4)))& (0+255)
  2052  02E9  202C               	fcall	_DEcrypt
  2053  02EA  0064               	clrwdt	;# 
  2054                           
  2055                           ;remote.c: 133: DEcrypt((u8*)rf_buf, (u8*)lrn_buf);
  2056  02EB  304C               	movlw	low remote_hits@lrn_buf
  2057  02EC  0020               	movlb	0	; select bank0
  2058  02ED  00AC               	movwf	DEcrypt@_key
  2059  02EE  3000               	movlw	high remote_hits@lrn_buf
  2060  02EF  00AD               	movwf	DEcrypt@_key+1
  2061  02F0  3054               	movlw	(low (remote_hits@rf_buf| 0))& (0+255)
  2062  02F1  202C               	fcall	_DEcrypt
  2063                           
  2064                           ;remote.c: 136: if((rf_buf[2] != rf_buf[4]) || ((rf_buf[3]&0xF0) != (rf_buf[7]&0xF0))) r
      +                          eturn (0);
  2065  02F2  0020               	movlb	0	; select bank0
  2066  02F3  0856               	movf	remote_hits@rf_buf+2,w
  2067  02F4  0658               	xorwf	remote_hits@rf_buf+4,w
  2068  02F5  1D03               	skipz
  2069  02F6  2B01               	goto	l1546
  2070  02F7  30F0               	movlw	240
  2071  02F8  055B               	andwf	remote_hits@rf_buf+7,w
  2072  02F9  00C9               	movwf	??_remote_hits
  2073  02FA  30F0               	movlw	240
  2074  02FB  0557               	andwf	remote_hits@rf_buf+3,w
  2075  02FC  00CA               	movwf	??_remote_hits+1
  2076  02FD  084A               	movf	??_remote_hits+1,w
  2077  02FE  0649               	xorwf	??_remote_hits,w
  2078  02FF  1903               	skipnz
  2079  0300  2B03               	goto	l1550
  2080  0301                     l1546:	
  2081  0301  3000               	movlw	0
  2082  0302  0008               	return
  2083  0303                     l1550:	
  2084                           
  2085                           ;remote.c: 137: for (index = 0; index < 8; index++) {
  2086  0303  01DC               	clrf	remote_hits@index
  2087  0304  3008               	movlw	8
  2088  0305  025C               	subwf	remote_hits@index,w
  2089  0306  1803               	btfsc	3,0
  2090  0307  2B1E               	goto	l1562
  2091  0308                     l1556:	
  2092                           
  2093                           ;remote.c: 138: buf[index] = rf_buf[index];
  2094  0308  085C               	movf	remote_hits@index,w
  2095  0309  3E54               	addlw	(low (remote_hits@rf_buf| 0))& (0+255)
  2096  030A  0086               	movwf	6
  2097  030B  0187               	clrf	7
  2098  030C  0801               	movf	1,w
  2099  030D  00C9               	movwf	??_remote_hits
  2100  030E  085C               	movf	remote_hits@index,w
  2101  030F  074B               	addwf	remote_hits@buf,w
  2102  0310  00CA               	movwf	??_remote_hits+1
  2103  0311  084A               	movf	??_remote_hits+1,w
  2104  0312  0086               	movwf	6
  2105  0313  0187               	clrf	7
  2106  0314  0849               	movf	??_remote_hits,w
  2107  0315  0081               	movwf	1
  2108  0316  3001               	movlw	1
  2109  0317  00C9               	movwf	??_remote_hits
  2110  0318  0849               	movf	??_remote_hits,w
  2111  0319  07DC               	addwf	remote_hits@index,f
  2112  031A  3008               	movlw	8
  2113  031B  025C               	subwf	remote_hits@index,w
  2114  031C  1C03               	skipc
  2115  031D  2B08               	goto	l1556
  2116  031E                     l1562:	
  2117                           
  2118                           ;remote.c: 139: }
  2119                           ;remote.c: 140: return (1);
  2120  031E  3001               	movlw	1
  2121  031F  0008               	return
  2122  0320                     __end_of_remote_hits:	
  2123                           
  2124                           	psect	text10
  2125  0203                     __ptext10:	
  2126 ;; *************** function _remote_gkey *****************
  2127 ;; Defined at:
  2128 ;;		line 71 in file "source/remote.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  pbuf            1    wreg     PTR unsigned char 
  2131 ;;		 -> remote_hits@rf_buf(8), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  pbuf            1    4[BANK0 ] PTR unsigned char 
  2134 ;;		 -> remote_hits@rf_buf(8), 
  2135 ;;  index           1    5[BANK0 ] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      unsigned char 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1
  2145 ;;      Params:         0       0       0
  2146 ;;      Locals:         0       2       0
  2147 ;;      Temps:          0       2       0
  2148 ;;      Totals:         0       4       0
  2149 ;;Total ram usage:        4 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    3
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_remote_hits
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _remote_gkey
  2161  0203                     _remote_gkey:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _remote_gkey: [wreg-fsr1h+status,2+status,0]
  2165                           ;remote_gkey@pbuf stored from wreg
  2166  0203  0020               	movlb	0	; select bank0
  2167  0204  00A4               	movwf	remote_gkey@pbuf
  2168                           
  2169                           ;remote.c: 72: U08ET index;
  2170                           ;remote.c: 74: if ((3) != remoter.st_remo) return (0);
  2171  0205  0021               	movlb	1	; select bank1
  2172  0206  0C20               	rrf	_remoter^(0+128),w
  2173  0207  0C89               	rrf	9,f
  2174  0208  393F               	andlw	63
  2175  0209  3A03               	xorlw	3
  2176  020A  1903               	skipnz
  2177  020B  2A0E               	goto	l1374
  2178  020C  3000               	movlw	0
  2179  020D  0008               	return
  2180  020E                     l1374:	
  2181                           
  2182                           ;remote.c: 76: if ((0x00 == remoter.rbuf[4]) && (0x00 == remoter.rbuf[5]) && (0x00 == re
      +                          moter.rbuf[6]) && (0x00 == (remoter.rbuf[7]&0x0F))) {
  2183  020E  0826               	movf	(_remoter^(0+128)+6),w
  2184  020F  1D03               	btfss	3,2
  2185  0210  2A1F               	goto	l1388
  2186  0211  0827               	movf	(_remoter^(0+128)+7),w
  2187  0212  1D03               	btfss	3,2
  2188  0213  2A1F               	goto	l1388
  2189  0214  0828               	movf	(_remoter^(0+128)+8),w
  2190  0215  1D03               	btfss	3,2
  2191  0216  2A1F               	goto	l1388
  2192  0217  0829               	movf	(_remoter^(0+128)+9),w
  2193  0218  390F               	andlw	15
  2194  0219  1D03               	btfss	3,2
  2195  021A  2A1F               	goto	l1388
  2196                           
  2197                           ;remote.c: 77: remoter.st_remo = (0);
  2198  021B  3003               	movlw	-253
  2199  021C  05A0               	andwf	_remoter^(0+128),f
  2200                           
  2201                           ;remote.c: 78: return (0);
  2202  021D  3000               	movlw	0
  2203  021E  0008               	return
  2204  021F                     l1388:	
  2205                           
  2206                           ;remote.c: 79: }
  2207                           ;remote.c: 81: if ((0xFF == remoter.rbuf[4]) && (0xFF == remoter.rbuf[5]) && (0xFF == re
      +                          moter.rbuf[6]) && (0x0F == (remoter.rbuf[7]&0x0F))) {
  2208  021F  0A26               	incf	(_remoter^(0+128)+6),w
  2209  0220  1D03               	btfss	3,2
  2210  0221  2A35               	goto	l1402
  2211  0222  0A27               	incf	(_remoter^(0+128)+7),w
  2212  0223  1D03               	btfss	3,2
  2213  0224  2A35               	goto	l1402
  2214  0225  0A28               	incf	(_remoter^(0+128)+8),w
  2215  0226  1D03               	btfss	3,2
  2216  0227  2A35               	goto	l1402
  2217  0228  300F               	movlw	15
  2218  0229  0529               	andwf	(_remoter^(0+128)+9),w
  2219  022A  0020               	movlb	0	; select bank0
  2220  022B  00A2               	movwf	??_remote_gkey
  2221  022C  300F               	movlw	15
  2222  022D  0622               	xorwf	??_remote_gkey,w
  2223  022E  1D03               	btfss	3,2
  2224  022F  2A35               	goto	l1402
  2225                           
  2226                           ;remote.c: 82: remoter.st_remo = (0);
  2227  0230  3003               	movlw	-253
  2228  0231  0021               	movlb	1	; select bank1
  2229  0232  05A0               	andwf	_remoter^(0+128),f
  2230                           
  2231                           ;remote.c: 83: return (0);
  2232  0233  3000               	movlw	0
  2233  0234  0008               	return
  2234  0235                     l1402:	
  2235                           
  2236                           ;remote.c: 84: }
  2237                           ;remote.c: 87: for (index = 0; index < 4; index++) {
  2238  0235  0020               	movlb	0	; select bank0
  2239  0236  01A5               	clrf	remote_gkey@index
  2240  0237  3004               	movlw	4
  2241  0238  0225               	subwf	remote_gkey@index,w
  2242  0239  1803               	btfsc	3,0
  2243  023A  2A4F               	goto	l1416
  2244  023B                     l1408:	
  2245                           
  2246                           ;remote.c: 88: if (remoter.rbuf[index] != remoter.lbuf[index])
  2247  023B  0825               	movf	remote_gkey@index,w
  2248  023C  3EAA               	addlw	(low ((_remoter| 0+10)))& (0+255)
  2249  023D  0086               	movwf	6
  2250  023E  0187               	clrf	7
  2251  023F  0825               	movf	remote_gkey@index,w
  2252  0240  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  2253  0241  0084               	movwf	4
  2254  0242  0185               	clrf	5
  2255  0243  0800               	movf	0,w
  2256  0244  0601               	xorwf	1,w
  2257  0245  1D03               	btfss	3,2
  2258  0246  2A4F               	goto	l1416
  2259                           
  2260                           ;remote.c: 89: break;
  2261  0247  3001               	movlw	1
  2262  0248  00A2               	movwf	??_remote_gkey
  2263  0249  0822               	movf	??_remote_gkey,w
  2264  024A  07A5               	addwf	remote_gkey@index,f
  2265  024B  3004               	movlw	4
  2266  024C  0225               	subwf	remote_gkey@index,w
  2267  024D  1C03               	skipc
  2268  024E  2A3B               	goto	l1408
  2269  024F                     l1416:	
  2270                           
  2271                           ;remote.c: 90: }
  2272                           ;remote.c: 91: if (index == 4) {
  2273  024F  3004               	movlw	4
  2274  0250  0625               	xorwf	remote_gkey@index,w
  2275  0251  1D03               	btfss	3,2
  2276  0252  2A58               	goto	l1424
  2277                           
  2278                           ;remote.c: 92: remoter.st_remo = (0);
  2279  0253  3003               	movlw	-253
  2280  0254  0021               	movlb	1	; select bank1
  2281  0255  05A0               	andwf	_remoter^(0+128),f
  2282                           
  2283                           ;remote.c: 93: return (0);
  2284  0256  3000               	movlw	0
  2285  0257  0008               	return
  2286  0258                     l1424:	
  2287                           
  2288                           ;remote.c: 94: }
  2289                           ;remote.c: 97: for (index = 0; index < 4; index++) {
  2290  0258  0020               	movlb	0	; select bank0
  2291  0259  01A5               	clrf	remote_gkey@index
  2292  025A  3004               	movlw	4
  2293  025B  0225               	subwf	remote_gkey@index,w
  2294  025C  1803               	btfsc	3,0
  2295  025D  2A80               	goto	l1436
  2296  025E                     l1430:	
  2297                           
  2298                           ;remote.c: 98: remoter.lbuf[index] = remoter.rbuf[index];
  2299  025E  0825               	movf	remote_gkey@index,w
  2300  025F  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  2301  0260  0086               	movwf	6
  2302  0261  0187               	clrf	7
  2303  0262  0801               	movf	1,w
  2304  0263  00A2               	movwf	??_remote_gkey
  2305  0264  0825               	movf	remote_gkey@index,w
  2306  0265  3EAA               	addlw	(low ((_remoter| 0+10)))& (0+255)
  2307  0266  0086               	movwf	6
  2308  0267  0187               	clrf	7
  2309  0268  0822               	movf	??_remote_gkey,w
  2310  0269  0081               	movwf	1
  2311                           
  2312                           ;remote.c: 99: pbuf[index] = remoter.rbuf[index];
  2313  026A  0825               	movf	remote_gkey@index,w
  2314  026B  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  2315  026C  0086               	movwf	6
  2316  026D  0187               	clrf	7
  2317  026E  0801               	movf	1,w
  2318  026F  00A2               	movwf	??_remote_gkey
  2319  0270  0825               	movf	remote_gkey@index,w
  2320  0271  0724               	addwf	remote_gkey@pbuf,w
  2321  0272  00A3               	movwf	??_remote_gkey+1
  2322  0273  0823               	movf	??_remote_gkey+1,w
  2323  0274  0086               	movwf	6
  2324  0275  0187               	clrf	7
  2325  0276  0822               	movf	??_remote_gkey,w
  2326  0277  0081               	movwf	1
  2327  0278  3001               	movlw	1
  2328  0279  00A2               	movwf	??_remote_gkey
  2329  027A  0822               	movf	??_remote_gkey,w
  2330  027B  07A5               	addwf	remote_gkey@index,f
  2331  027C  3004               	movlw	4
  2332  027D  0225               	subwf	remote_gkey@index,w
  2333  027E  1C03               	skipc
  2334  027F  2A5E               	goto	l1430
  2335  0280                     l1436:	
  2336                           
  2337                           ;remote.c: 100: }
  2338                           ;remote.c: 101: pbuf[4] = remoter.rbuf[4];
  2339  0280  0021               	movlb	1	; select bank1
  2340  0281  0826               	movf	(_remoter^(0+128)+6),w
  2341  0282  0020               	movlb	0	; select bank0
  2342  0283  00A2               	movwf	??_remote_gkey
  2343  0284  0824               	movf	remote_gkey@pbuf,w
  2344  0285  3E04               	addlw	4
  2345  0286  0086               	movwf	6
  2346  0287  0187               	clrf	7
  2347  0288  0822               	movf	??_remote_gkey,w
  2348  0289  0081               	movwf	1
  2349                           
  2350                           ;remote.c: 102: pbuf[5] = remoter.rbuf[5];
  2351  028A  0021               	movlb	1	; select bank1
  2352  028B  0827               	movf	(_remoter^(0+128)+7),w
  2353  028C  0020               	movlb	0	; select bank0
  2354  028D  00A2               	movwf	??_remote_gkey
  2355  028E  0824               	movf	remote_gkey@pbuf,w
  2356  028F  3E05               	addlw	5
  2357  0290  0086               	movwf	6
  2358  0291  0187               	clrf	7
  2359  0292  0822               	movf	??_remote_gkey,w
  2360  0293  0081               	movwf	1
  2361                           
  2362                           ;remote.c: 103: pbuf[6] = remoter.rbuf[6];
  2363  0294  0021               	movlb	1	; select bank1
  2364  0295  0828               	movf	(_remoter^(0+128)+8),w
  2365  0296  0020               	movlb	0	; select bank0
  2366  0297  00A2               	movwf	??_remote_gkey
  2367  0298  0824               	movf	remote_gkey@pbuf,w
  2368  0299  3E06               	addlw	6
  2369  029A  0086               	movwf	6
  2370  029B  0187               	clrf	7
  2371  029C  0822               	movf	??_remote_gkey,w
  2372  029D  0081               	movwf	1
  2373                           
  2374                           ;remote.c: 104: pbuf[7] = remoter.rbuf[7];
  2375  029E  0021               	movlb	1	; select bank1
  2376  029F  0829               	movf	(_remoter^(0+128)+9),w
  2377  02A0  0020               	movlb	0	; select bank0
  2378  02A1  00A2               	movwf	??_remote_gkey
  2379  02A2  0824               	movf	remote_gkey@pbuf,w
  2380  02A3  3E07               	addlw	7
  2381  02A4  0086               	movwf	6
  2382  02A5  0187               	clrf	7
  2383  02A6  0822               	movf	??_remote_gkey,w
  2384  02A7  0081               	movwf	1
  2385                           
  2386                           ;remote.c: 106: remoter.st_remo = (0);
  2387  02A8  3003               	movlw	-253
  2388  02A9  0021               	movlb	1	; select bank1
  2389  02AA  05A0               	andwf	_remoter^(0+128),f
  2390                           
  2391                           ;remote.c: 107: return (1);
  2392  02AB  3001               	movlw	1
  2393  02AC  0008               	return
  2394  02AD                     __end_of_remote_gkey:	
  2395                           
  2396                           	psect	text11
  2397  002C                     __ptext11:	
  2398 ;; *************** function _DEcrypt *****************
  2399 ;; Defined at:
  2400 ;;		line 79 in file "source/keeloq.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  source          1    wreg     PTR unsigned char 
  2403 ;;		 -> remote_hits@lrn_buf(8), remote_hits@rf_buf(8), 
  2404 ;;  _key            2   12[BANK0 ] PTR unsigned char 
  2405 ;;		 -> CUSTOMER_code(8), remote_hits@lrn_buf(8), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  source          1   40[BANK0 ] PTR unsigned char 
  2408 ;;		 -> remote_hits@lrn_buf(8), remote_hits@rf_buf(8), 
  2409 ;;  bitk            4   34[BANK0 ] unsigned char [4]
  2410 ;;  index           2   38[BANK0 ] unsigned short 
  2411 ;;  res             1   33[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      PTR unsigned char 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1
  2421 ;;      Params:         0       2       0
  2422 ;;      Locals:         0       8       0
  2423 ;;      Temps:          0      19       0
  2424 ;;      Totals:         0      29       0
  2425 ;;Total ram usage:       29 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		_getBit
  2430 ;; This function is called by:
  2431 ;;		_remote_hits
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _DEcrypt
  2437  002C                     _DEcrypt:	
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _DEcrypt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2441                           ;DEcrypt@source stored from wreg
  2442  002C  0020               	movlb	0	; select bank0
  2443  002D  00C8               	movwf	DEcrypt@source
  2444                           
  2445                           ;keeloq.c: 81: U08ET bitk[4], res;
  2446                           ;keeloq.c: 82: U16ET index;
  2447                           ;keeloq.c: 83: for(index=0; index<528; index++) {
  2448  002E  01C6               	clrf	DEcrypt@index
  2449  002F  01C7               	clrf	DEcrypt@index+1
  2450  0030                     L1:	
  2451  0030  3002               	movlw	2
  2452  0031  0247               	subwf	DEcrypt@index+1,w
  2453  0032  3010               	movlw	16
  2454  0033  1903               	skipnz
  2455  0034  0246               	subwf	DEcrypt@index,w
  2456  0035  1803               	btfsc	3,0
  2457  0036  0008               	return
  2458                           
  2459                           ;keeloq.c: 84: bitk[0] = NLF[getBit(source,30)][getBit(source,25)][getBit(source,19)][ge
      +                          tBit(source, 8)][getBit(source,0)];
  2460  0037  0848               	movf	DEcrypt@source,w
  2461  0038  00A2               	movwf	getBit@source
  2462  0039  3000               	movlw	0
  2463  003A  00A3               	movwf	getBit@source+1
  2464  003B  3008               	movlw	8
  2465  003C  00A4               	movwf	getBit@n
  2466  003D  3000               	movlw	0
  2467  003E  00A5               	movwf	getBit@n+1
  2468  003F  23D5               	fcall	_getBit
  2469  0040  0020               	movlb	0	; select bank0
  2470  0041  00AE               	movwf	??_DEcrypt
  2471  0042  01AF               	clrf	??_DEcrypt+1
  2472  0043  35AE               	lslf	??_DEcrypt,f
  2473  0044  0DAF               	rlf	??_DEcrypt+1,f
  2474  0045  0848               	movf	DEcrypt@source,w
  2475  0046  00A2               	movwf	getBit@source
  2476  0047  3000               	movlw	0
  2477  0048  00A3               	movwf	getBit@source+1
  2478  0049  3013               	movlw	19
  2479  004A  00A4               	movwf	getBit@n
  2480  004B  3000               	movlw	0
  2481  004C  00A5               	movwf	getBit@n+1
  2482  004D  23D5               	fcall	_getBit
  2483  004E  0020               	movlb	0	; select bank0
  2484  004F  00B0               	movwf	??_DEcrypt+2
  2485  0050  01B1               	clrf	??_DEcrypt+3
  2486  0051  35B0               	lslf	??_DEcrypt+2,f
  2487  0052  0DB1               	rlf	??_DEcrypt+3,f
  2488  0053  35B0               	lslf	??_DEcrypt+2,f
  2489  0054  0DB1               	rlf	??_DEcrypt+3,f
  2490  0055  0848               	movf	DEcrypt@source,w
  2491  0056  00A2               	movwf	getBit@source
  2492  0057  3000               	movlw	0
  2493  0058  00A3               	movwf	getBit@source+1
  2494  0059  3019               	movlw	25
  2495  005A  00A4               	movwf	getBit@n
  2496  005B  3000               	movlw	0
  2497  005C  00A5               	movwf	getBit@n+1
  2498  005D  23D5               	fcall	_getBit
  2499  005E  0020               	movlb	0	; select bank0
  2500  005F  00B2               	movwf	??_DEcrypt+4
  2501  0060  01B3               	clrf	??_DEcrypt+5
  2502  0061  35B2               	lslf	??_DEcrypt+4,f
  2503  0062  0DB3               	rlf	??_DEcrypt+5,f
  2504  0063  35B2               	lslf	??_DEcrypt+4,f
  2505  0064  0DB3               	rlf	??_DEcrypt+5,f
  2506  0065  35B2               	lslf	??_DEcrypt+4,f
  2507  0066  0DB3               	rlf	??_DEcrypt+5,f
  2508  0067  0848               	movf	DEcrypt@source,w
  2509  0068  00A2               	movwf	getBit@source
  2510  0069  3000               	movlw	0
  2511  006A  00A3               	movwf	getBit@source+1
  2512  006B  301E               	movlw	30
  2513  006C  00A4               	movwf	getBit@n
  2514  006D  3000               	movlw	0
  2515  006E  00A5               	movwf	getBit@n+1
  2516  006F  23D5               	fcall	_getBit
  2517  0070  0020               	movlb	0	; select bank0
  2518  0071  00B4               	movwf	??_DEcrypt+6
  2519  0072  01B5               	clrf	??_DEcrypt+7
  2520  0073  0EB4               	swapf	??_DEcrypt+6,f
  2521  0074  0EB5               	swapf	??_DEcrypt+7,f
  2522  0075  30F0               	movlw	240
  2523  0076  05B5               	andwf	??_DEcrypt+7,f
  2524  0077  0834               	movf	??_DEcrypt+6,w
  2525  0078  390F               	andlw	15
  2526  0079  04B5               	iorwf	??_DEcrypt+7,f
  2527  007A  30F0               	movlw	240
  2528  007B  05B4               	andwf	??_DEcrypt+6,f
  2529  007C  3076               	movlw	low (_NLF| (0+32768))
  2530  007D  00B6               	movwf	??_DEcrypt+8
  2531  007E  3084               	movlw	high (_NLF| (0+32768))
  2532  007F  00B7               	movwf	??_DEcrypt+9
  2533  0080  0834               	movf	??_DEcrypt+6,w
  2534  0081  0736               	addwf	??_DEcrypt+8,w
  2535  0082  00B8               	movwf	??_DEcrypt+10
  2536  0083  0835               	movf	??_DEcrypt+7,w
  2537  0084  3D37               	addwfc	??_DEcrypt+9,w
  2538  0085  00B9               	movwf	??_DEcrypt+11
  2539  0086  0832               	movf	??_DEcrypt+4,w
  2540  0087  0738               	addwf	??_DEcrypt+10,w
  2541  0088  00BA               	movwf	??_DEcrypt+12
  2542  0089  0833               	movf	??_DEcrypt+5,w
  2543  008A  3D39               	addwfc	??_DEcrypt+11,w
  2544  008B  00BB               	movwf	??_DEcrypt+13
  2545  008C  0830               	movf	??_DEcrypt+2,w
  2546  008D  073A               	addwf	??_DEcrypt+12,w
  2547  008E  00BC               	movwf	??_DEcrypt+14
  2548  008F  0831               	movf	??_DEcrypt+3,w
  2549  0090  3D3B               	addwfc	??_DEcrypt+13,w
  2550  0091  00BD               	movwf	??_DEcrypt+15
  2551  0092  082E               	movf	??_DEcrypt,w
  2552  0093  073C               	addwf	??_DEcrypt+14,w
  2553  0094  00BE               	movwf	??_DEcrypt+16
  2554  0095  082F               	movf	??_DEcrypt+1,w
  2555  0096  3D3D               	addwfc	??_DEcrypt+15,w
  2556  0097  00BF               	movwf	??_DEcrypt+17
  2557  0098  0848               	movf	DEcrypt@source,w
  2558  0099  00A2               	movwf	getBit@source
  2559  009A  3000               	movlw	0
  2560  009B  00A3               	movwf	getBit@source+1
  2561  009C  3000               	movlw	0
  2562  009D  00A4               	movwf	getBit@n
  2563  009E  00A5               	movwf	getBit@n+1
  2564  009F  23D5               	fcall	_getBit
  2565  00A0  0020               	movlb	0	; select bank0
  2566  00A1  073E               	addwf	??_DEcrypt+16,w
  2567  00A2  0084               	movwf	4
  2568  00A3  083F               	movf	??_DEcrypt+17,w
  2569  00A4  1803               	skipnc
  2570  00A5  0A3F               	incf	??_DEcrypt+17,w
  2571  00A6  0085               	movwf	5
  2572  00A7  0800               	movf	0,w	;code access
  2573  00A8  00C0               	movwf	??_DEcrypt+18
  2574  00A9  0840               	movf	??_DEcrypt+18,w
  2575  00AA  00C2               	movwf	DEcrypt@bitk
  2576                           
  2577                           ;keeloq.c: 85: bitk[1] = getBit(source, 15);
  2578  00AB  0848               	movf	DEcrypt@source,w
  2579  00AC  00A2               	movwf	getBit@source
  2580  00AD  3000               	movlw	0
  2581  00AE  00A3               	movwf	getBit@source+1
  2582  00AF  300F               	movlw	15
  2583  00B0  00A4               	movwf	getBit@n
  2584  00B1  3000               	movlw	0
  2585  00B2  00A5               	movwf	getBit@n+1
  2586  00B3  23D5               	fcall	_getBit
  2587  00B4  0020               	movlb	0	; select bank0
  2588  00B5  00AE               	movwf	??_DEcrypt
  2589  00B6  082E               	movf	??_DEcrypt,w
  2590  00B7  00C3               	movwf	DEcrypt@bitk+1
  2591                           
  2592                           ;keeloq.c: 86: bitk[2] = getBit(source, 31);
  2593  00B8  0848               	movf	DEcrypt@source,w
  2594  00B9  00A2               	movwf	getBit@source
  2595  00BA  3000               	movlw	0
  2596  00BB  00A3               	movwf	getBit@source+1
  2597  00BC  301F               	movlw	31
  2598  00BD  00A4               	movwf	getBit@n
  2599  00BE  3000               	movlw	0
  2600  00BF  00A5               	movwf	getBit@n+1
  2601  00C0  23D5               	fcall	_getBit
  2602  00C1  0020               	movlb	0	; select bank0
  2603  00C2  00AE               	movwf	??_DEcrypt
  2604  00C3  082E               	movf	??_DEcrypt,w
  2605  00C4  00C4               	movwf	DEcrypt@bitk+2
  2606                           
  2607                           ;keeloq.c: 87: bitk[3] = getBit(_key, (527-index)%64);
  2608  00C5  082D               	movf	DEcrypt@_key+1,w
  2609  00C6  00A3               	movwf	getBit@source+1
  2610  00C7  082C               	movf	DEcrypt@_key,w
  2611  00C8  00A2               	movwf	getBit@source
  2612  00C9  0946               	comf	DEcrypt@index,w
  2613  00CA  00AE               	movwf	??_DEcrypt
  2614  00CB  0947               	comf	DEcrypt@index+1,w
  2615  00CC  00AF               	movwf	??_DEcrypt+1
  2616  00CD  0AAE               	incf	??_DEcrypt,f
  2617  00CE  1903               	skipnz
  2618  00CF  0AAF               	incf	??_DEcrypt+1,f
  2619  00D0  082E               	movf	??_DEcrypt,w
  2620  00D1  3E0F               	addlw	15
  2621  00D2  00B0               	movwf	??_DEcrypt+2
  2622  00D3  3002               	movlw	2
  2623  00D4  3D2F               	addwfc	??_DEcrypt+1,w
  2624  00D5  00B1               	movwf	??_DEcrypt+3
  2625  00D6  303F               	movlw	63
  2626  00D7  0530               	andwf	??_DEcrypt+2,w
  2627  00D8  00A4               	movwf	getBit@n
  2628  00D9  3000               	movlw	0
  2629  00DA  0531               	andwf	??_DEcrypt+3,w
  2630  00DB  00A5               	movwf	getBit@n+1
  2631  00DC  23D5               	fcall	_getBit
  2632  00DD  0020               	movlb	0	; select bank0
  2633  00DE  00B2               	movwf	??_DEcrypt+4
  2634  00DF  0832               	movf	??_DEcrypt+4,w
  2635  00E0  00C5               	movwf	DEcrypt@bitk+3
  2636                           
  2637                           ;keeloq.c: 88: res = bitk[0]^bitk[1]^bitk[2]^bitk[3];
  2638  00E1  0843               	movf	DEcrypt@bitk+1,w
  2639  00E2  0644               	xorwf	DEcrypt@bitk+2,w
  2640  00E3  0645               	xorwf	DEcrypt@bitk+3,w
  2641  00E4  0642               	xorwf	DEcrypt@bitk,w
  2642  00E5  00AE               	movwf	??_DEcrypt
  2643  00E6  082E               	movf	??_DEcrypt,w
  2644  00E7  00C1               	movwf	DEcrypt@res
  2645                           
  2646                           ;keeloq.c: 89: source[3] = (source[3]<<1) | (source[2]>>7);
  2647  00E8  0848               	movf	DEcrypt@source,w
  2648  00E9  3E02               	addlw	2
  2649  00EA  0086               	movwf	6
  2650  00EB  0187               	clrf	7
  2651  00EC  0801               	movf	1,w
  2652  00ED  00AE               	movwf	??_DEcrypt
  2653  00EE  3007               	movlw	7
  2654  00EF                     u1075:	
  2655  00EF  36AE               	lsrf	??_DEcrypt,f
  2656  00F0  0B89               	decfsz	9,f
  2657  00F1  28EF               	goto	u1075
  2658  00F2  0848               	movf	DEcrypt@source,w
  2659  00F3  3E03               	addlw	3
  2660  00F4  0086               	movwf	6
  2661  00F5  0187               	clrf	7
  2662  00F6  3501               	lslf	1,w
  2663  00F7  042E               	iorwf	??_DEcrypt,w
  2664  00F8  00AF               	movwf	??_DEcrypt+1
  2665  00F9  0848               	movf	DEcrypt@source,w
  2666  00FA  3E03               	addlw	3
  2667  00FB  0086               	movwf	6
  2668  00FC  0187               	clrf	7
  2669  00FD  082F               	movf	??_DEcrypt+1,w
  2670  00FE  0081               	movwf	1
  2671                           
  2672                           ;keeloq.c: 90: source[2] = (source[2]<<1) | (source[1]>>7);
  2673  00FF  0A48               	incf	DEcrypt@source,w
  2674  0100  0086               	movwf	6
  2675  0101  0187               	clrf	7
  2676  0102  0801               	movf	1,w
  2677  0103  00AE               	movwf	??_DEcrypt
  2678  0104  3007               	movlw	7
  2679  0105                     u1085:	
  2680  0105  36AE               	lsrf	??_DEcrypt,f
  2681  0106  0B89               	decfsz	9,f
  2682  0107  2905               	goto	u1085
  2683  0108  0848               	movf	DEcrypt@source,w
  2684  0109  3E02               	addlw	2
  2685  010A  0086               	movwf	6
  2686  010B  0187               	clrf	7
  2687  010C  3501               	lslf	1,w
  2688  010D  042E               	iorwf	??_DEcrypt,w
  2689  010E  00AF               	movwf	??_DEcrypt+1
  2690  010F  0848               	movf	DEcrypt@source,w
  2691  0110  3E02               	addlw	2
  2692  0111  0086               	movwf	6
  2693  0112  0187               	clrf	7
  2694  0113  082F               	movf	??_DEcrypt+1,w
  2695  0114  0081               	movwf	1
  2696                           
  2697                           ;keeloq.c: 91: source[1] = (source[1]<<1) | (source[0]>>7);
  2698  0115  0848               	movf	DEcrypt@source,w
  2699  0116  0086               	movwf	6
  2700  0117  0187               	clrf	7
  2701  0118  0801               	movf	1,w
  2702  0119  00AE               	movwf	??_DEcrypt
  2703  011A  3007               	movlw	7
  2704  011B                     u1095:	
  2705  011B  36AE               	lsrf	??_DEcrypt,f
  2706  011C  0B89               	decfsz	9,f
  2707  011D  291B               	goto	u1095
  2708  011E  0A48               	incf	DEcrypt@source,w
  2709  011F  0086               	movwf	6
  2710  0120  0187               	clrf	7
  2711  0121  3501               	lslf	1,w
  2712  0122  042E               	iorwf	??_DEcrypt,w
  2713  0123  00AF               	movwf	??_DEcrypt+1
  2714  0124  0A48               	incf	DEcrypt@source,w
  2715  0125  0086               	movwf	6
  2716  0126  0187               	clrf	7
  2717  0127  082F               	movf	??_DEcrypt+1,w
  2718  0128  0081               	movwf	1
  2719                           
  2720                           ;keeloq.c: 92: source[0] = (source[0]<<1) | (res);
  2721  0129  0848               	movf	DEcrypt@source,w
  2722  012A  0086               	movwf	6
  2723  012B  0187               	clrf	7
  2724  012C  3501               	lslf	1,w
  2725  012D  0441               	iorwf	DEcrypt@res,w
  2726  012E  00AE               	movwf	??_DEcrypt
  2727  012F  0848               	movf	DEcrypt@source,w
  2728  0130  0086               	movwf	6
  2729  0131  0187               	clrf	7
  2730  0132  082E               	movf	??_DEcrypt,w
  2731  0133  0081               	movwf	1
  2732  0134  3001               	movlw	1
  2733  0135  07C6               	addwf	DEcrypt@index,f
  2734  0136  3000               	movlw	0
  2735  0137  3DC7               	addwfc	DEcrypt@index+1,f
  2736  0138  2830               	goto	L1
  2737  0139                     __end_of_DEcrypt:	
  2738                           ;keeloq.c: 93: }
  2739                           ;keeloq.c: 94: return source;
  2740                           ;	Return value of _DEcrypt is never used
  2741                           
  2742                           
  2743                           	psect	text12
  2744  03D5                     __ptext12:	
  2745 ;; *************** function _getBit *****************
  2746 ;; Defined at:
  2747 ;;		line 105 in file "source/keeloq.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  source          2    2[BANK0 ] PTR unsigned char 
  2750 ;;		 -> CUSTOMER_code(8), remote_hits@lrn_buf(8), remote_hits@rf_buf(8), 
  2751 ;;  n               2    4[BANK0 ] unsigned short 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  btidx           1   11[BANK0 ] unsigned char 
  2754 ;;  byidx           1   10[BANK0 ] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1
  2764 ;;      Params:         0       4       0
  2765 ;;      Locals:         0       2       0
  2766 ;;      Temps:          0       4       0
  2767 ;;      Totals:         0      10       0
  2768 ;;Total ram usage:       10 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    3
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_DEcrypt
  2775 ;;		_ENcrypt
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _getBit
  2781  03D5                     _getBit:	
  2782                           
  2783                           ;keeloq.c: 107: U08ET byidx, btidx;
  2784                           ;keeloq.c: 109: byidx = n/8;
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _getBit: [wreg-fsr0h+status,2+status,0+pclath]
  2788  03D5  0020               	movlb	0	; select bank0
  2789  03D6  0825               	movf	getBit@n+1,w
  2790  03D7  00A7               	movwf	??_getBit+1
  2791  03D8  0824               	movf	getBit@n,w
  2792  03D9  00A6               	movwf	??_getBit
  2793  03DA  36A7               	lsrf	??_getBit+1,f
  2794  03DB  0CA6               	rrf	??_getBit,f
  2795  03DC  36A7               	lsrf	??_getBit+1,f
  2796  03DD  0CA6               	rrf	??_getBit,f
  2797  03DE  36A7               	lsrf	??_getBit+1,f
  2798  03DF  0CA6               	rrf	??_getBit,f
  2799  03E0  0826               	movf	??_getBit,w
  2800  03E1  00A8               	movwf	??_getBit+2
  2801  03E2  0828               	movf	??_getBit+2,w
  2802  03E3  00AA               	movwf	getBit@byidx
  2803                           
  2804                           ;keeloq.c: 110: btidx = n%8;
  2805  03E4  0824               	movf	getBit@n,w
  2806  03E5  3907               	andlw	7
  2807  03E6  00A6               	movwf	??_getBit
  2808  03E7  0826               	movf	??_getBit,w
  2809  03E8  00AB               	movwf	getBit@btidx
  2810                           
  2811                           ;keeloq.c: 112: if( 0 == (source[byidx] & (1<<btidx)) ) {
  2812  03E9  0823               	movf	getBit@source+1,w
  2813  03EA  00A7               	movwf	??_getBit+1
  2814  03EB  0822               	movf	getBit@source,w
  2815  03EC  00A6               	movwf	??_getBit
  2816  03ED  082A               	movf	getBit@byidx,w
  2817  03EE  0726               	addwf	??_getBit,w
  2818  03EF  0084               	movwf	4
  2819  03F0  0827               	movf	??_getBit+1,w
  2820  03F1  1803               	skipnc
  2821  03F2  0A27               	incf	??_getBit+1,w
  2822  03F3  0085               	movwf	5
  2823  03F4  0800               	movf	0,w	;code access
  2824  03F5  00A8               	movwf	??_getBit+2
  2825  03F6  3001               	movlw	1
  2826  03F7  00A9               	movwf	??_getBit+3
  2827  03F8  0A2B               	incf	getBit@btidx,w
  2828  03F9  2BFB               	goto	u1034
  2829  03FA                     u1035:	
  2830  03FA  35A9               	lslf	??_getBit+3,f
  2831  03FB                     u1034:	
  2832  03FB  0B89               	decfsz	9,f
  2833  03FC  2BFA               	goto	u1035
  2834  03FD  0829               	movf	??_getBit+3,w
  2835  03FE  0528               	andwf	??_getBit+2,w
  2836  03FF  1D03               	btfss	3,2
  2837  0400  2C03               	goto	l1338
  2838                           
  2839                           ;keeloq.c: 113: return 0;
  2840  0401  3000               	movlw	0
  2841                           
  2842                           ;keeloq.c: 114: }
  2843  0402  0008               	return
  2844  0403                     l1338:	
  2845                           
  2846                           ;keeloq.c: 115: else{
  2847                           ;keeloq.c: 116: return 1;
  2848  0403  3001               	movlw	1
  2849  0404  0008               	return
  2850  0405                     __end_of_getBit:	
  2851                           
  2852                           	psect	text13
  2853  0320                     __ptext13:	
  2854 ;; *************** function _data_construct *****************
  2855 ;; Defined at:
  2856 ;;		line 68 in file "source/main.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  buf             1    wreg     PTR unsigned char 
  2859 ;;		 -> main_process@buf(8), 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  2862 ;;		 -> main_process@buf(8), 
  2863 ;;  temp_buf        8    4[BANK0 ] unsigned char [8]
  2864 ;;  index           1   12[BANK0 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1
  2874 ;;      Params:         0       0       0
  2875 ;;      Locals:         0      10       0
  2876 ;;      Temps:          0       2       0
  2877 ;;      Totals:         0      12       0
  2878 ;;Total ram usage:       12 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    3
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_main_process
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _data_construct
  2890  0320                     _data_construct:	
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _data_construct: [wreg+fsr1l+fsr1h+status,2+status,0]
  2894                           ;data_construct@buf stored from wreg
  2895  0320  0020               	movlb	0	; select bank0
  2896  0321  00AD               	movwf	data_construct@buf
  2897                           
  2898                           ;main.c: 69: u8 temp_buf[8], index;
  2899                           ;main.c: 70: for (index = 0; index < 8; index++)temp_buf[index] = buf[index];
  2900  0322  01AC               	clrf	data_construct@index
  2901  0323  3008               	movlw	8
  2902  0324  022C               	subwf	data_construct@index,w
  2903  0325  1803               	btfsc	3,0
  2904  0326  2B3D               	goto	l1578
  2905  0327                     l1572:	
  2906  0327  082C               	movf	data_construct@index,w
  2907  0328  072D               	addwf	data_construct@buf,w
  2908  0329  00A2               	movwf	??_data_construct
  2909  032A  0822               	movf	??_data_construct,w
  2910  032B  0086               	movwf	6
  2911  032C  0187               	clrf	7
  2912  032D  0801               	movf	1,w
  2913  032E  00A3               	movwf	??_data_construct+1
  2914  032F  082C               	movf	data_construct@index,w
  2915  0330  3E24               	addlw	(low (data_construct@temp_buf| 0))& (0+255)
  2916  0331  0086               	movwf	6
  2917  0332  0187               	clrf	7
  2918  0333  0823               	movf	??_data_construct+1,w
  2919  0334  0081               	movwf	1
  2920  0335  3001               	movlw	1
  2921  0336  00A2               	movwf	??_data_construct
  2922  0337  0822               	movf	??_data_construct,w
  2923  0338  07AC               	addwf	data_construct@index,f
  2924  0339  3008               	movlw	8
  2925  033A  022C               	subwf	data_construct@index,w
  2926  033B  1C03               	skipc
  2927  033C  2B27               	goto	l1572
  2928  033D                     l1578:	
  2929                           
  2930                           ;main.c: 72: buf[0] = temp_buf[4];
  2931  033D  0828               	movf	data_construct@temp_buf+4,w
  2932  033E  00A2               	movwf	??_data_construct
  2933  033F  082D               	movf	data_construct@buf,w
  2934  0340  0086               	movwf	6
  2935  0341  0187               	clrf	7
  2936  0342  0822               	movf	??_data_construct,w
  2937  0343  0081               	movwf	1
  2938                           
  2939                           ;main.c: 73: buf[1] = temp_buf[5];
  2940  0344  0829               	movf	data_construct@temp_buf+5,w
  2941  0345  00A2               	movwf	??_data_construct
  2942  0346  0A2D               	incf	data_construct@buf,w
  2943  0347  0086               	movwf	6
  2944  0348  0187               	clrf	7
  2945  0349  0822               	movf	??_data_construct,w
  2946  034A  0081               	movwf	1
  2947                           
  2948                           ;main.c: 74: buf[2] = temp_buf[6];
  2949  034B  082A               	movf	data_construct@temp_buf+6,w
  2950  034C  00A2               	movwf	??_data_construct
  2951  034D  082D               	movf	data_construct@buf,w
  2952  034E  3E02               	addlw	2
  2953  034F  0086               	movwf	6
  2954  0350  0187               	clrf	7
  2955  0351  0822               	movf	??_data_construct,w
  2956  0352  0081               	movwf	1
  2957                           
  2958                           ;main.c: 75: buf[3] = temp_buf[7];
  2959  0353  082B               	movf	data_construct@temp_buf+7,w
  2960  0354  00A2               	movwf	??_data_construct
  2961  0355  082D               	movf	data_construct@buf,w
  2962  0356  3E03               	addlw	3
  2963  0357  0086               	movwf	6
  2964  0358  0187               	clrf	7
  2965  0359  0822               	movf	??_data_construct,w
  2966  035A  0081               	movwf	1
  2967                           
  2968                           ;main.c: 76: buf[3] &= 0x0f;
  2969  035B  300F               	movlw	15
  2970  035C  00A2               	movwf	??_data_construct
  2971  035D  082D               	movf	data_construct@buf,w
  2972  035E  3E03               	addlw	3
  2973  035F  0086               	movwf	6
  2974  0360  0187               	clrf	7
  2975  0361  0822               	movf	??_data_construct,w
  2976  0362  0581               	andwf	1,f
  2977                           
  2978                           ;main.c: 78: buf[4] = temp_buf[2];
  2979  0363  0826               	movf	data_construct@temp_buf+2,w
  2980  0364  00A2               	movwf	??_data_construct
  2981  0365  082D               	movf	data_construct@buf,w
  2982  0366  3E04               	addlw	4
  2983  0367  0086               	movwf	6
  2984  0368  0187               	clrf	7
  2985  0369  0822               	movf	??_data_construct,w
  2986  036A  0081               	movwf	1
  2987                           
  2988                           ;main.c: 79: buf[5] = temp_buf[3];
  2989  036B  0827               	movf	data_construct@temp_buf+3,w
  2990  036C  00A2               	movwf	??_data_construct
  2991  036D  082D               	movf	data_construct@buf,w
  2992  036E  3E05               	addlw	5
  2993  036F  0086               	movwf	6
  2994  0370  0187               	clrf	7
  2995  0371  0822               	movf	??_data_construct,w
  2996  0372  0081               	movwf	1
  2997                           
  2998                           ;main.c: 80: buf[6] = temp_buf[0];
  2999  0373  0824               	movf	data_construct@temp_buf,w
  3000  0374  00A2               	movwf	??_data_construct
  3001  0375  082D               	movf	data_construct@buf,w
  3002  0376  3E06               	addlw	6
  3003  0377  0086               	movwf	6
  3004  0378  0187               	clrf	7
  3005  0379  0822               	movf	??_data_construct,w
  3006  037A  0081               	movwf	1
  3007                           
  3008                           ;main.c: 81: buf[7] = temp_buf[1];
  3009  037B  0825               	movf	data_construct@temp_buf+1,w
  3010  037C  00A2               	movwf	??_data_construct
  3011  037D  082D               	movf	data_construct@buf,w
  3012  037E  3E07               	addlw	7
  3013  037F  0086               	movwf	6
  3014  0380  0187               	clrf	7
  3015  0381  0822               	movf	??_data_construct,w
  3016  0382  0081               	movwf	1
  3017  0383  0008               	return
  3018  0384                     __end_of_data_construct:	
  3019                           
  3020                           	psect	text14
  3021  0405                     __ptext14:	
  3022 ;; *************** function _Uart1SendString *****************
  3023 ;; Defined at:
  3024 ;;		line 58 in file "source/usart.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  a               1    wreg     PTR unsigned char 
  3027 ;;		 -> main_process@buf(8), 
  3028 ;;  DatLong         1    5[BANK0 ] unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  a               1    7[BANK0 ] PTR unsigned char 
  3031 ;;		 -> main_process@buf(8), 
  3032 ;;  i               1    8[BANK0 ] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1
  3042 ;;      Params:         0       1       0
  3043 ;;      Locals:         0       2       0
  3044 ;;      Temps:          0       1       0
  3045 ;;      Totals:         0       4       0
  3046 ;;Total ram usage:        4 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    4
  3049 ;; This function calls:
  3050 ;;		_even_check
  3051 ;; This function is called by:
  3052 ;;		_main_process
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _Uart1SendString
  3058  0405                     _Uart1SendString:	
  3059                           
  3060                           ;incstack = 0
  3061                           ; Regs used in _Uart1SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3062                           ;Uart1SendString@a stored from wreg
  3063  0405  0020               	movlb	0	; select bank0
  3064  0406  00A7               	movwf	Uart1SendString@a
  3065                           
  3066                           ;usart.c: 59: u8 i = 0 ;
  3067  0407  01A8               	clrf	Uart1SendString@i
  3068                           
  3069                           ;usart.c: 60: for( i = DatLong ; i > 0; i--, a++) {
  3070  0408  0825               	movf	Uart1SendString@DatLong,w
  3071  0409  00A6               	movwf	??_Uart1SendString
  3072  040A  0826               	movf	??_Uart1SendString,w
  3073  040B  00A8               	movwf	Uart1SendString@i
  3074  040C                     L2:	
  3075  040C  0828               	movf	Uart1SendString@i,w
  3076  040D  1903               	btfsc	3,2
  3077  040E  0008               	return
  3078  040F                     l280:	
  3079                           ;usart.c: 61: while(!TRMT);
  3080                           
  3081  040F  0023               	movlb	3	; select bank3
  3082  0410  1C9E               	btfss	30,1	;volatile
  3083  0411  2C0F               	goto	l280
  3084                           
  3085                           ;usart.c: 62: TXREG = *a ;
  3086  0412  0020               	movlb	0	; select bank0
  3087  0413  0827               	movf	Uart1SendString@a,w
  3088  0414  0086               	movwf	6
  3089  0415  0187               	clrf	7
  3090  0416  0801               	movf	1,w
  3091  0417  0023               	movlb	3	; select bank3
  3092  0418  009A               	movwf	26	;volatile
  3093                           
  3094                           ;usart.c: 63: TX9D = even_check(*a);
  3095  0419  0020               	movlb	0	; select bank0
  3096  041A  0827               	movf	Uart1SendString@a,w
  3097  041B  0086               	movwf	6
  3098  041C  0187               	clrf	7
  3099  041D  0801               	movf	1,w
  3100  041E  24D0               	fcall	_even_check
  3101  041F  0020               	movlb	0	; select bank0
  3102  0420  00A6               	movwf	??_Uart1SendString
  3103  0421  0C26               	rrf	??_Uart1SendString,w
  3104  0422  1C03               	btfss	3,0
  3105  0423  2C27               	goto	u1430
  3106  0424  0023               	movlb	3	; select bank3
  3107  0425  141E               	bsf	30,0	;volatile
  3108  0426  2C29               	goto	l1606
  3109  0427                     u1430:	
  3110  0427  0023               	movlb	3	; select bank3
  3111  0428  101E               	bcf	30,0	;volatile
  3112  0429                     l1606:	
  3113  0429  3001               	movlw	1
  3114  042A  0020               	movlb	0	; select bank0
  3115  042B  02A8               	subwf	Uart1SendString@i,f
  3116  042C  3001               	movlw	1
  3117  042D  00A6               	movwf	??_Uart1SendString
  3118  042E  0826               	movf	??_Uart1SendString,w
  3119  042F  07A7               	addwf	Uart1SendString@a,f
  3120  0430  2C0C               	goto	L2
  3121  0431                     __end_of_Uart1SendString:	
  3122                           
  3123                           	psect	text15
  3124  04D0                     __ptext15:	
  3125 ;; *************** function _even_check *****************
  3126 ;; Defined at:
  3127 ;;		line 74 in file "source/usart.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  data            1    wreg     unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  data            1    4[BANK0 ] unsigned char 
  3132 ;;  res             1    3[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      unsigned char 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1
  3142 ;;      Params:         0       0       0
  3143 ;;      Locals:         0       2       0
  3144 ;;      Temps:          0       1       0
  3145 ;;      Totals:         0       3       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    3
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_Uart1SendString
  3153 ;;		_Uart1SendByte
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _even_check
  3159  04D0                     _even_check:	
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _even_check: [wreg+status,2+status,0]
  3163                           ;even_check@data stored from wreg
  3164  04D0  0020               	movlb	0	; select bank0
  3165  04D1  00A4               	movwf	even_check@data
  3166  04D2                     l286:	
  3167                           ;usart.c: 75: u8 res;
  3168                           ;usart.c: 76: while (data) {
  3169                           
  3170  04D2  0824               	movf	even_check@data,w
  3171  04D3  1903               	btfsc	3,2
  3172  04D4  2CE5               	goto	l1448
  3173                           
  3174                           ;usart.c: 77: res = !res;
  3175  04D5  0823               	movf	even_check@res,w
  3176  04D6  1D03               	btfss	3,2
  3177  04D7  2CDA               	goto	u1260
  3178  04D8  3001               	movlw	1
  3179  04D9  2CDB               	goto	u1270
  3180  04DA                     u1260:	
  3181  04DA  3000               	movlw	0
  3182  04DB                     u1270:	
  3183  04DB  00A2               	movwf	??_even_check
  3184  04DC  0822               	movf	??_even_check,w
  3185  04DD  00A3               	movwf	even_check@res
  3186                           
  3187                           ;usart.c: 78: data = data & (data - 1);
  3188  04DE  0824               	movf	even_check@data,w
  3189  04DF  3EFF               	addlw	255
  3190  04E0  0524               	andwf	even_check@data,w
  3191  04E1  00A2               	movwf	??_even_check
  3192  04E2  0822               	movf	??_even_check,w
  3193  04E3  00A4               	movwf	even_check@data
  3194  04E4  2CD2               	goto	l286
  3195  04E5                     l1448:	
  3196                           
  3197                           ;usart.c: 79: }
  3198                           ;usart.c: 80: return res;
  3199  04E5  0823               	movf	even_check@res,w
  3200  04E6  0008               	return
  3201  04E7                     __end_of_even_check:	
  3202                           
  3203                           	psect	text16
  3204  0454                     __ptext16:	
  3205 ;; *************** function _SPI_send_string *****************
  3206 ;; Defined at:
  3207 ;;		line 46 in file "source/SPI.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  str             1    wreg     PTR unsigned char 
  3210 ;;		 -> main_process@buf(8), 
  3211 ;;  length          1    3[BANK0 ] unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  str             1    5[BANK0 ] PTR unsigned char 
  3214 ;;		 -> main_process@buf(8), 
  3215 ;;  index_delay     1    7[BANK0 ] unsigned char 
  3216 ;;  index           1    6[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1
  3226 ;;      Params:         0       1       0
  3227 ;;      Locals:         0       3       0
  3228 ;;      Temps:          0       1       0
  3229 ;;      Totals:         0       5       0
  3230 ;;Total ram usage:        5 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    4
  3233 ;; This function calls:
  3234 ;;		_SPI_send_byte
  3235 ;; This function is called by:
  3236 ;;		_main_process
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _SPI_send_string
  3242  0454                     _SPI_send_string:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _SPI_send_string: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3246                           ;SPI_send_string@str stored from wreg
  3247  0454  0020               	movlb	0	; select bank0
  3248  0455  00A5               	movwf	SPI_send_string@str
  3249                           
  3250                           ;SPI.c: 47: U08ET index, index_delay;
  3251                           ;SPI.c: 48: for (index = 0; index < length; index++){
  3252  0456  01A6               	clrf	SPI_send_string@index
  3253  0457                     l1480:	
  3254  0457  0823               	movf	SPI_send_string@length,w
  3255  0458  0226               	subwf	SPI_send_string@index,w
  3256  0459  1803               	btfsc	3,0
  3257  045A  0008               	return
  3258                           
  3259                           ;SPI.c: 49: SPI_send_byte(str[index]);
  3260  045B  0826               	movf	SPI_send_string@index,w
  3261  045C  0725               	addwf	SPI_send_string@str,w
  3262  045D  00A4               	movwf	??_SPI_send_string
  3263  045E  0824               	movf	??_SPI_send_string,w
  3264  045F  0086               	movwf	6
  3265  0460  0187               	clrf	7
  3266  0461  0801               	movf	1,w
  3267  0462  250C               	fcall	_SPI_send_byte
  3268                           
  3269                           ;SPI.c: 50: for(index_delay = 0; index_delay < 30; index_delay++){}
  3270  0463  0020               	movlb	0	; select bank0
  3271  0464  01A7               	clrf	SPI_send_string@index_delay
  3272  0465  301E               	movlw	30
  3273  0466  0227               	subwf	SPI_send_string@index_delay,w
  3274  0467  1803               	btfsc	3,0
  3275  0468  2C71               	goto	l1478
  3276  0469                     l1474:	
  3277  0469  3001               	movlw	1
  3278  046A  00A4               	movwf	??_SPI_send_string
  3279  046B  0824               	movf	??_SPI_send_string,w
  3280  046C  07A7               	addwf	SPI_send_string@index_delay,f
  3281  046D  301E               	movlw	30
  3282  046E  0227               	subwf	SPI_send_string@index_delay,w
  3283  046F  1C03               	skipc
  3284  0470  2C69               	goto	l1474
  3285  0471                     l1478:	
  3286  0471  3001               	movlw	1
  3287  0472  00A4               	movwf	??_SPI_send_string
  3288  0473  0824               	movf	??_SPI_send_string,w
  3289  0474  07A6               	addwf	SPI_send_string@index,f
  3290  0475  2C57               	goto	l1480
  3291  0476                     __end_of_SPI_send_string:	
  3292                           
  3293                           	psect	text17
  3294  050C                     __ptext17:	
  3295 ;; *************** function _SPI_send_byte *****************
  3296 ;; Defined at:
  3297 ;;		line 37 in file "source/SPI.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  data            1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  data            1    2[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1
  3311 ;;      Params:         0       0       0
  3312 ;;      Locals:         0       1       0
  3313 ;;      Temps:          0       0       0
  3314 ;;      Totals:         0       1       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    3
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_SPI_send_string
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _SPI_send_byte
  3327  050C                     _SPI_send_byte:	
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _SPI_send_byte: [wreg]
  3331                           ;SPI_send_byte@data stored from wreg
  3332  050C  0020               	movlb	0	; select bank0
  3333  050D  00A2               	movwf	SPI_send_byte@data
  3334                           
  3335                           ;SPI.c: 39: RC3 = 0;
  3336  050E  118E               	bcf	14,3	;volatile
  3337                           
  3338                           ;SPI.c: 40: SSP1BUF = data;
  3339  050F  0822               	movf	SPI_send_byte@data,w
  3340  0510  0024               	movlb	4	; select bank4
  3341  0511  0091               	movwf	17	;volatile
  3342  0512                     l24:	
  3343                           ;SPI.c: 41: while(SSP1IF == 0);
  3344                           
  3345  0512  0020               	movlb	0	; select bank0
  3346  0513  1D91               	btfss	17,3	;volatile
  3347  0514  2D12               	goto	l24
  3348                           
  3349                           ;SPI.c: 42: SSP1IF=0;
  3350  0515  1191               	bcf	17,3	;volatile
  3351                           
  3352                           ;SPI.c: 43: RC3 = 1;
  3353  0516  158E               	bsf	14,3	;volatile
  3354  0517  0008               	return
  3355  0518                     __end_of_SPI_send_byte:	
  3356                           
  3357                           	psect	intentry
  3358  0004                     __pintentry:	
  3359 ;; *************** function _ISR *****************
  3360 ;; Defined at:
  3361 ;;		line 16 in file "source/timer.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1
  3375 ;;      Params:         0       0       0
  3376 ;;      Locals:         0       0       0
  3377 ;;      Temps:          0       2       0
  3378 ;;      Totals:         0       2       0
  3379 ;;Total ram usage:        2 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    2
  3382 ;; This function calls:
  3383 ;;		_remote_timer_task
  3384 ;; This function is called by:
  3385 ;;		Interrupt level 1
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389  0004                     _ISR:	
  3390                           
  3391                           ;incstack = 0
  3392  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3393                           
  3394                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3395  0005  3180               	pagesel	$
  3396  0006  0020               	movlb	0	; select bank0
  3397  0007  087F               	movf	127,w
  3398  0008  00A1               	movwf	??_ISR+1
  3399                           
  3400                           ;timer.c: 17: if(T0IF==1) {
  3401  0009  1D0B               	btfss	11,2	;volatile
  3402  000A  2819               	goto	i1l218
  3403                           
  3404                           ;timer.c: 18: TMR0=208;
  3405  000B  30D0               	movlw	208
  3406  000C  0095               	movwf	21	;volatile
  3407                           
  3408                           ;timer.c: 19: TMR0IF=0;
  3409  000D  110B               	bcf	11,2	;volatile
  3410                           
  3411                           ;timer.c: 20: T0IF=0;
  3412  000E  110B               	bcf	11,2	;volatile
  3413                           
  3414                           ;timer.c: 21: remote_timer_task();
  3415  000F  2139               	fcall	_remote_timer_task
  3416                           
  3417                           ;timer.c: 22: if (sys_cnt < 50) sys_cnt++;
  3418  0010  3032               	movlw	50
  3419  0011  0020               	movlb	0	; select bank0
  3420  0012  026A               	subwf	_sys_cnt,w
  3421  0013  1803               	skipnc
  3422  0014  2819               	goto	i1l218
  3423  0015  3001               	movlw	1
  3424  0016  00A0               	movwf	??_ISR
  3425  0017  0820               	movf	??_ISR,w
  3426  0018  07EA               	addwf	_sys_cnt,f
  3427  0019                     i1l218:	
  3428  0019  0821               	movf	??_ISR+1,w
  3429  001A  00FF               	movwf	127
  3430  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3431  001C  0009               	retfie
  3432  001D                     __end_of_ISR:	
  3433                           
  3434                           	psect	text19
  3435  0139                     __ptext19:	
  3436 ;; *************** function _remote_timer_task *****************
  3437 ;; Defined at:
  3438 ;;		line 31 in file "source/remote.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  btidx           1   13[COMMON] unsigned char 
  3443 ;;  byidx           1   12[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1
  3453 ;;      Params:         0       0       0
  3454 ;;      Locals:         2       0       0
  3455 ;;      Temps:          3       0       0
  3456 ;;      Totals:         5       0       0
  3457 ;;Total ram usage:        5 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    1
  3460 ;; This function calls:
  3461 ;;		___awdiv
  3462 ;; This function is called by:
  3463 ;;		_ISR
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _remote_timer_task
  3469  0139                     _remote_timer_task:	
  3470                           
  3471                           ;remote.c: 32: static U08ET lv_cnt, tp_cnt;
  3472                           ;remote.c: 33: U08ET byidx,btidx;
  3473                           ;remote.c: 34: remoter.st_last = remoter.st_curt;
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _remote_timer_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3477  0139  0021               	movlb	1	; select bank1
  3478  013A  1CA0               	btfss	_remoter^(0+128),1
  3479  013B  293F               	goto	u161_20
  3480  013C  0021               	movlb	1	; select bank1
  3481  013D  1420               	bsf	_remoter^(0+128),0
  3482  013E  2941               	goto	u162_24
  3483  013F                     u161_20:	
  3484  013F  0021               	movlb	1	; select bank1
  3485  0140  1020               	bcf	_remoter^(0+128),0
  3486  0141                     u162_24:	
  3487                           
  3488                           ;remote.c: 35: remoter.st_curt = (U08ET)RC5;
  3489  0141  10A0               	bcf	_remoter^(0+128),1
  3490  0142  0020               	movlb	0	; select bank0
  3491  0143  1E8E               	btfss	14,5	;volatile
  3492  0144  2947               	goto	i1l1694
  3493  0145  0021               	movlb	1	; select bank1
  3494  0146  14A0               	bsf	_remoter^(0+128),1
  3495  0147                     i1l1694:	
  3496                           
  3497                           ;remote.c: 37: if (remoter.st_last == remoter.st_curt) {
  3498  0147  0021               	movlb	1	; select bank1
  3499  0148  1CA0               	btfss	_remoter^(0+128),1
  3500  0149  294C               	goto	u164_20
  3501  014A  3001               	movlw	1
  3502  014B  294D               	goto	u164_22
  3503  014C                     u164_20:	
  3504  014C  3000               	movlw	0
  3505  014D                     u164_22:	
  3506  014D  00F9               	movwf	??_remote_timer_task
  3507  014E  1C20               	btfss	_remoter^(0+128),0
  3508  014F  2952               	goto	u165_20
  3509  0150  3001               	movlw	1
  3510  0151  2953               	goto	u165_22
  3511  0152                     u165_20:	
  3512  0152  3000               	movlw	0
  3513  0153                     u165_22:	
  3514  0153  0679               	xorwf	??_remote_timer_task,w
  3515  0154  1D03               	skipz
  3516  0155  295C               	goto	i1l1698
  3517                           
  3518                           ;remote.c: 38: lv_cnt++;
  3519  0156  3001               	movlw	1
  3520  0157  00F9               	movwf	??_remote_timer_task
  3521  0158  0879               	movf	??_remote_timer_task,w
  3522  0159  0020               	movlb	0	; select bank0
  3523  015A  07EC               	addwf	remote_timer_task@lv_cnt,f
  3524                           
  3525                           ;remote.c: 39: } else {
  3526  015B  0008               	return
  3527  015C                     i1l1698:	
  3528                           
  3529                           ;remote.c: 40: if ((0) == remoter.st_remo) {
  3530  015C  0021               	movlb	1	; select bank1
  3531  015D  0C20               	rrf	_remoter^(0+128),w
  3532  015E  0C89               	rrf	9,f
  3533  015F  393F               	andlw	63
  3534  0160  3A00               	xorlw	0
  3535  0161  1D03               	skipz
  3536  0162  297F               	goto	i1l1710
  3537                           
  3538                           ;remote.c: 41: if ((lv_cnt >= (4)) && (lv_cnt <= (12))) {
  3539  0163  3004               	movlw	4
  3540  0164  0020               	movlb	0	; select bank0
  3541  0165  026C               	subwf	remote_timer_task@lv_cnt,w
  3542  0166  1C03               	skipc
  3543  0167  297A               	goto	i1l1708
  3544  0168  300D               	movlw	13
  3545  0169  026C               	subwf	remote_timer_task@lv_cnt,w
  3546  016A  1803               	skipnc
  3547  016B  297A               	goto	i1l1708
  3548                           
  3549                           ;remote.c: 42: tp_cnt++;
  3550  016C  3001               	movlw	1
  3551  016D  00F9               	movwf	??_remote_timer_task
  3552  016E  0879               	movf	??_remote_timer_task,w
  3553  016F  07EB               	addwf	remote_timer_task@tp_cnt,f
  3554                           
  3555                           ;remote.c: 43: if ((23) == tp_cnt) remoter.st_remo = (1);
  3556  0170  3017               	movlw	23
  3557  0171  066B               	xorwf	remote_timer_task@tp_cnt,w
  3558  0172  1D03               	btfss	3,2
  3559  0173  297C               	goto	i1l160
  3560  0174  0021               	movlb	1	; select bank1
  3561  0175  0820               	movf	_remoter^(0+128),w
  3562  0176  3903               	andlw	-253
  3563  0177  3804               	iorlw	4
  3564  0178  00A0               	movwf	_remoter^(0+128)
  3565                           
  3566                           ;remote.c: 44: } else tp_cnt = 0;
  3567  0179  297C               	goto	i1l160
  3568  017A                     i1l1708:	
  3569  017A  0020               	movlb	0	; select bank0
  3570  017B  01EB               	clrf	remote_timer_task@tp_cnt
  3571  017C                     i1l160:	
  3572                           
  3573                           ;remote.c: 45: lv_cnt = 0;
  3574  017C  0020               	movlb	0	; select bank0
  3575  017D  01EC               	clrf	remote_timer_task@lv_cnt
  3576                           
  3577                           ;remote.c: 46: } else if ((1) == remoter.st_remo) {
  3578  017E  0008               	return
  3579  017F                     i1l1710:	
  3580  017F  0021               	movlb	1	; select bank1
  3581  0180  0C20               	rrf	_remoter^(0+128),w
  3582  0181  0C89               	rrf	9,f
  3583  0182  393F               	andlw	63
  3584  0183  3A01               	xorlw	1
  3585  0184  1D03               	skipz
  3586  0185  299E               	goto	i1l1726
  3587                           
  3588                           ;remote.c: 47: if ((1 == remoter.st_curt) && (lv_cnt>=(70)) && (lv_cnt<=(90))) {
  3589  0186  1CA0               	btfss	_remoter^(0+128),1
  3590  0187  2998               	goto	i1l1722
  3591  0188  3046               	movlw	70
  3592  0189  0020               	movlb	0	; select bank0
  3593  018A  026C               	subwf	remote_timer_task@lv_cnt,w
  3594  018B  1C03               	skipc
  3595  018C  2998               	goto	i1l1722
  3596  018D  305B               	movlw	91
  3597  018E  026C               	subwf	remote_timer_task@lv_cnt,w
  3598  018F  1803               	skipnc
  3599  0190  2998               	goto	i1l1722
  3600                           
  3601                           ;remote.c: 48: remoter.st_remo = (2);
  3602  0191  0021               	movlb	1	; select bank1
  3603  0192  0820               	movf	_remoter^(0+128),w
  3604  0193  3903               	andlw	-253
  3605  0194  3808               	iorlw	8
  3606  0195  00A0               	movwf	_remoter^(0+128)
  3607                           
  3608                           ;remote.c: 49: remoter.recvidx = 0;
  3609  0196  01A1               	clrf	(_remoter^(0+128)+1)
  3610                           
  3611                           ;remote.c: 50: } else remoter.st_remo = (0);
  3612  0197  299B               	goto	i1l1724
  3613  0198                     i1l1722:	
  3614  0198  3003               	movlw	-253
  3615  0199  0021               	movlb	1	; select bank1
  3616  019A  05A0               	andwf	_remoter^(0+128),f
  3617  019B                     i1l1724:	
  3618                           
  3619                           ;remote.c: 51: lv_cnt = 0;
  3620  019B  0020               	movlb	0	; select bank0
  3621  019C  01EC               	clrf	remote_timer_task@lv_cnt
  3622                           
  3623                           ;remote.c: 52: } else if ((2) == remoter.st_remo) {
  3624  019D  0008               	return
  3625  019E                     i1l1726:	
  3626  019E  0021               	movlb	1	; select bank1
  3627  019F  0C20               	rrf	_remoter^(0+128),w
  3628  01A0  0C89               	rrf	9,f
  3629  01A1  393F               	andlw	63
  3630  01A2  3A02               	xorlw	2
  3631  01A3  1D03               	skipz
  3632  01A4  0008               	return
  3633                           
  3634                           ;remote.c: 53: if (1==remoter.st_curt) {
  3635  01A5  1CA0               	btfss	_remoter^(0+128),1
  3636  01A6  2A00               	goto	i1l1756
  3637                           
  3638                           ;remote.c: 54: byidx = remoter.recvidx/8;
  3639  01A7  3008               	movlw	8
  3640  01A8  00F0               	movwf	___awdiv@divisor
  3641  01A9  3000               	movlw	0
  3642  01AA  00F1               	movwf	___awdiv@divisor+1
  3643  01AB  0821               	movf	(_remoter^(0+128)+1),w
  3644  01AC  00F9               	movwf	??_remote_timer_task
  3645  01AD  01FA               	clrf	??_remote_timer_task+1
  3646  01AE  0879               	movf	??_remote_timer_task,w
  3647  01AF  00F2               	movwf	___awdiv@dividend
  3648  01B0  087A               	movf	??_remote_timer_task+1,w
  3649  01B1  00F3               	movwf	___awdiv@dividend+1
  3650  01B2  2384               	fcall	___awdiv
  3651  01B3  0870               	movf	?___awdiv,w
  3652  01B4  00FB               	movwf	??_remote_timer_task+2
  3653  01B5  087B               	movf	??_remote_timer_task+2,w
  3654  01B6  00FC               	movwf	remote_timer_task@byidx
  3655                           
  3656                           ;remote.c: 55: btidx = remoter.recvidx%8;
  3657  01B7  0021               	movlb	1	; select bank1
  3658  01B8  0821               	movf	(_remoter^(0+128)+1),w
  3659  01B9  3907               	andlw	7
  3660  01BA  00F9               	movwf	??_remote_timer_task
  3661  01BB  0879               	movf	??_remote_timer_task,w
  3662  01BC  00FD               	movwf	remote_timer_task@btidx
  3663                           
  3664                           ;remote.c: 56: if ((lv_cnt>=(4)) && (lv_cnt<=(10))) {
  3665  01BD  3004               	movlw	4
  3666  01BE  0020               	movlb	0	; select bank0
  3667  01BF  026C               	subwf	remote_timer_task@lv_cnt,w
  3668  01C0  1C03               	skipc
  3669  01C1  29D7               	goto	i1l1742
  3670  01C2  300B               	movlw	11
  3671  01C3  026C               	subwf	remote_timer_task@lv_cnt,w
  3672  01C4  1803               	skipnc
  3673  01C5  29D7               	goto	i1l1742
  3674                           
  3675                           ;remote.c: 57: remoter.rbuf[byidx] &= (U08ET)(~(1<<btidx));
  3676  01C6  3001               	movlw	1
  3677  01C7  00F9               	movwf	??_remote_timer_task
  3678  01C8  0A7D               	incf	remote_timer_task@btidx,w
  3679  01C9  29CB               	goto	u179_24
  3680  01CA                     u179_25:	
  3681  01CA  35F9               	lslf	??_remote_timer_task,f
  3682  01CB                     u179_24:	
  3683  01CB  0B89               	decfsz	9,f
  3684  01CC  29CA               	goto	u179_25
  3685  01CD  0879               	movf	??_remote_timer_task,w
  3686  01CE  3AFF               	xorlw	255
  3687  01CF  00FA               	movwf	??_remote_timer_task+1
  3688  01D0  087C               	movf	remote_timer_task@byidx,w
  3689  01D1  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  3690  01D2  0086               	movwf	6
  3691  01D3  0187               	clrf	7
  3692  01D4  087A               	movf	??_remote_timer_task+1,w
  3693  01D5  0581               	andwf	1,f
  3694  01D6  29EF               	goto	i1l1748
  3695  01D7                     i1l1742:	
  3696                           ;remote.c: 59: } else if ((lv_cnt>=(12)) && (lv_cnt<=(20))) {
  3697                           
  3698                           ;remote.c: 58: remoter.recvidx++;
  3699                           
  3700  01D7  300C               	movlw	12
  3701  01D8  0020               	movlb	0	; select bank0
  3702  01D9  026C               	subwf	remote_timer_task@lv_cnt,w
  3703  01DA  1C03               	skipc
  3704  01DB  29F5               	goto	i1l1750
  3705  01DC  3015               	movlw	21
  3706  01DD  026C               	subwf	remote_timer_task@lv_cnt,w
  3707  01DE  1803               	skipnc
  3708  01DF  29F5               	goto	i1l1750
  3709                           
  3710                           ;remote.c: 60: remoter.rbuf[byidx] |= (U08ET)(1<<btidx);
  3711  01E0  3001               	movlw	1
  3712  01E1  00F9               	movwf	??_remote_timer_task
  3713  01E2  0A7D               	incf	remote_timer_task@btidx,w
  3714  01E3  29E5               	goto	u182_24
  3715  01E4                     u182_25:	
  3716  01E4  35F9               	lslf	??_remote_timer_task,f
  3717  01E5                     u182_24:	
  3718  01E5  0B89               	decfsz	9,f
  3719  01E6  29E4               	goto	u182_25
  3720  01E7  0879               	movf	??_remote_timer_task,w
  3721  01E8  00FA               	movwf	??_remote_timer_task+1
  3722  01E9  087C               	movf	remote_timer_task@byidx,w
  3723  01EA  3EA2               	addlw	(low ((_remoter| 0+2)))& (0+255)
  3724  01EB  0086               	movwf	6
  3725  01EC  0187               	clrf	7
  3726  01ED  087A               	movf	??_remote_timer_task+1,w
  3727  01EE  0481               	iorwf	1,f
  3728  01EF                     i1l1748:	
  3729                           
  3730                           ;remote.c: 61: remoter.recvidx++;
  3731  01EF  3001               	movlw	1
  3732  01F0  00F9               	movwf	??_remote_timer_task
  3733  01F1  0879               	movf	??_remote_timer_task,w
  3734  01F2  0021               	movlb	1	; select bank1
  3735  01F3  07A1               	addwf	(_remoter^(0+128)+1),f
  3736                           
  3737                           ;remote.c: 62: } else remoter.st_remo = (0);
  3738  01F4  29F8               	goto	i1l1752
  3739  01F5                     i1l1750:	
  3740  01F5  3003               	movlw	-253
  3741  01F6  0021               	movlb	1	; select bank1
  3742  01F7  05A0               	andwf	_remoter^(0+128),f
  3743  01F8                     i1l1752:	
  3744                           
  3745                           ;remote.c: 64: if(remoter.recvidx >= (8)*8) remoter.st_remo = (3);
  3746  01F8  3040               	movlw	64
  3747  01F9  0221               	subwf	(_remoter^(0+128)+1),w
  3748  01FA  1C03               	skipc
  3749  01FB  2A00               	goto	i1l1756
  3750  01FC  0820               	movf	_remoter^(0+128),w
  3751  01FD  3903               	andlw	-253
  3752  01FE  380C               	iorlw	12
  3753  01FF  00A0               	movwf	_remoter^(0+128)
  3754  0200                     i1l1756:	
  3755                           
  3756                           ;remote.c: 65: }
  3757                           ;remote.c: 66: lv_cnt = 0;
  3758  0200  0020               	movlb	0	; select bank0
  3759  0201  01EC               	clrf	remote_timer_task@lv_cnt
  3760  0202  0008               	return
  3761  0203                     __end_of_remote_timer_task:	
  3762                           
  3763                           	psect	text20
  3764  0384                     __ptext20:	
  3765 ;; *************** function ___awdiv *****************
  3766 ;; Defined at:
  3767 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  divisor         2    0[COMMON] int 
  3770 ;;  dividend        2    2[COMMON] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  quotient        2    7[COMMON] int 
  3773 ;;  sign            1    6[COMMON] unsigned char 
  3774 ;;  counter         1    5[COMMON] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    0[COMMON] int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1
  3784 ;;      Params:         4       0       0
  3785 ;;      Locals:         4       0       0
  3786 ;;      Temps:          1       0       0
  3787 ;;      Totals:         9       0       0
  3788 ;;Total ram usage:        9 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_remote_timer_task
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function ___awdiv
  3799  0384                     ___awdiv:	
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3803  0384  01F6               	clrf	___awdiv@sign
  3804  0385  1FF1               	btfss	___awdiv@divisor+1,7
  3805  0386  2B8E               	goto	i1l1626
  3806  0387  09F0               	comf	___awdiv@divisor,f
  3807  0388  09F1               	comf	___awdiv@divisor+1,f
  3808  0389  0AF0               	incf	___awdiv@divisor,f
  3809  038A  1903               	skipnz
  3810  038B  0AF1               	incf	___awdiv@divisor+1,f
  3811  038C  01F6               	clrf	___awdiv@sign
  3812  038D  0AF6               	incf	___awdiv@sign,f
  3813  038E                     i1l1626:	
  3814  038E  1FF3               	btfss	___awdiv@dividend+1,7
  3815  038F  2B99               	goto	i1l1632
  3816  0390  09F2               	comf	___awdiv@dividend,f
  3817  0391  09F3               	comf	___awdiv@dividend+1,f
  3818  0392  0AF2               	incf	___awdiv@dividend,f
  3819  0393  1903               	skipnz
  3820  0394  0AF3               	incf	___awdiv@dividend+1,f
  3821  0395  3001               	movlw	1
  3822  0396  00F4               	movwf	??___awdiv
  3823  0397  0874               	movf	??___awdiv,w
  3824  0398  06F6               	xorwf	___awdiv@sign,f
  3825  0399                     i1l1632:	
  3826  0399  01F7               	clrf	___awdiv@quotient
  3827  039A  01F8               	clrf	___awdiv@quotient+1
  3828  039B  0870               	movf	___awdiv@divisor,w
  3829  039C  0471               	iorwf	___awdiv@divisor+1,w
  3830  039D  1903               	btfsc	3,2
  3831  039E  2BC8               	goto	i1l1654
  3832  039F  01F5               	clrf	___awdiv@counter
  3833  03A0  0AF5               	incf	___awdiv@counter,f
  3834  03A1                     i1l1642:	
  3835  03A1  1BF1               	btfsc	___awdiv@divisor+1,7
  3836  03A2  2BAD               	goto	i1l1644
  3837  03A3  3001               	movlw	1
  3838  03A4                     u152_25:	
  3839  03A4  35F0               	lslf	___awdiv@divisor,f
  3840  03A5  0DF1               	rlf	___awdiv@divisor+1,f
  3841  03A6  0B89               	decfsz	9,f
  3842  03A7  2BA4               	goto	u152_25
  3843  03A8  3001               	movlw	1
  3844  03A9  00F4               	movwf	??___awdiv
  3845  03AA  0874               	movf	??___awdiv,w
  3846  03AB  07F5               	addwf	___awdiv@counter,f
  3847  03AC  2BA1               	goto	i1l1642
  3848  03AD                     i1l1644:	
  3849  03AD  3001               	movlw	1
  3850  03AE                     u154_25:	
  3851  03AE  35F7               	lslf	___awdiv@quotient,f
  3852  03AF  0DF8               	rlf	___awdiv@quotient+1,f
  3853  03B0  0B89               	decfsz	9,f
  3854  03B1  2BAE               	goto	u154_25
  3855  03B2  0871               	movf	___awdiv@divisor+1,w
  3856  03B3  0273               	subwf	___awdiv@dividend+1,w
  3857  03B4  1D03               	skipz
  3858  03B5  2BB8               	goto	u155_25
  3859  03B6  0870               	movf	___awdiv@divisor,w
  3860  03B7  0272               	subwf	___awdiv@dividend,w
  3861  03B8                     u155_25:	
  3862  03B8  1C03               	skipc
  3863  03B9  2BBF               	goto	i1l1650
  3864  03BA  0870               	movf	___awdiv@divisor,w
  3865  03BB  02F2               	subwf	___awdiv@dividend,f
  3866  03BC  0871               	movf	___awdiv@divisor+1,w
  3867  03BD  3BF3               	subwfb	___awdiv@dividend+1,f
  3868  03BE  1477               	bsf	___awdiv@quotient,0
  3869  03BF                     i1l1650:	
  3870  03BF  3001               	movlw	1
  3871  03C0                     u156_25:	
  3872  03C0  36F1               	lsrf	___awdiv@divisor+1,f
  3873  03C1  0CF0               	rrf	___awdiv@divisor,f
  3874  03C2  0B89               	decfsz	9,f
  3875  03C3  2BC0               	goto	u156_25
  3876  03C4  3001               	movlw	1
  3877  03C5  02F5               	subwf	___awdiv@counter,f
  3878  03C6  1D03               	btfss	3,2
  3879  03C7  2BAD               	goto	i1l1644
  3880  03C8                     i1l1654:	
  3881  03C8  0876               	movf	___awdiv@sign,w
  3882  03C9  1903               	btfsc	3,2
  3883  03CA  2BD0               	goto	i1l1658
  3884  03CB  09F7               	comf	___awdiv@quotient,f
  3885  03CC  09F8               	comf	___awdiv@quotient+1,f
  3886  03CD  0AF7               	incf	___awdiv@quotient,f
  3887  03CE  1903               	skipnz
  3888  03CF  0AF8               	incf	___awdiv@quotient+1,f
  3889  03D0                     i1l1658:	
  3890  03D0  0878               	movf	___awdiv@quotient+1,w
  3891  03D1  00F1               	movwf	?___awdiv+1
  3892  03D2  0877               	movf	___awdiv@quotient,w
  3893  03D3  00F0               	movwf	?___awdiv
  3894  03D4  0008               	return
  3895  03D5                     __end_of___awdiv:	
  3896  007E                     btemp	set	126	;btemp
  3897  007E                     int$flags	set	126
  3898  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    44
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      78
    BANK1            32      0      19

Pointer List with Targets:

    Uart1SendString@a	PTR unsigned char  size(1) Largest target is 8
		 -> main_process@buf(BANK0[8]), 

    remote_hits@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main_process@buf(BANK0[8]), 

    remote_gkey@pbuf	PTR unsigned char  size(1) Largest target is 8
		 -> remote_hits@rf_buf(BANK0[8]), 

    data_construct@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main_process@buf(BANK0[8]), 

    sp__RLC	PTR unsigned char  size(1) Largest target is 0

    getBit@source	PTR unsigned char  size(2) Largest target is 8
		 -> CUSTOMER_code(CODE[8]), remote_hits@lrn_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 

    sp__DEcrypt	PTR unsigned char  size(1) Largest target is 8
		 -> remote_hits@lrn_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 

    DEcrypt@_key	PTR unsigned char  size(2) Largest target is 8
		 -> CUSTOMER_code(CODE[8]), remote_hits@lrn_buf(BANK0[8]), 

    DEcrypt@source	PTR unsigned char  size(1) Largest target is 8
		 -> remote_hits@lrn_buf(BANK0[8]), remote_hits@rf_buf(BANK0[8]), 

    sp__ENcrypt	PTR unsigned char  size(1) Largest target is 0

    sp__RRC	PTR unsigned char  size(1) Largest target is 0

    SPI_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> main_process@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_remote_timer_task
    _remote_timer_task->___awdiv

Critical Paths under _main in BANK0

    _main->_main_process
    _sys_init->_remote_init
    _main_process->_remote_hits
    _remote_hits->_DEcrypt
    _DEcrypt->_getBit
    _Uart1SendString->_even_check
    _SPI_send_string->_SPI_send_byte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    5159
                                             70 BANK0      4     0      4
                       _main_process
                           _sys_init
                           _sys_task
 ---------------------------------------------------------------------------------
 (1) _sys_task                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0      90
                          _Init_Uart
                           _SPI_init
                          _init_fosc
                        _init_timer0
                        _remote_init
 ---------------------------------------------------------------------------------
 (2) _remote_init                                          2     2      0      90
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_fosc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_init                                             1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_Uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_process                                         9     9      0    5069
                                             61 BANK0      9     9      0
                    _SPI_send_string
                    _Uart1SendString
                     _data_construct
                        _remote_hits
 ---------------------------------------------------------------------------------
 (2) _remote_hits                                         20    20      0    3869
                                             41 BANK0     20    20      0
                            _DEcrypt
                        _remote_gkey
 ---------------------------------------------------------------------------------
 (3) _remote_gkey                                          4     4      0     383
                                              2 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _DEcrypt                                             29    27      2    2727
                                             12 BANK0     29    27      2
                             _getBit
 ---------------------------------------------------------------------------------
 (4) _getBit                                              10     6      4    1808
                                              2 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _data_construct                                      12    12      0     544
                                              2 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) _Uart1SendString                                      4     3      1     306
                                              5 BANK0      4     3      1
                         _even_check
 ---------------------------------------------------------------------------------
 (3) _even_check                                           3     3      0     112
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SPI_send_string                                      5     4      1     238
                                              3 BANK0      5     4      1
                      _SPI_send_byte
 ---------------------------------------------------------------------------------
 (3) _SPI_send_byte                                        1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0     496
                                              0 BANK0      2     2      0
                  _remote_timer_task
 ---------------------------------------------------------------------------------
 (6) _remote_timer_task                                    5     5      0     496
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _main_process
     _SPI_send_string
       _SPI_send_byte
     _Uart1SendString
       _even_check
     _data_construct
     _remote_hits
       _DEcrypt
         _getBit
       _remote_gkey
   _sys_init
     _Init_Uart
     _SPI_init
     _init_fosc
     _init_timer0
     _remote_init
   _sys_task

 _ISR (ROOT)
   _remote_timer_task
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4A      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      13       8       59.4%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      6F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 17:27:47 2018

                __CFG_CP$ON 0000        SPI_send_string@index 0026                          l24 0512  
     SPI_send_string@length 0023                ___awdiv@sign 0076                         l280 040F  
                       l286 04D2                         _GIE 005F                         _RC3 0073  
                       _RC5 0075                         _NLF 0476                __CFG_CPD$OFF 0000  
                       _ISR 0004                         _RX9 0CEE                         _TX9 0CF6  
                       wreg 0009                __CFG_LVP$OFF 0000                        ?_ISR 0070  
                      l1402 0235                        l1430 025E                        l1424 0258  
                      l1416 024F                        l1408 023B                        l1338 0403  
                      l1514 0452                        l1436 0280                        l1524 02B6  
                      l1508 0440                        l1606 0429                        l1374 020E  
                      l1550 0303                        l1480 0457                        l1448 04E5  
                      l1474 0469                        l1562 031E                        l1546 0301  
                      l1572 0327                        l1388 021F                        l1556 0308  
                      l1478 0471                        l1578 033D                        l1682 051F  
                      l1780 0535                __CFG_WDTE$ON 0000                        _BRGH 0CF2  
                      _T0IE 005D                        _CREN 0CEC                        _T0IF 005A  
                      _FERR 0CEA                        u1034 03FB                        u1035 03FA  
                      u1075 00EF                        _CSRC 0CF7                        u1260 04DA  
                      u1085 0105                        u1270 04DB                        u1430 0427  
                      u1095 011B                        _PIR1 0011                        _OERR 0CE9  
           __end_of_DEcrypt 0139                        _TMR0 0015                        _SPEN 0CEF  
                      _TX9D 0CF0                        _SREN 0CED                        _TRMT 0CF1  
                      _TXEN 0CF5                        _SYNC 0CF4                        _WPUC 020E  
             __CFG_FCMEN$ON 0000                        _main 0534                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
             __CFG_BOREN$ON 0000      __size_of_SPI_send_byte 000C                        start 001D  
             __CFG_IESO$OFF 0000               _CUSTOMER_code 052C                       ??_ISR 0020  
                     _ADDEN 0CEB                       ?_main 0066               ?_main_process 0070  
           __end_of___awdiv 03D5                       _BRG16 0CFB             ___awdiv@divisor 0070  
                     i1l160 017C                       i1l218 0019             ___awdiv@counter 0075  
             DEcrypt@source 0048                       _TRISC 008E                       _TXREG 019A  
              ?_init_timer0 0070               __CFG_PWRTE$ON 0000              _data_construct 0320  
           __end_of_sav_key 054C            __end_of_SPI_init 04B3                       status 0003  
                     wtemp0 007E              __CFG_MCLRE$OFF 0000             __initialization 001E  
              __end_of_main 053C              ??_main_process 005D                      ??_main 006A  
             _SPI_send_byte 050C              __CFG_PLLEN$OFF 0000      __end_of_data_construct 0384  
                 ??_DEcrypt 002E            ___awdiv@dividend 0072                      _APFCON 011D  
                    i1l1710 017F                      i1l1632 0399                      i1l1650 03BF  
                    i1l1642 03A1                      i1l1626 038E                      i1l1722 0198  
                    i1l1644 03AD                      i1l1724 019B                      i1l1708 017A  
                    i1l1654 03C8                      i1l1750 01F5                      i1l1742 01D7  
                    i1l1726 019E                      i1l1752 01F8                      i1l1658 03D0  
                    i1l1748 01EF                      i1l1756 0200                      i1l1694 0147  
                    i1l1698 015C                      u152_25 03A4                      u161_20 013F  
                    u162_24 0141                      u154_25 03AE                      u155_25 03B8  
                    u164_20 014C                      u164_22 014D                      u156_25 03C0  
                    u165_20 0152                      u165_22 0153                      u182_24 01E5  
                    u182_25 01E4                      u179_24 01CB                      u179_25 01CA  
                    _OSCCON 0099                      _TMR0IF 005A                      _SPBRGH 019C  
                    _SPBRGL 019B                      _SSP1IF 008B                      _WDTCON 0097  
        __size_of_Init_Uart 001D                ?_remote_gkey 0070                ?_remote_hits 0070  
              ?_remote_init 0070              even_check@data 0024                   ??___awdiv 0074  
                    _getBit 03D5            ___awdiv@quotient 0077              ?_SPI_send_byte 0070  
           ?_data_construct 0070    __size_of_SPI_send_string 0022            __end_of_sys_init 050C  
          __end_of_sys_task 0522     __end_of__initialization 0029              __pcstackCOMMON 0070  
               DEcrypt@_key 002C    __size_of_Uart1SendString 002C                 DEcrypt@bitk 0042  
                 ?_SPI_init 0070           __end_of_Init_Uart 04D0           SPI_send_byte@data 0022  
      __size_of_init_timer0 000A                  __pbssBANK0 006A                  __pbssBANK1 00A0  
      __end_of_main_process 04FD          __size_of_init_fosc 0006                  __pmaintext 0534  
                   ?_getBit 0022                  __pintentry 0004             ??_SPI_send_byte 0022  
                   _BAUDCON 019F                  ??_SPI_init 0022              remote_hits@buf 004B  
                   _DEcrypt 002C           _remote_timer_task 0139                     _SSP1ADD 0212  
    Uart1SendString@DatLong 0025                     _SSP1BUF 0211          ?_remote_timer_task 0070  
         ??_SPI_send_string 0024         ??_remote_timer_task 0079                  _even_check 04D0  
      __size_of_remote_gkey 00AA        __size_of_remote_hits 0073        __size_of_remote_init 0023  
          remote_gkey@index 0025                     ___awdiv 0384     remote_timer_task@lv_cnt 006C  
           __size_of_getBit 0030                     _de_code 006D     remote_timer_task@tp_cnt 006B  
                   __ptext1 0518                     __ptext2 04FD                     __ptext3 0431  
                   __ptext4 0522                     __ptext5 0542                     __ptext6 0496  
                   __ptext7 04B3                     __ptext8 04E7                     __ptext9 02AD  
                 ?_sys_init 0070           ??_Uart1SendString 0026                   ?_sys_task 0070  
              __size_of_ISR 0019   __end_of_remote_timer_task 0203           __end_of_init_fosc 0548  
          remote_hits@index 005C                     getBit@n 0024                     _sav_key 0548  
                   _remoter 00A0            remote_init@index 0023                     clrloop0 053D  
                   _sys_cnt 006A        end_of_initialization 0029            ??_data_construct 0022  
                ??_sys_init 0024                  ??_sys_task 0022            __CFG_FOSC$INTOSC 0000  
     __size_of_main_process 0016                 ?_even_check 0070                DEcrypt@index 0046  
            __end_of_getBit 0405                _main_process 04E7  __size_of_remote_timer_task 00CA  
SPI_send_string@index_delay 0027         start_initialization 001E           __size_of_SPI_init 001D  
               __end_of_NLF 0496                 __end_of_ISR 001D                   _Init_Uart 04B3  
     __end_of_CUSTOMER_code 0534               even_check@res 0023                    ??_getBit 0026  
             ??_init_timer0 0022                   ___latbits 0000               __pcstackBANK0 0020  
           _SPI_send_string 0454                    ?_DEcrypt 002C         __size_of_even_check 0017  
                ?_Init_Uart 0070                  DEcrypt@res 0041             _Uart1SendString 0405  
    data_construct@temp_buf 0024                    ?___awdiv 0070       __end_of_SPI_send_byte 0518  
         __size_of_sys_init 000F           __size_of_sys_task 000A      remote_timer_task@btidx 007D  
           remote_gkey@pbuf 0024      remote_timer_task@byidx 007C                   _init_fosc 0542  
       __end_of_init_timer0 052C               ??_remote_gkey 0022               ??_remote_hits 0049  
             ??_remote_init 0022                   clear_ram0 053C          remote_hits@lrn_buf 004C  
                  _SSP1CON1 0215                    _SSP1STAT 0214     __end_of_SPI_send_string 0476  
        SPI_send_string@str 0025                    _SPI_init 0496                 ??_Init_Uart 0022  
          __size_of_DEcrypt 010D                  ?_init_fosc 0070     __end_of_Uart1SendString 0431  
              getBit@source 0022                ??_even_check 0022         __end_of_remote_gkey 02AD  
       __end_of_remote_hits 0320         __end_of_remote_init 0454            __size_of___awdiv 0051  
          Uart1SendString@a 0027            Uart1SendString@i 0028                 _init_timer0 0522  
        __end_of_even_check 04E7                    __ptext10 0203                    __ptext11 002C  
                  __ptext20 0384                    __ptext12 03D5                    __ptext13 0320  
                  __ptext14 0405                    __ptext15 04D0                    __ptext16 0454  
                  __ptext17 050C                    __ptext19 0139               __size_of_main 0008  
         remote_hits@rf_buf 0054                    int$flags 007E                    main@argc 0066  
                  main@argv 0068            ?_SPI_send_string 0023                    _sys_ctrl 00AE  
                  _sys_init 04FD                    _sys_task 0518                 getBit@btidx 002B  
               getBit@byidx 002A                 ??_init_fosc 0022     __size_of_data_construct 0064  
                  intlevel1 0000            ?_Uart1SendString 0025                 _remote_gkey 0203  
               _remote_hits 02AD                 _remote_init 0431               __pstringtext1 0476  
             __pstringtext2 0548               __pstringtext3 052C                  _OPTION_REG 0095  
       data_construct@index 002C             main_process@buf 005E           data_construct@buf 002D  
